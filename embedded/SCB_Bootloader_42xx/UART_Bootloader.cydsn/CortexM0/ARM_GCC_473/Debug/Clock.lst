ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Clock.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Clock_Start,"ax",%progbits
  18              		.align	1
  19              		.global	Clock_Start
  20              		.code	16
  21              		.thumb_func
  22              		.type	Clock_Start, %function
  23              	Clock_Start:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\Clock.c"
   1:.\Generated_Source\PSoC4/Clock.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/Clock.c **** * File Name: Clock.c
   3:.\Generated_Source\PSoC4/Clock.c **** * Version 2.10
   4:.\Generated_Source\PSoC4/Clock.c **** *
   5:.\Generated_Source\PSoC4/Clock.c **** *  Description:
   6:.\Generated_Source\PSoC4/Clock.c **** *   Provides system API for the clocking, interrupts and watchdog timer.
   7:.\Generated_Source\PSoC4/Clock.c **** *
   8:.\Generated_Source\PSoC4/Clock.c **** *  Note:
   9:.\Generated_Source\PSoC4/Clock.c **** *   Documentation of the API's in this file is located in the
  10:.\Generated_Source\PSoC4/Clock.c **** *   System Reference Guide provided with PSoC Creator.
  11:.\Generated_Source\PSoC4/Clock.c **** *
  12:.\Generated_Source\PSoC4/Clock.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/Clock.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/Clock.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/Clock.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/Clock.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/Clock.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/Clock.c **** 
  19:.\Generated_Source\PSoC4/Clock.c **** #include <cydevice_trm.h>
  20:.\Generated_Source\PSoC4/Clock.c **** #include "Clock.h"
  21:.\Generated_Source\PSoC4/Clock.c **** 
  22:.\Generated_Source\PSoC4/Clock.c **** 
  23:.\Generated_Source\PSoC4/Clock.c **** /*******************************************************************************
  24:.\Generated_Source\PSoC4/Clock.c **** * Function Name: Clock_Start
  25:.\Generated_Source\PSoC4/Clock.c **** ********************************************************************************
  26:.\Generated_Source\PSoC4/Clock.c **** *
  27:.\Generated_Source\PSoC4/Clock.c **** * Summary:
  28:.\Generated_Source\PSoC4/Clock.c **** *  Starts the clock.
  29:.\Generated_Source\PSoC4/Clock.c **** *
  30:.\Generated_Source\PSoC4/Clock.c **** * Parameters:
  31:.\Generated_Source\PSoC4/Clock.c **** *  None
  32:.\Generated_Source\PSoC4/Clock.c **** *
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 2


  33:.\Generated_Source\PSoC4/Clock.c **** * Returns:
  34:.\Generated_Source\PSoC4/Clock.c **** *  None
  35:.\Generated_Source\PSoC4/Clock.c **** *
  36:.\Generated_Source\PSoC4/Clock.c **** *******************************************************************************/
  37:.\Generated_Source\PSoC4/Clock.c **** void Clock_Start(void)
  38:.\Generated_Source\PSoC4/Clock.c **** {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  39:.\Generated_Source\PSoC4/Clock.c ****     /* Set the bit to enable the clock. */
  40:.\Generated_Source\PSoC4/Clock.c ****     Clock_ENABLE_REG |= Clock__ENABLE_MASK;
  28              		.loc 1 40 0
  29 0000 034B     		ldr	r3, .L2
  30 0002 8022     		mov	r2, #128
  31 0004 1968     		ldr	r1, [r3]
  32 0006 1006     		lsl	r0, r2, #24
  33 0008 0843     		orr	r0, r1
  34 000a 1860     		str	r0, [r3]
  41:.\Generated_Source\PSoC4/Clock.c **** }
  35              		.loc 1 41 0
  36              		@ sp needed for prologue
  37 000c 7047     		bx	lr
  38              	.L3:
  39 000e C046     		.align	2
  40              	.L2:
  41 0010 40000240 		.word	1073872960
  42              		.cfi_endproc
  43              	.LFE0:
  44              		.size	Clock_Start, .-Clock_Start
  45              		.section	.text.Clock_Stop,"ax",%progbits
  46              		.align	1
  47              		.global	Clock_Stop
  48              		.code	16
  49              		.thumb_func
  50              		.type	Clock_Stop, %function
  51              	Clock_Stop:
  52              	.LFB1:
  42:.\Generated_Source\PSoC4/Clock.c **** 
  43:.\Generated_Source\PSoC4/Clock.c **** 
  44:.\Generated_Source\PSoC4/Clock.c **** /*******************************************************************************
  45:.\Generated_Source\PSoC4/Clock.c **** * Function Name: Clock_Stop
  46:.\Generated_Source\PSoC4/Clock.c **** ********************************************************************************
  47:.\Generated_Source\PSoC4/Clock.c **** *
  48:.\Generated_Source\PSoC4/Clock.c **** * Summary:
  49:.\Generated_Source\PSoC4/Clock.c **** *  Stops the clock and returns immediately. This API does not require the
  50:.\Generated_Source\PSoC4/Clock.c **** *  source clock to be running but may return before the hardware is actually
  51:.\Generated_Source\PSoC4/Clock.c **** *  disabled.
  52:.\Generated_Source\PSoC4/Clock.c **** *
  53:.\Generated_Source\PSoC4/Clock.c **** * Parameters:
  54:.\Generated_Source\PSoC4/Clock.c **** *  None
  55:.\Generated_Source\PSoC4/Clock.c **** *
  56:.\Generated_Source\PSoC4/Clock.c **** * Returns:
  57:.\Generated_Source\PSoC4/Clock.c **** *  None
  58:.\Generated_Source\PSoC4/Clock.c **** *
  59:.\Generated_Source\PSoC4/Clock.c **** *******************************************************************************/
  60:.\Generated_Source\PSoC4/Clock.c **** void Clock_Stop(void)
  61:.\Generated_Source\PSoC4/Clock.c **** {
  53              		.loc 1 61 0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 3


  54              		.cfi_startproc
  62:.\Generated_Source\PSoC4/Clock.c ****     /* Clear the bit to disable the clock. */
  63:.\Generated_Source\PSoC4/Clock.c ****     Clock_ENABLE_REG &= (uint32)(~Clock__ENABLE_MASK);
  55              		.loc 1 63 0
  56 0000 024B     		ldr	r3, .L5
  64:.\Generated_Source\PSoC4/Clock.c **** }
  57              		.loc 1 64 0
  58              		@ sp needed for prologue
  63:.\Generated_Source\PSoC4/Clock.c ****     Clock_ENABLE_REG &= (uint32)(~Clock__ENABLE_MASK);
  59              		.loc 1 63 0
  60 0002 1A68     		ldr	r2, [r3]
  61 0004 5000     		lsl	r0, r2, #1
  62 0006 4108     		lsr	r1, r0, #1
  63 0008 1960     		str	r1, [r3]
  64              		.loc 1 64 0
  65 000a 7047     		bx	lr
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 000c 40000240 		.word	1073872960
  70              		.cfi_endproc
  71              	.LFE1:
  72              		.size	Clock_Stop, .-Clock_Stop
  73              		.section	.text.Clock_SetFractionalDividerRegister,"ax",%progbits
  74              		.align	1
  75              		.global	Clock_SetFractionalDividerRegister
  76              		.code	16
  77              		.thumb_func
  78              		.type	Clock_SetFractionalDividerRegister, %function
  79              	Clock_SetFractionalDividerRegister:
  80              	.LFB2:
  65:.\Generated_Source\PSoC4/Clock.c **** 
  66:.\Generated_Source\PSoC4/Clock.c **** 
  67:.\Generated_Source\PSoC4/Clock.c **** /*******************************************************************************
  68:.\Generated_Source\PSoC4/Clock.c **** * Function Name: Clock_SetFractionalDividerRegister
  69:.\Generated_Source\PSoC4/Clock.c **** ********************************************************************************
  70:.\Generated_Source\PSoC4/Clock.c **** *
  71:.\Generated_Source\PSoC4/Clock.c **** * Summary:
  72:.\Generated_Source\PSoC4/Clock.c **** *  Modifies the clock divider and the fractional divider.
  73:.\Generated_Source\PSoC4/Clock.c **** *
  74:.\Generated_Source\PSoC4/Clock.c **** * Parameters:
  75:.\Generated_Source\PSoC4/Clock.c **** *  clkDivider:  Divider register value (0-65535). This value is NOT the
  76:.\Generated_Source\PSoC4/Clock.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
  77:.\Generated_Source\PSoC4/Clock.c **** *    to divide the clock by 2, this parameter should be set to 1.
  78:.\Generated_Source\PSoC4/Clock.c **** *  fracDivider:  Fractional Divider register value (0-31).
  79:.\Generated_Source\PSoC4/Clock.c **** * Returns:
  80:.\Generated_Source\PSoC4/Clock.c **** *  None
  81:.\Generated_Source\PSoC4/Clock.c **** *
  82:.\Generated_Source\PSoC4/Clock.c **** *******************************************************************************/
  83:.\Generated_Source\PSoC4/Clock.c **** void Clock_SetFractionalDividerRegister(uint16 clkDivider, uint8 clkFractional)
  84:.\Generated_Source\PSoC4/Clock.c **** {
  81              		.loc 1 84 0
  82              		.cfi_startproc
  83              	.LVL0:
  85:.\Generated_Source\PSoC4/Clock.c **** #if defined (Clock__FRAC_MASK)
  86:.\Generated_Source\PSoC4/Clock.c **** 	/* get all but divider bits */
  87:.\Generated_Source\PSoC4/Clock.c ****     uint32 maskVal = Clock_DIV_REG & 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 4


  88:.\Generated_Source\PSoC4/Clock.c ****                     (uint32)(~(Clock__DIVIDER_MASK | Clock__FRAC_MASK)); 
  89:.\Generated_Source\PSoC4/Clock.c **** 	/* combine mask and new divider val into 32-bit value */
  90:.\Generated_Source\PSoC4/Clock.c ****     uint32 regVal = clkDivider | (((uint32)clkFractional << 16) & Clock__FRAC_MASK) | maskVal;
  91:.\Generated_Source\PSoC4/Clock.c **** #else
  92:.\Generated_Source\PSoC4/Clock.c ****     /* get all but integer divider bits */
  93:.\Generated_Source\PSoC4/Clock.c ****     uint32 maskVal = Clock_DIV_REG & (uint32)(~(uint32)Clock__DIVIDER_MASK);
  84              		.loc 1 93 0
  85 0000 034B     		ldr	r3, .L8
  94:.\Generated_Source\PSoC4/Clock.c ****     /* combine mask and new divider val into 32-bit value */
  95:.\Generated_Source\PSoC4/Clock.c ****     uint32 regVal = clkDivider | maskVal;
  96:.\Generated_Source\PSoC4/Clock.c **** #endif /* Clock__FRAC_MASK */
  97:.\Generated_Source\PSoC4/Clock.c **** 
  98:.\Generated_Source\PSoC4/Clock.c **** 	Clock_DIV_REG = regVal;
  99:.\Generated_Source\PSoC4/Clock.c **** }
  86              		.loc 1 99 0
  87              		@ sp needed for prologue
  93:.\Generated_Source\PSoC4/Clock.c ****     uint32 maskVal = Clock_DIV_REG & (uint32)(~(uint32)Clock__DIVIDER_MASK);
  88              		.loc 1 93 0
  89 0002 1A68     		ldr	r2, [r3]
  90              	.LVL1:
  91 0004 110C     		lsr	r1, r2, #16
  92              	.LVL2:
  93 0006 0A04     		lsl	r2, r1, #16
  94              	.LVL3:
  95:.\Generated_Source\PSoC4/Clock.c ****     uint32 regVal = clkDivider | maskVal;
  95              		.loc 1 95 0
  96 0008 1043     		orr	r0, r2
  97              	.LVL4:
  98:.\Generated_Source\PSoC4/Clock.c **** 	Clock_DIV_REG = regVal;
  98              		.loc 1 98 0
  99 000a 1860     		str	r0, [r3]
 100              		.loc 1 99 0
 101 000c 7047     		bx	lr
 102              	.L9:
 103 000e C046     		.align	2
 104              	.L8:
 105 0010 40000240 		.word	1073872960
 106              		.cfi_endproc
 107              	.LFE2:
 108              		.size	Clock_SetFractionalDividerRegister, .-Clock_SetFractionalDividerRegister
 109              		.section	.text.Clock_GetDividerRegister,"ax",%progbits
 110              		.align	1
 111              		.global	Clock_GetDividerRegister
 112              		.code	16
 113              		.thumb_func
 114              		.type	Clock_GetDividerRegister, %function
 115              	Clock_GetDividerRegister:
 116              	.LFB3:
 100:.\Generated_Source\PSoC4/Clock.c **** 
 101:.\Generated_Source\PSoC4/Clock.c **** 
 102:.\Generated_Source\PSoC4/Clock.c **** /*******************************************************************************
 103:.\Generated_Source\PSoC4/Clock.c **** * Function Name: Clock_GetDividerRegister
 104:.\Generated_Source\PSoC4/Clock.c **** ********************************************************************************
 105:.\Generated_Source\PSoC4/Clock.c **** *
 106:.\Generated_Source\PSoC4/Clock.c **** * Summary:
 107:.\Generated_Source\PSoC4/Clock.c **** *  Gets the clock divider register value.
 108:.\Generated_Source\PSoC4/Clock.c **** *
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 5


 109:.\Generated_Source\PSoC4/Clock.c **** * Parameters:
 110:.\Generated_Source\PSoC4/Clock.c **** *  None
 111:.\Generated_Source\PSoC4/Clock.c **** *
 112:.\Generated_Source\PSoC4/Clock.c **** * Returns:
 113:.\Generated_Source\PSoC4/Clock.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 114:.\Generated_Source\PSoC4/Clock.c **** *  divide by 2, the return value will be 1.
 115:.\Generated_Source\PSoC4/Clock.c **** *
 116:.\Generated_Source\PSoC4/Clock.c **** *******************************************************************************/
 117:.\Generated_Source\PSoC4/Clock.c **** uint16 Clock_GetDividerRegister(void)
 118:.\Generated_Source\PSoC4/Clock.c **** {
 117              		.loc 1 118 0
 118              		.cfi_startproc
 119:.\Generated_Source\PSoC4/Clock.c ****     return (uint16)Clock_DIV_REG;
 119              		.loc 1 119 0
 120 0000 014B     		ldr	r3, .L11
 120:.\Generated_Source\PSoC4/Clock.c **** }
 121              		.loc 1 120 0
 122              		@ sp needed for prologue
 119:.\Generated_Source\PSoC4/Clock.c ****     return (uint16)Clock_DIV_REG;
 123              		.loc 1 119 0
 124 0002 1868     		ldr	r0, [r3]
 125 0004 80B2     		uxth	r0, r0
 126              		.loc 1 120 0
 127 0006 7047     		bx	lr
 128              	.L12:
 129              		.align	2
 130              	.L11:
 131 0008 40000240 		.word	1073872960
 132              		.cfi_endproc
 133              	.LFE3:
 134              		.size	Clock_GetDividerRegister, .-Clock_GetDividerRegister
 135              		.section	.text.Clock_GetFractionalDividerRegister,"ax",%progbits
 136              		.align	1
 137              		.global	Clock_GetFractionalDividerRegister
 138              		.code	16
 139              		.thumb_func
 140              		.type	Clock_GetFractionalDividerRegister, %function
 141              	Clock_GetFractionalDividerRegister:
 142              	.LFB4:
 121:.\Generated_Source\PSoC4/Clock.c **** 
 122:.\Generated_Source\PSoC4/Clock.c **** 
 123:.\Generated_Source\PSoC4/Clock.c **** /*******************************************************************************
 124:.\Generated_Source\PSoC4/Clock.c **** * Function Name: Clock_GetFractionalDividerRegister
 125:.\Generated_Source\PSoC4/Clock.c **** ********************************************************************************
 126:.\Generated_Source\PSoC4/Clock.c **** *
 127:.\Generated_Source\PSoC4/Clock.c **** * Summary:
 128:.\Generated_Source\PSoC4/Clock.c **** *  Gets the clock fractional divider register value.
 129:.\Generated_Source\PSoC4/Clock.c **** *
 130:.\Generated_Source\PSoC4/Clock.c **** * Parameters:
 131:.\Generated_Source\PSoC4/Clock.c **** *  None
 132:.\Generated_Source\PSoC4/Clock.c **** *
 133:.\Generated_Source\PSoC4/Clock.c **** * Returns:
 134:.\Generated_Source\PSoC4/Clock.c **** *  Fractional Divide value of the clock
 135:.\Generated_Source\PSoC4/Clock.c **** *  0 if the fractional divider is not in use.
 136:.\Generated_Source\PSoC4/Clock.c **** *
 137:.\Generated_Source\PSoC4/Clock.c **** *******************************************************************************/
 138:.\Generated_Source\PSoC4/Clock.c **** uint8 Clock_GetFractionalDividerRegister(void)
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 6


 139:.\Generated_Source\PSoC4/Clock.c **** {
 143              		.loc 1 139 0
 144              		.cfi_startproc
 140:.\Generated_Source\PSoC4/Clock.c **** #if defined (Clock__FRAC_MASK)
 141:.\Generated_Source\PSoC4/Clock.c ****     /* get fractional divider bits */
 142:.\Generated_Source\PSoC4/Clock.c ****     uint32 maskVal = Clock_DIV_REG & Clock__FRAC_MASK;
 143:.\Generated_Source\PSoC4/Clock.c ****     return (maskVal >> 16u);
 144:.\Generated_Source\PSoC4/Clock.c **** #else
 145:.\Generated_Source\PSoC4/Clock.c ****     return 0u;
 146:.\Generated_Source\PSoC4/Clock.c **** #endif /* Clock__FRAC_MASK */
 147:.\Generated_Source\PSoC4/Clock.c **** }
 145              		.loc 1 147 0
 146 0000 0020     		mov	r0, #0
 147              		@ sp needed for prologue
 148 0002 7047     		bx	lr
 149              		.cfi_endproc
 150              	.LFE4:
 151              		.size	Clock_GetFractionalDividerRegister, .-Clock_GetFractionalDividerRegister
 152              		.text
 153              	.Letext0:
 154              		.file 2 "./Generated_Source/PSoC4/cytypes.h"
 155              		.section	.debug_info,"",%progbits
 156              	.Ldebug_info0:
 157 0000 62010000 		.4byte	0x162
 158 0004 0200     		.2byte	0x2
 159 0006 00000000 		.4byte	.Ldebug_abbrev0
 160 000a 04       		.byte	0x4
 161 000b 01       		.uleb128 0x1
 162 000c 7C010000 		.4byte	.LASF24
 163 0010 01       		.byte	0x1
 164 0011 9B000000 		.4byte	.LASF25
 165 0015 D8000000 		.4byte	.LASF26
 166 0019 00000000 		.4byte	.Ldebug_ranges0+0
 167 001d 00000000 		.4byte	0
 168 0021 00000000 		.4byte	0
 169 0025 00000000 		.4byte	.Ldebug_line0
 170 0029 02       		.uleb128 0x2
 171 002a 01       		.byte	0x1
 172 002b 06       		.byte	0x6
 173 002c FD010000 		.4byte	.LASF0
 174 0030 02       		.uleb128 0x2
 175 0031 01       		.byte	0x1
 176 0032 08       		.byte	0x8
 177 0033 4F000000 		.4byte	.LASF1
 178 0037 02       		.uleb128 0x2
 179 0038 02       		.byte	0x2
 180 0039 05       		.byte	0x5
 181 003a 6C010000 		.4byte	.LASF2
 182 003e 02       		.uleb128 0x2
 183 003f 02       		.byte	0x2
 184 0040 07       		.byte	0x7
 185 0041 6F000000 		.4byte	.LASF3
 186 0045 02       		.uleb128 0x2
 187 0046 04       		.byte	0x4
 188 0047 05       		.byte	0x5
 189 0048 D1010000 		.4byte	.LASF4
 190 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 7


 191 004d 04       		.byte	0x4
 192 004e 07       		.byte	0x7
 193 004f 5D000000 		.4byte	.LASF5
 194 0053 02       		.uleb128 0x2
 195 0054 08       		.byte	0x8
 196 0055 05       		.byte	0x5
 197 0056 40010000 		.4byte	.LASF6
 198 005a 02       		.uleb128 0x2
 199 005b 08       		.byte	0x8
 200 005c 07       		.byte	0x7
 201 005d 29010000 		.4byte	.LASF7
 202 0061 03       		.uleb128 0x3
 203 0062 04       		.byte	0x4
 204 0063 05       		.byte	0x5
 205 0064 696E7400 		.ascii	"int\000"
 206 0068 02       		.uleb128 0x2
 207 0069 04       		.byte	0x4
 208 006a 07       		.byte	0x7
 209 006b 3C000000 		.4byte	.LASF8
 210 006f 04       		.uleb128 0x4
 211 0070 76010000 		.4byte	.LASF9
 212 0074 02       		.byte	0x2
 213 0075 5B       		.byte	0x5b
 214 0076 30000000 		.4byte	0x30
 215 007a 04       		.uleb128 0x4
 216 007b CA000000 		.4byte	.LASF10
 217 007f 02       		.byte	0x2
 218 0080 5C       		.byte	0x5c
 219 0081 3E000000 		.4byte	0x3e
 220 0085 04       		.uleb128 0x4
 221 0086 D1000000 		.4byte	.LASF11
 222 008a 02       		.byte	0x2
 223 008b 5D       		.byte	0x5d
 224 008c 4C000000 		.4byte	0x4c
 225 0090 02       		.uleb128 0x2
 226 0091 04       		.byte	0x4
 227 0092 04       		.byte	0x4
 228 0093 49000000 		.4byte	.LASF12
 229 0097 02       		.uleb128 0x2
 230 0098 08       		.byte	0x8
 231 0099 04       		.byte	0x4
 232 009a 8D000000 		.4byte	.LASF13
 233 009e 02       		.uleb128 0x2
 234 009f 01       		.byte	0x1
 235 00a0 08       		.byte	0x8
 236 00a1 4E010000 		.4byte	.LASF14
 237 00a5 04       		.uleb128 0x4
 238 00a6 23000000 		.4byte	.LASF15
 239 00aa 02       		.byte	0x2
 240 00ab F2       		.byte	0xf2
 241 00ac B0000000 		.4byte	0xb0
 242 00b0 05       		.uleb128 0x5
 243 00b1 85000000 		.4byte	0x85
 244 00b5 06       		.uleb128 0x6
 245 00b6 01       		.byte	0x1
 246 00b7 C5010000 		.4byte	.LASF16
 247 00bb 01       		.byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 8


 248 00bc 25       		.byte	0x25
 249 00bd 01       		.byte	0x1
 250 00be 00000000 		.4byte	.LFB0
 251 00c2 14000000 		.4byte	.LFE0
 252 00c6 02       		.byte	0x2
 253 00c7 7D       		.byte	0x7d
 254 00c8 00       		.sleb128 0
 255 00c9 01       		.byte	0x1
 256 00ca 06       		.uleb128 0x6
 257 00cb 01       		.byte	0x1
 258 00cc 29000000 		.4byte	.LASF17
 259 00d0 01       		.byte	0x1
 260 00d1 3C       		.byte	0x3c
 261 00d2 01       		.byte	0x1
 262 00d3 00000000 		.4byte	.LFB1
 263 00d7 10000000 		.4byte	.LFE1
 264 00db 02       		.byte	0x2
 265 00dc 7D       		.byte	0x7d
 266 00dd 00       		.sleb128 0
 267 00de 01       		.byte	0x1
 268 00df 07       		.uleb128 0x7
 269 00e0 01       		.byte	0x1
 270 00e1 DA010000 		.4byte	.LASF27
 271 00e5 01       		.byte	0x1
 272 00e6 53       		.byte	0x53
 273 00e7 01       		.byte	0x1
 274 00e8 00000000 		.4byte	.LFB2
 275 00ec 14000000 		.4byte	.LFE2
 276 00f0 02       		.byte	0x2
 277 00f1 7D       		.byte	0x7d
 278 00f2 00       		.sleb128 0
 279 00f3 01       		.byte	0x1
 280 00f4 33010000 		.4byte	0x133
 281 00f8 08       		.uleb128 0x8
 282 00f9 82000000 		.4byte	.LASF18
 283 00fd 01       		.byte	0x1
 284 00fe 53       		.byte	0x53
 285 00ff 7A000000 		.4byte	0x7a
 286 0103 00000000 		.4byte	.LLST0
 287 0107 08       		.uleb128 0x8
 288 0108 BC000000 		.4byte	.LASF19
 289 010c 01       		.byte	0x1
 290 010d 53       		.byte	0x53
 291 010e 6F000000 		.4byte	0x6f
 292 0112 21000000 		.4byte	.LLST1
 293 0116 09       		.uleb128 0x9
 294 0117 34000000 		.4byte	.LASF20
 295 011b 01       		.byte	0x1
 296 011c 5D       		.byte	0x5d
 297 011d 85000000 		.4byte	0x85
 298 0121 42000000 		.4byte	.LLST2
 299 0125 0A       		.uleb128 0xa
 300 0126 94000000 		.4byte	.LASF21
 301 012a 01       		.byte	0x1
 302 012b 5F       		.byte	0x5f
 303 012c 85000000 		.4byte	0x85
 304 0130 01       		.byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 9


 305 0131 50       		.byte	0x50
 306 0132 00       		.byte	0
 307 0133 0B       		.uleb128 0xb
 308 0134 01       		.byte	0x1
 309 0135 53010000 		.4byte	.LASF22
 310 0139 01       		.byte	0x1
 311 013a 75       		.byte	0x75
 312 013b 01       		.byte	0x1
 313 013c 7A000000 		.4byte	0x7a
 314 0140 00000000 		.4byte	.LFB3
 315 0144 0C000000 		.4byte	.LFE3
 316 0148 02       		.byte	0x2
 317 0149 7D       		.byte	0x7d
 318 014a 00       		.sleb128 0
 319 014b 01       		.byte	0x1
 320 014c 0B       		.uleb128 0xb
 321 014d 01       		.byte	0x1
 322 014e 00000000 		.4byte	.LASF23
 323 0152 01       		.byte	0x1
 324 0153 8A       		.byte	0x8a
 325 0154 01       		.byte	0x1
 326 0155 6F000000 		.4byte	0x6f
 327 0159 00000000 		.4byte	.LFB4
 328 015d 04000000 		.4byte	.LFE4
 329 0161 02       		.byte	0x2
 330 0162 7D       		.byte	0x7d
 331 0163 00       		.sleb128 0
 332 0164 01       		.byte	0x1
 333 0165 00       		.byte	0
 334              		.section	.debug_abbrev,"",%progbits
 335              	.Ldebug_abbrev0:
 336 0000 01       		.uleb128 0x1
 337 0001 11       		.uleb128 0x11
 338 0002 01       		.byte	0x1
 339 0003 25       		.uleb128 0x25
 340 0004 0E       		.uleb128 0xe
 341 0005 13       		.uleb128 0x13
 342 0006 0B       		.uleb128 0xb
 343 0007 03       		.uleb128 0x3
 344 0008 0E       		.uleb128 0xe
 345 0009 1B       		.uleb128 0x1b
 346 000a 0E       		.uleb128 0xe
 347 000b 55       		.uleb128 0x55
 348 000c 06       		.uleb128 0x6
 349 000d 11       		.uleb128 0x11
 350 000e 01       		.uleb128 0x1
 351 000f 52       		.uleb128 0x52
 352 0010 01       		.uleb128 0x1
 353 0011 10       		.uleb128 0x10
 354 0012 06       		.uleb128 0x6
 355 0013 00       		.byte	0
 356 0014 00       		.byte	0
 357 0015 02       		.uleb128 0x2
 358 0016 24       		.uleb128 0x24
 359 0017 00       		.byte	0
 360 0018 0B       		.uleb128 0xb
 361 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 10


 362 001a 3E       		.uleb128 0x3e
 363 001b 0B       		.uleb128 0xb
 364 001c 03       		.uleb128 0x3
 365 001d 0E       		.uleb128 0xe
 366 001e 00       		.byte	0
 367 001f 00       		.byte	0
 368 0020 03       		.uleb128 0x3
 369 0021 24       		.uleb128 0x24
 370 0022 00       		.byte	0
 371 0023 0B       		.uleb128 0xb
 372 0024 0B       		.uleb128 0xb
 373 0025 3E       		.uleb128 0x3e
 374 0026 0B       		.uleb128 0xb
 375 0027 03       		.uleb128 0x3
 376 0028 08       		.uleb128 0x8
 377 0029 00       		.byte	0
 378 002a 00       		.byte	0
 379 002b 04       		.uleb128 0x4
 380 002c 16       		.uleb128 0x16
 381 002d 00       		.byte	0
 382 002e 03       		.uleb128 0x3
 383 002f 0E       		.uleb128 0xe
 384 0030 3A       		.uleb128 0x3a
 385 0031 0B       		.uleb128 0xb
 386 0032 3B       		.uleb128 0x3b
 387 0033 0B       		.uleb128 0xb
 388 0034 49       		.uleb128 0x49
 389 0035 13       		.uleb128 0x13
 390 0036 00       		.byte	0
 391 0037 00       		.byte	0
 392 0038 05       		.uleb128 0x5
 393 0039 35       		.uleb128 0x35
 394 003a 00       		.byte	0
 395 003b 49       		.uleb128 0x49
 396 003c 13       		.uleb128 0x13
 397 003d 00       		.byte	0
 398 003e 00       		.byte	0
 399 003f 06       		.uleb128 0x6
 400 0040 2E       		.uleb128 0x2e
 401 0041 00       		.byte	0
 402 0042 3F       		.uleb128 0x3f
 403 0043 0C       		.uleb128 0xc
 404 0044 03       		.uleb128 0x3
 405 0045 0E       		.uleb128 0xe
 406 0046 3A       		.uleb128 0x3a
 407 0047 0B       		.uleb128 0xb
 408 0048 3B       		.uleb128 0x3b
 409 0049 0B       		.uleb128 0xb
 410 004a 27       		.uleb128 0x27
 411 004b 0C       		.uleb128 0xc
 412 004c 11       		.uleb128 0x11
 413 004d 01       		.uleb128 0x1
 414 004e 12       		.uleb128 0x12
 415 004f 01       		.uleb128 0x1
 416 0050 40       		.uleb128 0x40
 417 0051 0A       		.uleb128 0xa
 418 0052 9742     		.uleb128 0x2117
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 11


 419 0054 0C       		.uleb128 0xc
 420 0055 00       		.byte	0
 421 0056 00       		.byte	0
 422 0057 07       		.uleb128 0x7
 423 0058 2E       		.uleb128 0x2e
 424 0059 01       		.byte	0x1
 425 005a 3F       		.uleb128 0x3f
 426 005b 0C       		.uleb128 0xc
 427 005c 03       		.uleb128 0x3
 428 005d 0E       		.uleb128 0xe
 429 005e 3A       		.uleb128 0x3a
 430 005f 0B       		.uleb128 0xb
 431 0060 3B       		.uleb128 0x3b
 432 0061 0B       		.uleb128 0xb
 433 0062 27       		.uleb128 0x27
 434 0063 0C       		.uleb128 0xc
 435 0064 11       		.uleb128 0x11
 436 0065 01       		.uleb128 0x1
 437 0066 12       		.uleb128 0x12
 438 0067 01       		.uleb128 0x1
 439 0068 40       		.uleb128 0x40
 440 0069 0A       		.uleb128 0xa
 441 006a 9742     		.uleb128 0x2117
 442 006c 0C       		.uleb128 0xc
 443 006d 01       		.uleb128 0x1
 444 006e 13       		.uleb128 0x13
 445 006f 00       		.byte	0
 446 0070 00       		.byte	0
 447 0071 08       		.uleb128 0x8
 448 0072 05       		.uleb128 0x5
 449 0073 00       		.byte	0
 450 0074 03       		.uleb128 0x3
 451 0075 0E       		.uleb128 0xe
 452 0076 3A       		.uleb128 0x3a
 453 0077 0B       		.uleb128 0xb
 454 0078 3B       		.uleb128 0x3b
 455 0079 0B       		.uleb128 0xb
 456 007a 49       		.uleb128 0x49
 457 007b 13       		.uleb128 0x13
 458 007c 02       		.uleb128 0x2
 459 007d 06       		.uleb128 0x6
 460 007e 00       		.byte	0
 461 007f 00       		.byte	0
 462 0080 09       		.uleb128 0x9
 463 0081 34       		.uleb128 0x34
 464 0082 00       		.byte	0
 465 0083 03       		.uleb128 0x3
 466 0084 0E       		.uleb128 0xe
 467 0085 3A       		.uleb128 0x3a
 468 0086 0B       		.uleb128 0xb
 469 0087 3B       		.uleb128 0x3b
 470 0088 0B       		.uleb128 0xb
 471 0089 49       		.uleb128 0x49
 472 008a 13       		.uleb128 0x13
 473 008b 02       		.uleb128 0x2
 474 008c 06       		.uleb128 0x6
 475 008d 00       		.byte	0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 12


 476 008e 00       		.byte	0
 477 008f 0A       		.uleb128 0xa
 478 0090 34       		.uleb128 0x34
 479 0091 00       		.byte	0
 480 0092 03       		.uleb128 0x3
 481 0093 0E       		.uleb128 0xe
 482 0094 3A       		.uleb128 0x3a
 483 0095 0B       		.uleb128 0xb
 484 0096 3B       		.uleb128 0x3b
 485 0097 0B       		.uleb128 0xb
 486 0098 49       		.uleb128 0x49
 487 0099 13       		.uleb128 0x13
 488 009a 02       		.uleb128 0x2
 489 009b 0A       		.uleb128 0xa
 490 009c 00       		.byte	0
 491 009d 00       		.byte	0
 492 009e 0B       		.uleb128 0xb
 493 009f 2E       		.uleb128 0x2e
 494 00a0 00       		.byte	0
 495 00a1 3F       		.uleb128 0x3f
 496 00a2 0C       		.uleb128 0xc
 497 00a3 03       		.uleb128 0x3
 498 00a4 0E       		.uleb128 0xe
 499 00a5 3A       		.uleb128 0x3a
 500 00a6 0B       		.uleb128 0xb
 501 00a7 3B       		.uleb128 0x3b
 502 00a8 0B       		.uleb128 0xb
 503 00a9 27       		.uleb128 0x27
 504 00aa 0C       		.uleb128 0xc
 505 00ab 49       		.uleb128 0x49
 506 00ac 13       		.uleb128 0x13
 507 00ad 11       		.uleb128 0x11
 508 00ae 01       		.uleb128 0x1
 509 00af 12       		.uleb128 0x12
 510 00b0 01       		.uleb128 0x1
 511 00b1 40       		.uleb128 0x40
 512 00b2 0A       		.uleb128 0xa
 513 00b3 9742     		.uleb128 0x2117
 514 00b5 0C       		.uleb128 0xc
 515 00b6 00       		.byte	0
 516 00b7 00       		.byte	0
 517 00b8 00       		.byte	0
 518              		.section	.debug_loc,"",%progbits
 519              	.Ldebug_loc0:
 520              	.LLST0:
 521 0000 00000000 		.4byte	.LVL0
 522 0004 0A000000 		.4byte	.LVL4
 523 0008 0100     		.2byte	0x1
 524 000a 50       		.byte	0x50
 525 000b 0A000000 		.4byte	.LVL4
 526 000f 14000000 		.4byte	.LFE2
 527 0013 0400     		.2byte	0x4
 528 0015 F3       		.byte	0xf3
 529 0016 01       		.uleb128 0x1
 530 0017 50       		.byte	0x50
 531 0018 9F       		.byte	0x9f
 532 0019 00000000 		.4byte	0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 13


 533 001d 00000000 		.4byte	0
 534              	.LLST1:
 535 0021 00000000 		.4byte	.LVL0
 536 0025 06000000 		.4byte	.LVL2
 537 0029 0100     		.2byte	0x1
 538 002b 51       		.byte	0x51
 539 002c 06000000 		.4byte	.LVL2
 540 0030 14000000 		.4byte	.LFE2
 541 0034 0400     		.2byte	0x4
 542 0036 F3       		.byte	0xf3
 543 0037 01       		.uleb128 0x1
 544 0038 51       		.byte	0x51
 545 0039 9F       		.byte	0x9f
 546 003a 00000000 		.4byte	0
 547 003e 00000000 		.4byte	0
 548              	.LLST2:
 549 0042 04000000 		.4byte	.LVL1
 550 0046 08000000 		.4byte	.LVL3
 551 004a 0800     		.2byte	0x8
 552 004c 72       		.byte	0x72
 553 004d 00       		.sleb128 0
 554 004e 11       		.byte	0x11
 555 004f 80807C   		.sleb128 -65536
 556 0052 1A       		.byte	0x1a
 557 0053 9F       		.byte	0x9f
 558 0054 00000000 		.4byte	0
 559 0058 00000000 		.4byte	0
 560              		.section	.debug_aranges,"",%progbits
 561 0000 3C000000 		.4byte	0x3c
 562 0004 0200     		.2byte	0x2
 563 0006 00000000 		.4byte	.Ldebug_info0
 564 000a 04       		.byte	0x4
 565 000b 00       		.byte	0
 566 000c 0000     		.2byte	0
 567 000e 0000     		.2byte	0
 568 0010 00000000 		.4byte	.LFB0
 569 0014 14000000 		.4byte	.LFE0-.LFB0
 570 0018 00000000 		.4byte	.LFB1
 571 001c 10000000 		.4byte	.LFE1-.LFB1
 572 0020 00000000 		.4byte	.LFB2
 573 0024 14000000 		.4byte	.LFE2-.LFB2
 574 0028 00000000 		.4byte	.LFB3
 575 002c 0C000000 		.4byte	.LFE3-.LFB3
 576 0030 00000000 		.4byte	.LFB4
 577 0034 04000000 		.4byte	.LFE4-.LFB4
 578 0038 00000000 		.4byte	0
 579 003c 00000000 		.4byte	0
 580              		.section	.debug_ranges,"",%progbits
 581              	.Ldebug_ranges0:
 582 0000 00000000 		.4byte	.LFB0
 583 0004 14000000 		.4byte	.LFE0
 584 0008 00000000 		.4byte	.LFB1
 585 000c 10000000 		.4byte	.LFE1
 586 0010 00000000 		.4byte	.LFB2
 587 0014 14000000 		.4byte	.LFE2
 588 0018 00000000 		.4byte	.LFB3
 589 001c 0C000000 		.4byte	.LFE3
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 14


 590 0020 00000000 		.4byte	.LFB4
 591 0024 04000000 		.4byte	.LFE4
 592 0028 00000000 		.4byte	0
 593 002c 00000000 		.4byte	0
 594              		.section	.debug_line,"",%progbits
 595              	.Ldebug_line0:
 596 0000 AD000000 		.section	.debug_str,"MS",%progbits,1
 596      02004400 
 596      00000201 
 596      FB0E0D00 
 596      01010101 
 597              	.LASF23:
 598 0000 436C6F63 		.ascii	"Clock_GetFractionalDividerRegister\000"
 598      6B5F4765 
 598      74467261 
 598      6374696F 
 598      6E616C44 
 599              	.LASF15:
 600 0023 72656733 		.ascii	"reg32\000"
 600      3200
 601              	.LASF17:
 602 0029 436C6F63 		.ascii	"Clock_Stop\000"
 602      6B5F5374 
 602      6F7000
 603              	.LASF20:
 604 0034 6D61736B 		.ascii	"maskVal\000"
 604      56616C00 
 605              	.LASF8:
 606 003c 756E7369 		.ascii	"unsigned int\000"
 606      676E6564 
 606      20696E74 
 606      00
 607              	.LASF12:
 608 0049 666C6F61 		.ascii	"float\000"
 608      7400
 609              	.LASF1:
 610 004f 756E7369 		.ascii	"unsigned char\000"
 610      676E6564 
 610      20636861 
 610      7200
 611              	.LASF5:
 612 005d 6C6F6E67 		.ascii	"long unsigned int\000"
 612      20756E73 
 612      69676E65 
 612      6420696E 
 612      7400
 613              	.LASF3:
 614 006f 73686F72 		.ascii	"short unsigned int\000"
 614      7420756E 
 614      7369676E 
 614      65642069 
 614      6E7400
 615              	.LASF18:
 616 0082 636C6B44 		.ascii	"clkDivider\000"
 616      69766964 
 616      657200
 617              	.LASF13:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 15


 618 008d 646F7562 		.ascii	"double\000"
 618      6C6500
 619              	.LASF21:
 620 0094 72656756 		.ascii	"regVal\000"
 620      616C00
 621              	.LASF25:
 622 009b 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\Clock.c\000"
 622      6E657261 
 622      7465645F 
 622      536F7572 
 622      63655C50 
 623              	.LASF19:
 624 00bc 636C6B46 		.ascii	"clkFractional\000"
 624      72616374 
 624      696F6E61 
 624      6C00
 625              	.LASF10:
 626 00ca 75696E74 		.ascii	"uint16\000"
 626      313600
 627              	.LASF11:
 628 00d1 75696E74 		.ascii	"uint32\000"
 628      333200
 629              	.LASF26:
 630 00d8 433A5C55 		.ascii	"C:\\Users\\vrnk\\Desktop\\ES100 FW -049\\FW\\SCB_Bo"
 630      73657273 
 630      5C76726E 
 630      6B5C4465 
 630      736B746F 
 631 0105 6F746C6F 		.ascii	"otloader_42xx\\UART_Bootloader.cydsn\000"
 631      61646572 
 631      5F343278 
 631      785C5541 
 631      52545F42 
 632              	.LASF7:
 633 0129 6C6F6E67 		.ascii	"long long unsigned int\000"
 633      206C6F6E 
 633      6720756E 
 633      7369676E 
 633      65642069 
 634              	.LASF6:
 635 0140 6C6F6E67 		.ascii	"long long int\000"
 635      206C6F6E 
 635      6720696E 
 635      7400
 636              	.LASF14:
 637 014e 63686172 		.ascii	"char\000"
 637      00
 638              	.LASF22:
 639 0153 436C6F63 		.ascii	"Clock_GetDividerRegister\000"
 639      6B5F4765 
 639      74446976 
 639      69646572 
 639      52656769 
 640              	.LASF2:
 641 016c 73686F72 		.ascii	"short int\000"
 641      7420696E 
 641      7400
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\ccaKngIk.s 			page 16


 642              	.LASF9:
 643 0176 75696E74 		.ascii	"uint8\000"
 643      3800
 644              	.LASF24:
 645 017c 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 645      4320342E 
 645      372E3320 
 645      32303133 
 645      30333132 
 646 01af 616E6368 		.ascii	"anch revision 196615]\000"
 646      20726576 
 646      6973696F 
 646      6E203139 
 646      36363135 
 647              	.LASF16:
 648 01c5 436C6F63 		.ascii	"Clock_Start\000"
 648      6B5F5374 
 648      61727400 
 649              	.LASF4:
 650 01d1 6C6F6E67 		.ascii	"long int\000"
 650      20696E74 
 650      00
 651              	.LASF27:
 652 01da 436C6F63 		.ascii	"Clock_SetFractionalDividerRegister\000"
 652      6B5F5365 
 652      74467261 
 652      6374696F 
 652      6E616C44 
 653              	.LASF0:
 654 01fd 7369676E 		.ascii	"signed char\000"
 654      65642063 
 654      68617200 
 655              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
