ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_Init,"ax",%progbits
  18              		.align	1
  19              		.global	PWM_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_Init, %function
  23              	PWM_Init:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 1.0
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PWM.c **** 
  22:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** 
  25:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
  27:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM.c **** *
  29:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  31:.\Generated_Source\PSoC4/PWM.c **** *
  32:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 2


  33:.\Generated_Source\PSoC4/PWM.c **** *  None
  34:.\Generated_Source\PSoC4/PWM.c **** *
  35:.\Generated_Source\PSoC4/PWM.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM.c **** *  None
  37:.\Generated_Source\PSoC4/PWM.c **** *
  38:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  40:.\Generated_Source\PSoC4/PWM.c **** {
  26              		.loc 1 40 0
  27              		.cfi_startproc
  41:.\Generated_Source\PSoC4/PWM.c **** 
  42:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  44:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_ENCODING_MODES     << PWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_CONFIG                  << PWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM.c **** 
  49:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  50:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  28              		.loc 1 50 0
  29 0000 0D4B     		ldr	r3, .L2
  30 0002 8422     		mov	r2, #132
  31 0004 D004     		lsl	r0, r2, #19
  32 0006 1860     		str	r0, [r3]
  51:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_INVERT          << PWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_N_INVERT        << PWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_MODE                << PWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM.c **** 
  56:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_RUN_MODE         << PWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM.c **** 
  60:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM.c ****         #else
  62:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  33              		.loc 1 62 0
  34 0008 1968     		ldr	r1, [r3]
  35 000a 8022     		mov	r2, #128
  36 000c 5002     		lsl	r0, r2, #9
  37 000e 0843     		orr	r0, r1
  38 0010 1860     		str	r0, [r3]
  63:.\Generated_Source\PSoC4/PWM.c ****             (((uint32)(PWM_PWM_ALIGN           << PWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PWM.c ****              ((uint32)(PWM_PWM_KILL_EVENT      << PWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_DEAD_TIME_CYCLE  << PWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  39              		.loc 1 73 0
  40 0012 1968     		ldr	r1, [r3]
  74:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 3


  75:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  79:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_PRESCALER            << PWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNTER_MODE         << PWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RUN_MODE             << PWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COMP_CAP_MODE        << PWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM.c **** 
  86:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  88:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_PHIA_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_INDEX_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_STOP_SIGNAL_MODE   << PWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_PHIB_SIGNAL_MODE   << PWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM.c **** 
  95:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  96:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  41              		.loc 1 96 0
  42 0014 0948     		ldr	r0, .L2+4
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  43              		.loc 1 73 0
  44 0016 1960     		str	r1, [r3]
  45              		.loc 1 96 0
  46 0018 C323     		mov	r3, #195
  47 001a 9A00     		lsl	r2, r3, #2
  48 001c 0260     		str	r2, [r0]
  49              	.LVL0:
  50              	.LBB8:
  51              	.LBB9:
  97:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_COUNT_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_RELOAD_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_STOP_SIGNAL_MODE    << PWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_START_SIGNAL_MODE   << PWM_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_CAPTURE_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNT_SIGNAL_MODE    << PWM_COUNT_SHIFT))       |
 108:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RELOAD_SIGNAL_MODE   << PWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_STOP_SIGNAL_MODE     << PWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_START_SIGNAL_MODE    << PWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 112:.\Generated_Source\PSoC4/PWM.c **** 
 113:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 115:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM.c **** 
 118:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 4


 120:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM.c **** 
 122:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 123:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM.c **** 
 126:.\Generated_Source\PSoC4/PWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 128:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
 130:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
 131:.\Generated_Source\PSoC4/PWM.c **** 
 132:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
 133:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
 134:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
 135:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
 136:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
 137:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 138:.\Generated_Source\PSoC4/PWM.c **** 
 139:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 140:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
 141:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
 142:.\Generated_Source\PSoC4/PWM.c **** 
 143:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 144:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 145:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 146:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
 147:.\Generated_Source\PSoC4/PWM.c **** 
 148:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 149:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 154:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 156:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 157:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 158:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 159:.\Generated_Source\PSoC4/PWM.c ****         #else
 160:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 161:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 162:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 163:.\Generated_Source\PSoC4/PWM.c **** 
 164:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 165:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
 166:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 167:.\Generated_Source\PSoC4/PWM.c **** 
 168:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 169:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 170:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 171:.\Generated_Source\PSoC4/PWM.c **** 
 172:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 173:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 174:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 175:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 176:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 5


 177:.\Generated_Source\PSoC4/PWM.c **** }
 178:.\Generated_Source\PSoC4/PWM.c **** 
 179:.\Generated_Source\PSoC4/PWM.c **** 
 180:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 181:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 182:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 183:.\Generated_Source\PSoC4/PWM.c **** *
 184:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 185:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 186:.\Generated_Source\PSoC4/PWM.c **** *
 187:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 188:.\Generated_Source\PSoC4/PWM.c **** *  None
 189:.\Generated_Source\PSoC4/PWM.c **** *
 190:.\Generated_Source\PSoC4/PWM.c **** * Return:
 191:.\Generated_Source\PSoC4/PWM.c **** *  None
 192:.\Generated_Source\PSoC4/PWM.c **** *
 193:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 194:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 195:.\Generated_Source\PSoC4/PWM.c **** {
 196:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 197:.\Generated_Source\PSoC4/PWM.c **** 
 198:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 199:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 200:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 201:.\Generated_Source\PSoC4/PWM.c **** 
 202:.\Generated_Source\PSoC4/PWM.c ****     /* Statr Timer or PWM if start input is absent */
 203:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 204:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 205:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 206:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 207:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 208:.\Generated_Source\PSoC4/PWM.c **** 
 209:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 210:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 212:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM.c **** }
 215:.\Generated_Source\PSoC4/PWM.c **** 
 216:.\Generated_Source\PSoC4/PWM.c **** 
 217:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 218:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 219:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 220:.\Generated_Source\PSoC4/PWM.c **** *
 221:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 222:.\Generated_Source\PSoC4/PWM.c **** *  Initialize the PWM with default customizer
 223:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 224:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 225:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 226:.\Generated_Source\PSoC4/PWM.c **** *
 227:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 228:.\Generated_Source\PSoC4/PWM.c **** *  None
 229:.\Generated_Source\PSoC4/PWM.c **** *
 230:.\Generated_Source\PSoC4/PWM.c **** * Return:
 231:.\Generated_Source\PSoC4/PWM.c **** *  None
 232:.\Generated_Source\PSoC4/PWM.c **** *
 233:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 6


 234:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 235:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
 236:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 237:.\Generated_Source\PSoC4/PWM.c **** *  enable/disable component without re-initialization in all subsequent calls
 238:.\Generated_Source\PSoC4/PWM.c **** *  to the PWM_Start() routine.
 239:.\Generated_Source\PSoC4/PWM.c **** *
 240:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 241:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 242:.\Generated_Source\PSoC4/PWM.c **** {
 243:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 244:.\Generated_Source\PSoC4/PWM.c ****     {
 245:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 246:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 247:.\Generated_Source\PSoC4/PWM.c ****     }
 248:.\Generated_Source\PSoC4/PWM.c **** 
 249:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 250:.\Generated_Source\PSoC4/PWM.c **** }
 251:.\Generated_Source\PSoC4/PWM.c **** 
 252:.\Generated_Source\PSoC4/PWM.c **** 
 253:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 254:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 255:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 256:.\Generated_Source\PSoC4/PWM.c **** *
 257:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 258:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 259:.\Generated_Source\PSoC4/PWM.c **** *
 260:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 261:.\Generated_Source\PSoC4/PWM.c **** *  None
 262:.\Generated_Source\PSoC4/PWM.c **** *
 263:.\Generated_Source\PSoC4/PWM.c **** * Return:
 264:.\Generated_Source\PSoC4/PWM.c **** *  None
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 267:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 268:.\Generated_Source\PSoC4/PWM.c **** {
 269:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 270:.\Generated_Source\PSoC4/PWM.c **** 
 271:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 272:.\Generated_Source\PSoC4/PWM.c **** 
 273:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 274:.\Generated_Source\PSoC4/PWM.c **** 
 275:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 276:.\Generated_Source\PSoC4/PWM.c **** }
 277:.\Generated_Source\PSoC4/PWM.c **** 
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 280:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 281:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 282:.\Generated_Source\PSoC4/PWM.c **** *
 283:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 284:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 285:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 286:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 287:.\Generated_Source\PSoC4/PWM.c **** *
 288:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 289:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 290:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 7


 291:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 292:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 293:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 294:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 295:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 296:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 297:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 298:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 299:.\Generated_Source\PSoC4/PWM.c **** *
 300:.\Generated_Source\PSoC4/PWM.c **** * Return:
 301:.\Generated_Source\PSoC4/PWM.c **** *  None
 302:.\Generated_Source\PSoC4/PWM.c **** *
 303:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 305:.\Generated_Source\PSoC4/PWM.c **** {
 306:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 307:.\Generated_Source\PSoC4/PWM.c **** 
 308:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 309:.\Generated_Source\PSoC4/PWM.c **** 
 310:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 311:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 312:.\Generated_Source\PSoC4/PWM.c **** 
 313:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 314:.\Generated_Source\PSoC4/PWM.c **** }
 315:.\Generated_Source\PSoC4/PWM.c **** 
 316:.\Generated_Source\PSoC4/PWM.c **** 
 317:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 318:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 319:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 320:.\Generated_Source\PSoC4/PWM.c **** *
 321:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 322:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of 3 supported modes.
 323:.\Generated_Source\PSoC4/PWM.c **** *  Is functionality is only applicable to Quadrature Decoder operation.
 324:.\Generated_Source\PSoC4/PWM.c **** *
 325:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 326:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 327:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 328:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 329:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 330:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 331:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 332:.\Generated_Source\PSoC4/PWM.c **** *
 333:.\Generated_Source\PSoC4/PWM.c **** * Return:
 334:.\Generated_Source\PSoC4/PWM.c **** *  None
 335:.\Generated_Source\PSoC4/PWM.c **** *
 336:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 337:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 338:.\Generated_Source\PSoC4/PWM.c **** {
 339:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 340:.\Generated_Source\PSoC4/PWM.c **** 
 341:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 342:.\Generated_Source\PSoC4/PWM.c **** 
 343:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 344:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 345:.\Generated_Source\PSoC4/PWM.c **** 
 346:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 347:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 8


 348:.\Generated_Source\PSoC4/PWM.c **** 
 349:.\Generated_Source\PSoC4/PWM.c **** 
 350:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 351:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 352:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 353:.\Generated_Source\PSoC4/PWM.c **** *
 354:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 355:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 356:.\Generated_Source\PSoC4/PWM.c **** *  to PWM with dead time mode or Quadrature Decoder mode.
 357:.\Generated_Source\PSoC4/PWM.c **** *
 358:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 359:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
 360:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 361:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 362:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 363:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 364:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 365:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 366:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 367:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 368:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 369:.\Generated_Source\PSoC4/PWM.c **** *
 370:.\Generated_Source\PSoC4/PWM.c **** * Return:
 371:.\Generated_Source\PSoC4/PWM.c **** *  None
 372:.\Generated_Source\PSoC4/PWM.c **** *
 373:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 374:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 375:.\Generated_Source\PSoC4/PWM.c **** {
 376:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 377:.\Generated_Source\PSoC4/PWM.c **** 
 378:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 379:.\Generated_Source\PSoC4/PWM.c **** 
 380:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 381:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 382:.\Generated_Source\PSoC4/PWM.c **** 
 383:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 384:.\Generated_Source\PSoC4/PWM.c **** }
 385:.\Generated_Source\PSoC4/PWM.c **** 
 386:.\Generated_Source\PSoC4/PWM.c **** 
 387:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 388:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 389:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 390:.\Generated_Source\PSoC4/PWM.c **** *
 391:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 392:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 393:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 394:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in continuous mode.
 395:.\Generated_Source\PSoC4/PWM.c **** *
 396:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 397:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 398:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 399:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 400:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 401:.\Generated_Source\PSoC4/PWM.c **** *
 402:.\Generated_Source\PSoC4/PWM.c **** * Return:
 403:.\Generated_Source\PSoC4/PWM.c **** *  None
 404:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 9


 405:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 406:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 407:.\Generated_Source\PSoC4/PWM.c **** {
 408:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 409:.\Generated_Source\PSoC4/PWM.c **** 
 410:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 411:.\Generated_Source\PSoC4/PWM.c **** 
 412:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 413:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 414:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 415:.\Generated_Source\PSoC4/PWM.c **** 
 416:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 417:.\Generated_Source\PSoC4/PWM.c **** }
 418:.\Generated_Source\PSoC4/PWM.c **** 
 419:.\Generated_Source\PSoC4/PWM.c **** 
 420:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 421:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 422:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 423:.\Generated_Source\PSoC4/PWM.c **** *
 424:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 425:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 426:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 427:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 428:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the 3 must be ORed together to form the
 429:.\Generated_Source\PSoC4/PWM.c **** *  mode.
 430:.\Generated_Source\PSoC4/PWM.c **** *
 431:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 432:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: Combination of the 3 mode settings.  Mask must include a value for
 433:.\Generated_Source\PSoC4/PWM.c **** *  each of the 3 or use one of the preconfigured PWM settings.
 434:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 435:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 436:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 437:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 438:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 439:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 440:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on overflow
 441:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 442:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 443:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 444:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 445:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 446:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 447:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 448:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 449:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 450:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 451:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be 
 452:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 453:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 455:.\Generated_Source\PSoC4/PWM.c **** *
 456:.\Generated_Source\PSoC4/PWM.c **** * Return:
 457:.\Generated_Source\PSoC4/PWM.c **** *  None
 458:.\Generated_Source\PSoC4/PWM.c **** *
 459:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 460:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
 461:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 10


 462:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 463:.\Generated_Source\PSoC4/PWM.c **** }
 464:.\Generated_Source\PSoC4/PWM.c **** 
 465:.\Generated_Source\PSoC4/PWM.c **** 
 466:.\Generated_Source\PSoC4/PWM.c **** 
 467:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 468:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 469:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 470:.\Generated_Source\PSoC4/PWM.c **** *
 471:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 472:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 473:.\Generated_Source\PSoC4/PWM.c **** *  causes an asynchronous or synchronous kill operation.  By default the kill
 474:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to PWM and
 475:.\Generated_Source\PSoC4/PWM.c **** *  PWM with dead time modes.
 476:.\Generated_Source\PSoC4/PWM.c **** *
 477:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 478:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 479:.\Generated_Source\PSoC4/PWM.c **** *
 480:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 481:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 482:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in pass through mode
 483:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 484:.\Generated_Source\PSoC4/PWM.c **** 
 485:.\Generated_Source\PSoC4/PWM.c **** *
 486:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 487:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 488:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 489:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 490:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 491:.\Generated_Source\PSoC4/PWM.c **** *
 492:.\Generated_Source\PSoC4/PWM.c **** * Return:
 493:.\Generated_Source\PSoC4/PWM.c **** *  None
 494:.\Generated_Source\PSoC4/PWM.c **** *
 495:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 496:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 497:.\Generated_Source\PSoC4/PWM.c **** {
 498:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 499:.\Generated_Source\PSoC4/PWM.c **** 
 500:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 501:.\Generated_Source\PSoC4/PWM.c **** 
 502:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 503:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 504:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 505:.\Generated_Source\PSoC4/PWM.c **** 
 506:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 507:.\Generated_Source\PSoC4/PWM.c **** }
 508:.\Generated_Source\PSoC4/PWM.c **** 
 509:.\Generated_Source\PSoC4/PWM.c **** 
 510:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 511:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 512:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 513:.\Generated_Source\PSoC4/PWM.c **** *
 514:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 515:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 516:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 517:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 518:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 11


 519:.\Generated_Source\PSoC4/PWM.c **** *
 520:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 521:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 522:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 523:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 524:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 525:.\Generated_Source\PSoC4/PWM.c **** *
 526:.\Generated_Source\PSoC4/PWM.c **** * Return:
 527:.\Generated_Source\PSoC4/PWM.c **** *  None
 528:.\Generated_Source\PSoC4/PWM.c **** *
 529:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 530:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 531:.\Generated_Source\PSoC4/PWM.c **** {
 532:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 533:.\Generated_Source\PSoC4/PWM.c **** 
 534:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 535:.\Generated_Source\PSoC4/PWM.c **** 
 536:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 537:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 538:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 539:.\Generated_Source\PSoC4/PWM.c **** 
 540:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 541:.\Generated_Source\PSoC4/PWM.c **** }
 542:.\Generated_Source\PSoC4/PWM.c **** 
 543:.\Generated_Source\PSoC4/PWM.c **** 
 544:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 545:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 546:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 547:.\Generated_Source\PSoC4/PWM.c **** *
 548:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 549:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 550:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 551:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 552:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in dead time mode.
 553:.\Generated_Source\PSoC4/PWM.c **** 
 554:.\Generated_Source\PSoC4/PWM.c **** *
 555:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 556:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 557:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 558:.\Generated_Source\PSoC4/PWM.c **** *
 559:.\Generated_Source\PSoC4/PWM.c **** * Return:
 560:.\Generated_Source\PSoC4/PWM.c **** *  None
 561:.\Generated_Source\PSoC4/PWM.c **** *
 562:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 563:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 564:.\Generated_Source\PSoC4/PWM.c **** {
 565:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 566:.\Generated_Source\PSoC4/PWM.c **** 
 567:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 568:.\Generated_Source\PSoC4/PWM.c **** 
 569:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 570:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 571:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 572:.\Generated_Source\PSoC4/PWM.c **** 
 573:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 574:.\Generated_Source\PSoC4/PWM.c **** }
 575:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 12


 576:.\Generated_Source\PSoC4/PWM.c **** 
 577:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 578:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 579:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 580:.\Generated_Source\PSoC4/PWM.c **** *
 581:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 582:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 583:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 584:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 585:.\Generated_Source\PSoC4/PWM.c **** *
 586:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 587:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 588:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 589:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 590:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 591:.\Generated_Source\PSoC4/PWM.c **** *
 592:.\Generated_Source\PSoC4/PWM.c **** * Return:
 593:.\Generated_Source\PSoC4/PWM.c **** *  None
 594:.\Generated_Source\PSoC4/PWM.c **** *
 595:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 597:.\Generated_Source\PSoC4/PWM.c **** {
 598:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 599:.\Generated_Source\PSoC4/PWM.c **** 
 600:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 601:.\Generated_Source\PSoC4/PWM.c **** 
 602:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 603:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 604:.\Generated_Source\PSoC4/PWM.c **** 
 605:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 606:.\Generated_Source\PSoC4/PWM.c **** }
 607:.\Generated_Source\PSoC4/PWM.c **** 
 608:.\Generated_Source\PSoC4/PWM.c **** 
 609:.\Generated_Source\PSoC4/PWM.c **** 
 610:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 611:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 612:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 613:.\Generated_Source\PSoC4/PWM.c **** *
 614:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 615:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 616:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 617:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 618:.\Generated_Source\PSoC4/PWM.c **** *
 619:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 620:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 621:.\Generated_Source\PSoC4/PWM.c **** *
 622:.\Generated_Source\PSoC4/PWM.c **** * Return:
 623:.\Generated_Source\PSoC4/PWM.c **** *  None
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 626:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 627:.\Generated_Source\PSoC4/PWM.c **** {
 628:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 629:.\Generated_Source\PSoC4/PWM.c **** }
 630:.\Generated_Source\PSoC4/PWM.c **** 
 631:.\Generated_Source\PSoC4/PWM.c **** 
 632:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 13


 633:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 634:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 635:.\Generated_Source\PSoC4/PWM.c **** *
 636:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 637:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 638:.\Generated_Source\PSoC4/PWM.c **** *
 639:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 640:.\Generated_Source\PSoC4/PWM.c **** *  None
 641:.\Generated_Source\PSoC4/PWM.c **** *
 642:.\Generated_Source\PSoC4/PWM.c **** * Return:
 643:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 644:.\Generated_Source\PSoC4/PWM.c **** *
 645:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 646:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 647:.\Generated_Source\PSoC4/PWM.c **** {
 648:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 649:.\Generated_Source\PSoC4/PWM.c **** }
 650:.\Generated_Source\PSoC4/PWM.c **** 
 651:.\Generated_Source\PSoC4/PWM.c **** 
 652:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 653:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 654:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 655:.\Generated_Source\PSoC4/PWM.c **** *
 656:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 657:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 658:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with pseudo random output.
 659:.\Generated_Source\PSoC4/PWM.c **** *
 660:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 661:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated couner type values
 662:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 663:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 664:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 665:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 666:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 667:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 668:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 669:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 670:.\Generated_Source\PSoC4/PWM.c **** *
 671:.\Generated_Source\PSoC4/PWM.c **** * Return:
 672:.\Generated_Source\PSoC4/PWM.c **** *  None
 673:.\Generated_Source\PSoC4/PWM.c **** *
 674:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 675:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 676:.\Generated_Source\PSoC4/PWM.c **** {
 677:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 678:.\Generated_Source\PSoC4/PWM.c **** 
 679:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 680:.\Generated_Source\PSoC4/PWM.c **** 
 681:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 682:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 683:.\Generated_Source\PSoC4/PWM.c **** 
 684:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 685:.\Generated_Source\PSoC4/PWM.c **** }
 686:.\Generated_Source\PSoC4/PWM.c **** 
 687:.\Generated_Source\PSoC4/PWM.c **** 
 688:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 689:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 14


 690:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 691:.\Generated_Source\PSoC4/PWM.c **** *
 692:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 693:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 694:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 695:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 696:.\Generated_Source\PSoC4/PWM.c **** *
 697:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 698:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 699:.\Generated_Source\PSoC4/PWM.c **** *
 700:.\Generated_Source\PSoC4/PWM.c **** * Return:
 701:.\Generated_Source\PSoC4/PWM.c **** *  None
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 704:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 705:.\Generated_Source\PSoC4/PWM.c **** {
 706:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 707:.\Generated_Source\PSoC4/PWM.c **** }
 708:.\Generated_Source\PSoC4/PWM.c **** 
 709:.\Generated_Source\PSoC4/PWM.c **** 
 710:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 711:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 712:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 713:.\Generated_Source\PSoC4/PWM.c **** *
 714:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 715:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 716:.\Generated_Source\PSoC4/PWM.c **** *
 717:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 718:.\Generated_Source\PSoC4/PWM.c **** *  None
 719:.\Generated_Source\PSoC4/PWM.c **** *
 720:.\Generated_Source\PSoC4/PWM.c **** * Return:
 721:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 724:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 725:.\Generated_Source\PSoC4/PWM.c **** {
 726:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 727:.\Generated_Source\PSoC4/PWM.c **** }
 728:.\Generated_Source\PSoC4/PWM.c **** 
 729:.\Generated_Source\PSoC4/PWM.c **** 
 730:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 731:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 732:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 733:.\Generated_Source\PSoC4/PWM.c **** *
 734:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 735:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 736:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode(without capture) the swap occurs
 737:.\Generated_Source\PSoC4/PWM.c **** *  at a TC event. In PWM mode the swap occurs at the next TC event following
 738:.\Generated_Source\PSoC4/PWM.c **** *  a hardware switch event.
 739:.\Generated_Source\PSoC4/PWM.c **** *
 740:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 741:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 742:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 743:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 744:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 745:.\Generated_Source\PSoC4/PWM.c **** *
 746:.\Generated_Source\PSoC4/PWM.c **** * Return:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 15


 747:.\Generated_Source\PSoC4/PWM.c **** *  None
 748:.\Generated_Source\PSoC4/PWM.c **** *
 749:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 750:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 751:.\Generated_Source\PSoC4/PWM.c **** {
 752:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 753:.\Generated_Source\PSoC4/PWM.c **** 
 754:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 755:.\Generated_Source\PSoC4/PWM.c **** 
 756:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 757:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 758:.\Generated_Source\PSoC4/PWM.c **** 
 759:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 760:.\Generated_Source\PSoC4/PWM.c **** }
 761:.\Generated_Source\PSoC4/PWM.c **** 
 762:.\Generated_Source\PSoC4/PWM.c **** 
 763:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 764:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 765:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 766:.\Generated_Source\PSoC4/PWM.c **** *
 767:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 768:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 769:.\Generated_Source\PSoC4/PWM.c **** *
 770:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 771:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Return:
 774:.\Generated_Source\PSoC4/PWM.c **** *  None
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 777:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 778:.\Generated_Source\PSoC4/PWM.c **** {
 779:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 780:.\Generated_Source\PSoC4/PWM.c **** }
 781:.\Generated_Source\PSoC4/PWM.c **** 
 782:.\Generated_Source\PSoC4/PWM.c **** 
 783:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 784:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 785:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 786:.\Generated_Source\PSoC4/PWM.c **** *
 787:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 788:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 789:.\Generated_Source\PSoC4/PWM.c **** *
 790:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 791:.\Generated_Source\PSoC4/PWM.c **** *  None
 792:.\Generated_Source\PSoC4/PWM.c **** *
 793:.\Generated_Source\PSoC4/PWM.c **** * Return:
 794:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 797:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 798:.\Generated_Source\PSoC4/PWM.c **** {
 799:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 800:.\Generated_Source\PSoC4/PWM.c **** }
 801:.\Generated_Source\PSoC4/PWM.c **** 
 802:.\Generated_Source\PSoC4/PWM.c **** 
 803:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 16


 804:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 805:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 806:.\Generated_Source\PSoC4/PWM.c **** *
 807:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 808:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 809:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 810:.\Generated_Source\PSoC4/PWM.c **** *  In PWM mode the swap occurs at the next TC event following a hardware switch
 811:.\Generated_Source\PSoC4/PWM.c **** *  event.
 812:.\Generated_Source\PSoC4/PWM.c **** *
 813:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 814:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 815:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 816:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 817:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 818:.\Generated_Source\PSoC4/PWM.c **** *
 819:.\Generated_Source\PSoC4/PWM.c **** * Return:
 820:.\Generated_Source\PSoC4/PWM.c **** *  None
 821:.\Generated_Source\PSoC4/PWM.c **** *
 822:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 823:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 824:.\Generated_Source\PSoC4/PWM.c **** {
 825:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 826:.\Generated_Source\PSoC4/PWM.c **** 
 827:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 828:.\Generated_Source\PSoC4/PWM.c **** 
 829:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 830:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 831:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 832:.\Generated_Source\PSoC4/PWM.c **** 
 833:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 834:.\Generated_Source\PSoC4/PWM.c **** }
 835:.\Generated_Source\PSoC4/PWM.c **** 
 836:.\Generated_Source\PSoC4/PWM.c **** 
 837:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 838:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 839:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 840:.\Generated_Source\PSoC4/PWM.c **** *
 841:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 842:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 843:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 844:.\Generated_Source\PSoC4/PWM.c **** *
 845:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 846:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 847:.\Generated_Source\PSoC4/PWM.c **** *
 848:.\Generated_Source\PSoC4/PWM.c **** * Return:
 849:.\Generated_Source\PSoC4/PWM.c **** *  None
 850:.\Generated_Source\PSoC4/PWM.c **** *
 851:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 852:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 853:.\Generated_Source\PSoC4/PWM.c **** {
 854:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 855:.\Generated_Source\PSoC4/PWM.c **** }
 856:.\Generated_Source\PSoC4/PWM.c **** 
 857:.\Generated_Source\PSoC4/PWM.c **** 
 858:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 859:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 860:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 17


 861:.\Generated_Source\PSoC4/PWM.c **** *
 862:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 863:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 864:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 865:.\Generated_Source\PSoC4/PWM.c **** *
 866:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 867:.\Generated_Source\PSoC4/PWM.c **** *  None
 868:.\Generated_Source\PSoC4/PWM.c **** *
 869:.\Generated_Source\PSoC4/PWM.c **** * Return:
 870:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 871:.\Generated_Source\PSoC4/PWM.c **** *
 872:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 873:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 874:.\Generated_Source\PSoC4/PWM.c **** {
 875:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 876:.\Generated_Source\PSoC4/PWM.c **** }
 877:.\Generated_Source\PSoC4/PWM.c **** 
 878:.\Generated_Source\PSoC4/PWM.c **** 
 879:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 880:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 881:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 882:.\Generated_Source\PSoC4/PWM.c **** *
 883:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 884:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 885:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 886:.\Generated_Source\PSoC4/PWM.c **** *
 887:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 888:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 889:.\Generated_Source\PSoC4/PWM.c **** *
 890:.\Generated_Source\PSoC4/PWM.c **** * Return:
 891:.\Generated_Source\PSoC4/PWM.c **** *  None
 892:.\Generated_Source\PSoC4/PWM.c **** *
 893:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 894:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 895:.\Generated_Source\PSoC4/PWM.c **** {
 896:.\Generated_Source\PSoC4/PWM.c ****    PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 897:.\Generated_Source\PSoC4/PWM.c **** }
 898:.\Generated_Source\PSoC4/PWM.c **** 
 899:.\Generated_Source\PSoC4/PWM.c **** 
 900:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 901:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 902:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 903:.\Generated_Source\PSoC4/PWM.c **** *
 904:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 905:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 906:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 907:.\Generated_Source\PSoC4/PWM.c **** *
 908:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 909:.\Generated_Source\PSoC4/PWM.c **** *  None
 910:.\Generated_Source\PSoC4/PWM.c **** *
 911:.\Generated_Source\PSoC4/PWM.c **** * Return:
 912:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 913:.\Generated_Source\PSoC4/PWM.c **** *
 914:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 915:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 916:.\Generated_Source\PSoC4/PWM.c **** {
 917:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 18


 918:.\Generated_Source\PSoC4/PWM.c **** }
 919:.\Generated_Source\PSoC4/PWM.c **** 
 920:.\Generated_Source\PSoC4/PWM.c **** 
 921:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 922:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
 923:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 924:.\Generated_Source\PSoC4/PWM.c **** *
 925:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 926:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
 927:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 928:.\Generated_Source\PSoC4/PWM.c **** *
 929:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 930:.\Generated_Source\PSoC4/PWM.c **** *  None
 931:.\Generated_Source\PSoC4/PWM.c **** *
 932:.\Generated_Source\PSoC4/PWM.c **** * Return:
 933:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
 934:.\Generated_Source\PSoC4/PWM.c **** *
 935:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 936:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
 937:.\Generated_Source\PSoC4/PWM.c **** {
 938:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 939:.\Generated_Source\PSoC4/PWM.c **** }
 940:.\Generated_Source\PSoC4/PWM.c **** 
 941:.\Generated_Source\PSoC4/PWM.c **** 
 942:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 943:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
 944:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 945:.\Generated_Source\PSoC4/PWM.c **** *
 946:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 947:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
 948:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with capture mode and Quadrature Decoder modes.
 949:.\Generated_Source\PSoC4/PWM.c **** *
 950:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 951:.\Generated_Source\PSoC4/PWM.c **** *  None
 952:.\Generated_Source\PSoC4/PWM.c **** *
 953:.\Generated_Source\PSoC4/PWM.c **** * Return:
 954:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
 955:.\Generated_Source\PSoC4/PWM.c **** *
 956:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 957:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
 958:.\Generated_Source\PSoC4/PWM.c **** {
 959:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PWM.c **** }
 961:.\Generated_Source\PSoC4/PWM.c **** 
 962:.\Generated_Source\PSoC4/PWM.c **** 
 963:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 964:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
 965:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 966:.\Generated_Source\PSoC4/PWM.c **** *
 967:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 968:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
 969:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
 970:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
 971:.\Generated_Source\PSoC4/PWM.c **** *
 972:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 973:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
 974:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 19


 975:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
 976:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
 977:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
 978:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
 979:.\Generated_Source\PSoC4/PWM.c **** *
 980:.\Generated_Source\PSoC4/PWM.c **** * Return:
 981:.\Generated_Source\PSoC4/PWM.c **** *  None
 982:.\Generated_Source\PSoC4/PWM.c **** *
 983:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 984:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
 985:.\Generated_Source\PSoC4/PWM.c **** {
 986:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 987:.\Generated_Source\PSoC4/PWM.c **** 
 988:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 989:.\Generated_Source\PSoC4/PWM.c **** 
 990:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 991:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 992:.\Generated_Source\PSoC4/PWM.c **** 
 993:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 994:.\Generated_Source\PSoC4/PWM.c **** }
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c **** 
 997:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 998:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
 999:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1000:.\Generated_Source\PSoC4/PWM.c **** *
1001:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1002:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1003:.\Generated_Source\PSoC4/PWM.c **** *  input.
1004:.\Generated_Source\PSoC4/PWM.c **** *
1005:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1006:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1007:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1008:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1009:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1010:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1011:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1012:.\Generated_Source\PSoC4/PWM.c **** *
1013:.\Generated_Source\PSoC4/PWM.c **** * Return:
1014:.\Generated_Source\PSoC4/PWM.c **** *  None
1015:.\Generated_Source\PSoC4/PWM.c **** *
1016:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1017:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1018:.\Generated_Source\PSoC4/PWM.c **** {
1019:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1020:.\Generated_Source\PSoC4/PWM.c **** 
1021:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1022:.\Generated_Source\PSoC4/PWM.c **** 
1023:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
1024:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
1025:.\Generated_Source\PSoC4/PWM.c **** 
1026:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1027:.\Generated_Source\PSoC4/PWM.c **** }
1028:.\Generated_Source\PSoC4/PWM.c **** 
1029:.\Generated_Source\PSoC4/PWM.c **** 
1030:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1031:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 20


1032:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1033:.\Generated_Source\PSoC4/PWM.c **** *
1034:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1035:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1036:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1037:.\Generated_Source\PSoC4/PWM.c **** *
1038:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1039:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1040:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1041:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1042:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1043:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1044:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1045:.\Generated_Source\PSoC4/PWM.c **** *
1046:.\Generated_Source\PSoC4/PWM.c **** * Return:
1047:.\Generated_Source\PSoC4/PWM.c **** *  None
1048:.\Generated_Source\PSoC4/PWM.c **** *
1049:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1050:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1051:.\Generated_Source\PSoC4/PWM.c **** {
1052:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1053:.\Generated_Source\PSoC4/PWM.c **** 
1054:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1055:.\Generated_Source\PSoC4/PWM.c **** 
1056:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
1057:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
1058:.\Generated_Source\PSoC4/PWM.c **** 
1059:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1060:.\Generated_Source\PSoC4/PWM.c **** }
1061:.\Generated_Source\PSoC4/PWM.c **** 
1062:.\Generated_Source\PSoC4/PWM.c **** 
1063:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1064:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1065:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1066:.\Generated_Source\PSoC4/PWM.c **** *
1067:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1068:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1069:.\Generated_Source\PSoC4/PWM.c **** *
1070:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1071:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1072:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1073:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1074:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1075:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1076:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1077:.\Generated_Source\PSoC4/PWM.c **** *
1078:.\Generated_Source\PSoC4/PWM.c **** * Return:
1079:.\Generated_Source\PSoC4/PWM.c **** *  None
1080:.\Generated_Source\PSoC4/PWM.c **** *
1081:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1082:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1083:.\Generated_Source\PSoC4/PWM.c **** {
1084:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1085:.\Generated_Source\PSoC4/PWM.c **** 
1086:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1087:.\Generated_Source\PSoC4/PWM.c **** 
1088:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 21


1089:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
1090:.\Generated_Source\PSoC4/PWM.c **** 
1091:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1092:.\Generated_Source\PSoC4/PWM.c **** }
1093:.\Generated_Source\PSoC4/PWM.c **** 
1094:.\Generated_Source\PSoC4/PWM.c **** 
1095:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1096:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1097:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1098:.\Generated_Source\PSoC4/PWM.c **** *
1099:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1100:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1101:.\Generated_Source\PSoC4/PWM.c **** *  input.
1102:.\Generated_Source\PSoC4/PWM.c **** *
1103:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1104:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1105:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1106:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1107:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1108:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1109:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1110:.\Generated_Source\PSoC4/PWM.c **** *
1111:.\Generated_Source\PSoC4/PWM.c **** * Return:
1112:.\Generated_Source\PSoC4/PWM.c **** *  None
1113:.\Generated_Source\PSoC4/PWM.c **** *
1114:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1115:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1116:.\Generated_Source\PSoC4/PWM.c **** {
1117:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1118:.\Generated_Source\PSoC4/PWM.c **** 
1119:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1120:.\Generated_Source\PSoC4/PWM.c **** 
1121:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
1122:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
1123:.\Generated_Source\PSoC4/PWM.c **** 
1124:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1125:.\Generated_Source\PSoC4/PWM.c **** }
1126:.\Generated_Source\PSoC4/PWM.c **** 
1127:.\Generated_Source\PSoC4/PWM.c **** 
1128:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1129:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1130:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1131:.\Generated_Source\PSoC4/PWM.c **** *
1132:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1133:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1134:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1135:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1136:.\Generated_Source\PSoC4/PWM.c **** *
1137:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1138:.\Generated_Source\PSoC4/PWM.c **** *  mask: Combination of mask bits for each instance of the TCPWM that the
1139:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1140:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1141:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1142:.\Generated_Source\PSoC4/PWM.c **** *        define.
1143:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1144:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1145:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 22


1146:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1147:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1148:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1149:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1150:.\Generated_Source\PSoC4/PWM.c **** *
1151:.\Generated_Source\PSoC4/PWM.c **** * Return:
1152:.\Generated_Source\PSoC4/PWM.c **** *  None
1153:.\Generated_Source\PSoC4/PWM.c **** *
1154:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1155:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1156:.\Generated_Source\PSoC4/PWM.c **** {
1157:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1158:.\Generated_Source\PSoC4/PWM.c **** 
1159:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
1160:.\Generated_Source\PSoC4/PWM.c **** 
1161:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
1162:.\Generated_Source\PSoC4/PWM.c **** 
1163:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
1164:.\Generated_Source\PSoC4/PWM.c **** }
1165:.\Generated_Source\PSoC4/PWM.c **** 
1166:.\Generated_Source\PSoC4/PWM.c **** 
1167:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1168:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1169:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1170:.\Generated_Source\PSoC4/PWM.c **** *
1171:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1172:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1173:.\Generated_Source\PSoC4/PWM.c **** *
1174:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1175:.\Generated_Source\PSoC4/PWM.c **** *  None
1176:.\Generated_Source\PSoC4/PWM.c **** *
1177:.\Generated_Source\PSoC4/PWM.c **** * Return:
1178:.\Generated_Source\PSoC4/PWM.c **** *  Status
1179:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1180:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1181:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1182:.\Generated_Source\PSoC4/PWM.c **** *
1183:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1184:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1185:.\Generated_Source\PSoC4/PWM.c **** {
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
1187:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
1188:.\Generated_Source\PSoC4/PWM.c **** }
1189:.\Generated_Source\PSoC4/PWM.c **** 
1190:.\Generated_Source\PSoC4/PWM.c **** 
1191:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1192:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1193:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1194:.\Generated_Source\PSoC4/PWM.c **** *
1195:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1196:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1197:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1198:.\Generated_Source\PSoC4/PWM.c **** *
1199:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1200:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1201:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1202:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 23


1203:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1204:.\Generated_Source\PSoC4/PWM.c **** *
1205:.\Generated_Source\PSoC4/PWM.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM.c **** *  None
1207:.\Generated_Source\PSoC4/PWM.c **** *
1208:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1210:.\Generated_Source\PSoC4/PWM.c **** {
1211:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
  52              		.loc 1 1211 0
  53 001e 084B     		ldr	r3, .L2+8
  54              	.LBE9:
  55              	.LBE8:
  56              	.LBB11:
  57              	.LBB12:
 706:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
  58              		.loc 1 706 0
  59 0020 084A     		ldr	r2, .L2+12
  60 0022 0948     		ldr	r0, .L2+16
  61              	.LBE12:
  62              	.LBE11:
  63              	.LBB14:
  64              	.LBB10:
  65              		.loc 1 1211 0
  66 0024 0021     		mov	r1, #0
  67 0026 1960     		str	r1, [r3]
  68              	.LVL1:
  69              	.LBE10:
  70              	.LBE14:
  71              	.LBB15:
  72              	.LBB13:
 706:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
  73              		.loc 1 706 0
  74 0028 0260     		str	r2, [r0]
  75              	.LVL2:
  76              	.LBE13:
  77              	.LBE15:
  78              	.LBB16:
  79              	.LBB17:
 854:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
  80              		.loc 1 854 0
  81 002a 0849     		ldr	r1, .L2+20
  82 002c 084B     		ldr	r3, .L2+24
  83              	.LBE17:
  84              	.LBE16:
 165:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
  85              		.loc 1 165 0
  86 002e 0948     		ldr	r0, .L2+28
  87 0030 1C22     		mov	r2, #28
  88              	.LBB19:
  89              	.LBB18:
 854:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
  90              		.loc 1 854 0
  91 0032 1960     		str	r1, [r3]
  92              	.LBE18:
  93              	.LBE19:
 177:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 24


  94              		.loc 1 177 0
  95              		@ sp needed for prologue
 165:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
  96              		.loc 1 165 0
  97 0034 0260     		str	r2, [r0]
 177:.\Generated_Source\PSoC4/PWM.c **** }
  98              		.loc 1 177 0
  99 0036 7047     		bx	lr
 100              	.L3:
 101              		.align	2
 102              	.L2:
 103 0038 00010540 		.word	1074069760
 104 003c 24010540 		.word	1074069796
 105 0040 38010540 		.word	1074069816
 106 0044 10270000 		.word	10000
 107 0048 14010540 		.word	1074069780
 108 004c 88130000 		.word	5000
 109 0050 0C010540 		.word	1074069772
 110 0054 28010540 		.word	1074069800
 111              		.cfi_endproc
 112              	.LFE0:
 113              		.size	PWM_Init, .-PWM_Init
 114              		.section	.text.PWM_Enable,"ax",%progbits
 115              		.align	1
 116              		.global	PWM_Enable
 117              		.code	16
 118              		.thumb_func
 119              		.type	PWM_Enable, %function
 120              	PWM_Enable:
 121              	.LFB1:
 195:.\Generated_Source\PSoC4/PWM.c **** {
 122              		.loc 1 195 0
 123              		.cfi_startproc
 124 0000 08B5     		push	{r3, lr}
 125              	.LCFI0:
 126              		.cfi_def_cfa_offset 8
 127              		.cfi_offset 3, -8
 128              		.cfi_offset 14, -4
 198:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 129              		.loc 1 198 0
 130 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 131              	.LVL3:
 199:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 132              		.loc 1 199 0
 133 0006 044B     		ldr	r3, .L5
 134 0008 0121     		mov	r1, #1
 135 000a 1A68     		ldr	r2, [r3]
 214:.\Generated_Source\PSoC4/PWM.c **** }
 136              		.loc 1 214 0
 137              		@ sp needed for prologue
 199:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 138              		.loc 1 199 0
 139 000c 0A43     		orr	r2, r1
 140 000e 1A60     		str	r2, [r3]
 200:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 141              		.loc 1 200 0
 142 0010 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 25


 143              	.LVL4:
 214:.\Generated_Source\PSoC4/PWM.c **** }
 144              		.loc 1 214 0
 145 0014 08BD     		pop	{r3, pc}
 146              	.L6:
 147 0016 C046     		.align	2
 148              	.L5:
 149 0018 00000540 		.word	1074069504
 150              		.cfi_endproc
 151              	.LFE1:
 152              		.size	PWM_Enable, .-PWM_Enable
 153              		.section	.text.PWM_Start,"ax",%progbits
 154              		.align	1
 155              		.global	PWM_Start
 156              		.code	16
 157              		.thumb_func
 158              		.type	PWM_Start, %function
 159              	PWM_Start:
 160              	.LFB2:
 242:.\Generated_Source\PSoC4/PWM.c **** {
 161              		.loc 1 242 0
 162              		.cfi_startproc
 163 0000 10B5     		push	{r4, lr}
 164              	.LCFI1:
 165              		.cfi_def_cfa_offset 8
 166              		.cfi_offset 4, -8
 167              		.cfi_offset 14, -4
 243:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 168              		.loc 1 243 0
 169 0002 054C     		ldr	r4, .L10
 170 0004 2378     		ldrb	r3, [r4]
 171 0006 002B     		cmp	r3, #0
 172 0008 03D1     		bne	.L8
 245:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 173              		.loc 1 245 0
 174 000a FFF7FEFF 		bl	PWM_Init
 175              	.LVL5:
 246:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 176              		.loc 1 246 0
 177 000e 0120     		mov	r0, #1
 178 0010 2070     		strb	r0, [r4]
 179              	.L8:
 249:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 180              		.loc 1 249 0
 181 0012 FFF7FEFF 		bl	PWM_Enable
 182              	.LVL6:
 250:.\Generated_Source\PSoC4/PWM.c **** }
 183              		.loc 1 250 0
 184              		@ sp needed for prologue
 185 0016 10BD     		pop	{r4, pc}
 186              	.L11:
 187              		.align	2
 188              	.L10:
 189 0018 00000000 		.word	.LANCHOR0
 190              		.cfi_endproc
 191              	.LFE2:
 192              		.size	PWM_Start, .-PWM_Start
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 26


 193              		.section	.text.PWM_Stop,"ax",%progbits
 194              		.align	1
 195              		.global	PWM_Stop
 196              		.code	16
 197              		.thumb_func
 198              		.type	PWM_Stop, %function
 199              	PWM_Stop:
 200              	.LFB3:
 268:.\Generated_Source\PSoC4/PWM.c **** {
 201              		.loc 1 268 0
 202              		.cfi_startproc
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 271:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 208              		.loc 1 271 0
 209 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 210              	.LVL7:
 273:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 211              		.loc 1 273 0
 212 0006 044B     		ldr	r3, .L13
 213 0008 0121     		mov	r1, #1
 214 000a 1A68     		ldr	r2, [r3]
 276:.\Generated_Source\PSoC4/PWM.c **** }
 215              		.loc 1 276 0
 216              		@ sp needed for prologue
 273:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 217              		.loc 1 273 0
 218 000c 8A43     		bic	r2, r1
 219 000e 1A60     		str	r2, [r3]
 275:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 220              		.loc 1 275 0
 221 0010 FFF7FEFF 		bl	CyExitCriticalSection
 222              	.LVL8:
 276:.\Generated_Source\PSoC4/PWM.c **** }
 223              		.loc 1 276 0
 224 0014 08BD     		pop	{r3, pc}
 225              	.L14:
 226 0016 C046     		.align	2
 227              	.L13:
 228 0018 00000540 		.word	1074069504
 229              		.cfi_endproc
 230              	.LFE3:
 231              		.size	PWM_Stop, .-PWM_Stop
 232              		.section	.text.PWM_SetMode,"ax",%progbits
 233              		.align	1
 234              		.global	PWM_SetMode
 235              		.code	16
 236              		.thumb_func
 237              		.type	PWM_SetMode, %function
 238              	PWM_SetMode:
 239              	.LFB4:
 305:.\Generated_Source\PSoC4/PWM.c **** {
 240              		.loc 1 305 0
 241              		.cfi_startproc
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 27


 242              	.LVL9:
 243 0000 10B5     		push	{r4, lr}
 244              	.LCFI3:
 245              		.cfi_def_cfa_offset 8
 246              		.cfi_offset 4, -8
 247              		.cfi_offset 14, -4
 305:.\Generated_Source\PSoC4/PWM.c **** {
 248              		.loc 1 305 0
 249 0002 041C     		mov	r4, r0
 308:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 250              		.loc 1 308 0
 251 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 252              	.LVL10:
 310:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 253              		.loc 1 310 0
 254 0008 054B     		ldr	r3, .L16
 255 000a 064A     		ldr	r2, .L16+4
 256 000c 1968     		ldr	r1, [r3]
 314:.\Generated_Source\PSoC4/PWM.c **** }
 257              		.loc 1 314 0
 258              		@ sp needed for prologue
 310:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 259              		.loc 1 310 0
 260 000e 0A40     		and	r2, r1
 261 0010 1A60     		str	r2, [r3]
 311:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 262              		.loc 1 311 0
 263 0012 1968     		ldr	r1, [r3]
 264 0014 0C43     		orr	r4, r1
 265              	.LVL11:
 266 0016 1C60     		str	r4, [r3]
 313:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 267              		.loc 1 313 0
 268 0018 FFF7FEFF 		bl	CyExitCriticalSection
 269              	.LVL12:
 314:.\Generated_Source\PSoC4/PWM.c **** }
 270              		.loc 1 314 0
 271 001c 10BD     		pop	{r4, pc}
 272              	.L17:
 273 001e C046     		.align	2
 274              	.L16:
 275 0020 00010540 		.word	1074069760
 276 0024 FFFFFFF8 		.word	-117440513
 277              		.cfi_endproc
 278              	.LFE4:
 279              		.size	PWM_SetMode, .-PWM_SetMode
 280              		.section	.text.PWM_SetQDMode,"ax",%progbits
 281              		.align	1
 282              		.global	PWM_SetQDMode
 283              		.code	16
 284              		.thumb_func
 285              		.type	PWM_SetQDMode, %function
 286              	PWM_SetQDMode:
 287              	.LFB5:
 338:.\Generated_Source\PSoC4/PWM.c **** {
 288              		.loc 1 338 0
 289              		.cfi_startproc
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 28


 290              	.LVL13:
 291 0000 10B5     		push	{r4, lr}
 292              	.LCFI4:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 4, -8
 295              		.cfi_offset 14, -4
 338:.\Generated_Source\PSoC4/PWM.c **** {
 296              		.loc 1 338 0
 297 0002 041C     		mov	r4, r0
 341:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 298              		.loc 1 341 0
 299 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 300              	.LVL14:
 343:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 301              		.loc 1 343 0
 302 0008 054B     		ldr	r3, .L19
 303 000a 064A     		ldr	r2, .L19+4
 304 000c 1968     		ldr	r1, [r3]
 347:.\Generated_Source\PSoC4/PWM.c **** }
 305              		.loc 1 347 0
 306              		@ sp needed for prologue
 343:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
 307              		.loc 1 343 0
 308 000e 0A40     		and	r2, r1
 309 0010 1A60     		str	r2, [r3]
 344:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 310              		.loc 1 344 0
 311 0012 1968     		ldr	r1, [r3]
 312 0014 0C43     		orr	r4, r1
 313              	.LVL15:
 314 0016 1C60     		str	r4, [r3]
 346:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 315              		.loc 1 346 0
 316 0018 FFF7FEFF 		bl	CyExitCriticalSection
 317              	.LVL16:
 347:.\Generated_Source\PSoC4/PWM.c **** }
 318              		.loc 1 347 0
 319 001c 10BD     		pop	{r4, pc}
 320              	.L20:
 321 001e C046     		.align	2
 322              	.L19:
 323 0020 00010540 		.word	1074069760
 324 0024 FFFF8FFF 		.word	-7340033
 325              		.cfi_endproc
 326              	.LFE5:
 327              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 328              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 329              		.align	1
 330              		.global	PWM_SetPrescaler
 331              		.code	16
 332              		.thumb_func
 333              		.type	PWM_SetPrescaler, %function
 334              	PWM_SetPrescaler:
 335              	.LFB6:
 375:.\Generated_Source\PSoC4/PWM.c **** {
 336              		.loc 1 375 0
 337              		.cfi_startproc
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 29


 338              	.LVL17:
 339 0000 10B5     		push	{r4, lr}
 340              	.LCFI5:
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 375:.\Generated_Source\PSoC4/PWM.c **** {
 344              		.loc 1 375 0
 345 0002 041C     		mov	r4, r0
 378:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 346              		.loc 1 378 0
 347 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 348              	.LVL18:
 380:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 349              		.loc 1 380 0
 350 0008 054B     		ldr	r3, .L22
 351 000a 064A     		ldr	r2, .L22+4
 352 000c 1968     		ldr	r1, [r3]
 384:.\Generated_Source\PSoC4/PWM.c **** }
 353              		.loc 1 384 0
 354              		@ sp needed for prologue
 380:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 355              		.loc 1 380 0
 356 000e 0A40     		and	r2, r1
 357 0010 1A60     		str	r2, [r3]
 381:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 358              		.loc 1 381 0
 359 0012 1968     		ldr	r1, [r3]
 360 0014 0C43     		orr	r4, r1
 361              	.LVL19:
 362 0016 1C60     		str	r4, [r3]
 383:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 363              		.loc 1 383 0
 364 0018 FFF7FEFF 		bl	CyExitCriticalSection
 365              	.LVL20:
 384:.\Generated_Source\PSoC4/PWM.c **** }
 366              		.loc 1 384 0
 367 001c 10BD     		pop	{r4, pc}
 368              	.L23:
 369 001e C046     		.align	2
 370              	.L22:
 371 0020 00010540 		.word	1074069760
 372 0024 FF00FFFF 		.word	-65281
 373              		.cfi_endproc
 374              	.LFE6:
 375              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 376              		.section	.text.PWM_SetOneShot,"ax",%progbits
 377              		.align	1
 378              		.global	PWM_SetOneShot
 379              		.code	16
 380              		.thumb_func
 381              		.type	PWM_SetOneShot, %function
 382              	PWM_SetOneShot:
 383              	.LFB7:
 407:.\Generated_Source\PSoC4/PWM.c **** {
 384              		.loc 1 407 0
 385              		.cfi_startproc
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 30


 386              	.LVL21:
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI6:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 407:.\Generated_Source\PSoC4/PWM.c **** {
 392              		.loc 1 407 0
 393 0002 041C     		mov	r4, r0
 410:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 394              		.loc 1 410 0
 395 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 396              	.LVL22:
 412:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 397              		.loc 1 412 0
 398 0008 064B     		ldr	r3, .L25
 399 000a 074A     		ldr	r2, .L25+4
 400 000c 1968     		ldr	r1, [r3]
 417:.\Generated_Source\PSoC4/PWM.c **** }
 401              		.loc 1 417 0
 402              		@ sp needed for prologue
 412:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 403              		.loc 1 412 0
 404 000e 0A40     		and	r2, r1
 405 0010 1A60     		str	r2, [r3]
 413:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 406              		.loc 1 413 0
 407 0012 0121     		mov	r1, #1
 408 0014 1A68     		ldr	r2, [r3]
 409 0016 0C40     		and	r4, r1
 410              	.LVL23:
 411 0018 A404     		lsl	r4, r4, #18
 412 001a 1443     		orr	r4, r2
 413 001c 1C60     		str	r4, [r3]
 416:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 414              		.loc 1 416 0
 415 001e FFF7FEFF 		bl	CyExitCriticalSection
 416              	.LVL24:
 417:.\Generated_Source\PSoC4/PWM.c **** }
 417              		.loc 1 417 0
 418 0022 10BD     		pop	{r4, pc}
 419              	.L26:
 420              		.align	2
 421              	.L25:
 422 0024 00010540 		.word	1074069760
 423 0028 FFFFFBFF 		.word	-262145
 424              		.cfi_endproc
 425              	.LFE7:
 426              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 427              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 428              		.align	1
 429              		.global	PWM_SetPWMMode
 430              		.code	16
 431              		.thumb_func
 432              		.type	PWM_SetPWMMode, %function
 433              	PWM_SetPWMMode:
 434              	.LFB8:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 31


 461:.\Generated_Source\PSoC4/PWM.c **** {
 435              		.loc 1 461 0
 436              		.cfi_startproc
 437              	.LVL25:
 462:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 438              		.loc 1 462 0
 439 0000 3F23     		mov	r3, #63
 440 0002 0249     		ldr	r1, .L28
 441 0004 1840     		and	r0, r3
 442              	.LVL26:
 443 0006 0860     		str	r0, [r1]
 463:.\Generated_Source\PSoC4/PWM.c **** }
 444              		.loc 1 463 0
 445              		@ sp needed for prologue
 446 0008 7047     		bx	lr
 447              	.L29:
 448 000a C046     		.align	2
 449              	.L28:
 450 000c 28010540 		.word	1074069800
 451              		.cfi_endproc
 452              	.LFE8:
 453              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 454              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 455              		.align	1
 456              		.global	PWM_SetPWMSyncKill
 457              		.code	16
 458              		.thumb_func
 459              		.type	PWM_SetPWMSyncKill, %function
 460              	PWM_SetPWMSyncKill:
 461              	.LFB9:
 497:.\Generated_Source\PSoC4/PWM.c **** {
 462              		.loc 1 497 0
 463              		.cfi_startproc
 464              	.LVL27:
 465 0000 10B5     		push	{r4, lr}
 466              	.LCFI7:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 497:.\Generated_Source\PSoC4/PWM.c **** {
 470              		.loc 1 497 0
 471 0002 041C     		mov	r4, r0
 500:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 472              		.loc 1 500 0
 473 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 474              	.LVL28:
 502:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 475              		.loc 1 502 0
 476 0008 064B     		ldr	r3, .L31
 477 000a 0421     		mov	r1, #4
 478 000c 1A68     		ldr	r2, [r3]
 507:.\Generated_Source\PSoC4/PWM.c **** }
 479              		.loc 1 507 0
 480              		@ sp needed for prologue
 502:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 481              		.loc 1 502 0
 482 000e 8A43     		bic	r2, r1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 32


 483 0010 1A60     		str	r2, [r3]
 503:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 484              		.loc 1 503 0
 485 0012 0121     		mov	r1, #1
 486 0014 1A68     		ldr	r2, [r3]
 487 0016 0C40     		and	r4, r1
 488              	.LVL29:
 489 0018 A400     		lsl	r4, r4, #2
 490 001a 1443     		orr	r4, r2
 491 001c 1C60     		str	r4, [r3]
 506:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 492              		.loc 1 506 0
 493 001e FFF7FEFF 		bl	CyExitCriticalSection
 494              	.LVL30:
 507:.\Generated_Source\PSoC4/PWM.c **** }
 495              		.loc 1 507 0
 496 0022 10BD     		pop	{r4, pc}
 497              	.L32:
 498              		.align	2
 499              	.L31:
 500 0024 00010540 		.word	1074069760
 501              		.cfi_endproc
 502              	.LFE9:
 503              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 504              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 505              		.align	1
 506              		.global	PWM_SetPWMStopOnKill
 507              		.code	16
 508              		.thumb_func
 509              		.type	PWM_SetPWMStopOnKill, %function
 510              	PWM_SetPWMStopOnKill:
 511              	.LFB10:
 531:.\Generated_Source\PSoC4/PWM.c **** {
 512              		.loc 1 531 0
 513              		.cfi_startproc
 514              	.LVL31:
 515 0000 10B5     		push	{r4, lr}
 516              	.LCFI8:
 517              		.cfi_def_cfa_offset 8
 518              		.cfi_offset 4, -8
 519              		.cfi_offset 14, -4
 531:.\Generated_Source\PSoC4/PWM.c **** {
 520              		.loc 1 531 0
 521 0002 041C     		mov	r4, r0
 534:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 522              		.loc 1 534 0
 523 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 524              	.LVL32:
 536:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 525              		.loc 1 536 0
 526 0008 064B     		ldr	r3, .L34
 527 000a 0821     		mov	r1, #8
 528 000c 1A68     		ldr	r2, [r3]
 541:.\Generated_Source\PSoC4/PWM.c **** }
 529              		.loc 1 541 0
 530              		@ sp needed for prologue
 536:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 33


 531              		.loc 1 536 0
 532 000e 8A43     		bic	r2, r1
 533 0010 1A60     		str	r2, [r3]
 537:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 534              		.loc 1 537 0
 535 0012 0121     		mov	r1, #1
 536 0014 1A68     		ldr	r2, [r3]
 537 0016 0C40     		and	r4, r1
 538              	.LVL33:
 539 0018 E400     		lsl	r4, r4, #3
 540 001a 1443     		orr	r4, r2
 541 001c 1C60     		str	r4, [r3]
 540:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 542              		.loc 1 540 0
 543 001e FFF7FEFF 		bl	CyExitCriticalSection
 544              	.LVL34:
 541:.\Generated_Source\PSoC4/PWM.c **** }
 545              		.loc 1 541 0
 546 0022 10BD     		pop	{r4, pc}
 547              	.L35:
 548              		.align	2
 549              	.L34:
 550 0024 00010540 		.word	1074069760
 551              		.cfi_endproc
 552              	.LFE10:
 553              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 554              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 555              		.align	1
 556              		.global	PWM_SetPWMDeadTime
 557              		.code	16
 558              		.thumb_func
 559              		.type	PWM_SetPWMDeadTime, %function
 560              	PWM_SetPWMDeadTime:
 561              	.LFB11:
 564:.\Generated_Source\PSoC4/PWM.c **** {
 562              		.loc 1 564 0
 563              		.cfi_startproc
 564              	.LVL35:
 565 0000 10B5     		push	{r4, lr}
 566              	.LCFI9:
 567              		.cfi_def_cfa_offset 8
 568              		.cfi_offset 4, -8
 569              		.cfi_offset 14, -4
 564:.\Generated_Source\PSoC4/PWM.c **** {
 570              		.loc 1 564 0
 571 0002 041C     		mov	r4, r0
 567:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 572              		.loc 1 567 0
 573 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 574              	.LVL36:
 569:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 575              		.loc 1 569 0
 576 0008 064B     		ldr	r3, .L37
 577 000a 074A     		ldr	r2, .L37+4
 578 000c 1968     		ldr	r1, [r3]
 570:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 579              		.loc 1 570 0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 34


 580 000e 2406     		lsl	r4, r4, #24
 581              	.LVL37:
 569:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 582              		.loc 1 569 0
 583 0010 0A40     		and	r2, r1
 584 0012 1A60     		str	r2, [r3]
 570:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 585              		.loc 1 570 0
 586 0014 1968     		ldr	r1, [r3]
 587 0016 220C     		lsr	r2, r4, #16
 588 0018 0A43     		orr	r2, r1
 589 001a 1A60     		str	r2, [r3]
 573:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 590              		.loc 1 573 0
 591 001c FFF7FEFF 		bl	CyExitCriticalSection
 592              	.LVL38:
 574:.\Generated_Source\PSoC4/PWM.c **** }
 593              		.loc 1 574 0
 594              		@ sp needed for prologue
 595 0020 10BD     		pop	{r4, pc}
 596              	.L38:
 597 0022 C046     		.align	2
 598              	.L37:
 599 0024 00010540 		.word	1074069760
 600 0028 FF00FFFF 		.word	-65281
 601              		.cfi_endproc
 602              	.LFE11:
 603              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 604              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 605              		.align	1
 606              		.global	PWM_SetPWMInvert
 607              		.code	16
 608              		.thumb_func
 609              		.type	PWM_SetPWMInvert, %function
 610              	PWM_SetPWMInvert:
 611              	.LFB12:
 597:.\Generated_Source\PSoC4/PWM.c **** {
 612              		.loc 1 597 0
 613              		.cfi_startproc
 614              	.LVL39:
 615 0000 10B5     		push	{r4, lr}
 616              	.LCFI10:
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 4, -8
 619              		.cfi_offset 14, -4
 597:.\Generated_Source\PSoC4/PWM.c **** {
 620              		.loc 1 597 0
 621 0002 041C     		mov	r4, r0
 600:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 622              		.loc 1 600 0
 623 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 624              	.LVL40:
 602:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 625              		.loc 1 602 0
 626 0008 054B     		ldr	r3, .L40
 627 000a 064A     		ldr	r2, .L40+4
 628 000c 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 35


 606:.\Generated_Source\PSoC4/PWM.c **** }
 629              		.loc 1 606 0
 630              		@ sp needed for prologue
 602:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 631              		.loc 1 602 0
 632 000e 0A40     		and	r2, r1
 633 0010 1A60     		str	r2, [r3]
 603:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 634              		.loc 1 603 0
 635 0012 1968     		ldr	r1, [r3]
 636 0014 0C43     		orr	r4, r1
 637              	.LVL41:
 638 0016 1C60     		str	r4, [r3]
 605:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 639              		.loc 1 605 0
 640 0018 FFF7FEFF 		bl	CyExitCriticalSection
 641              	.LVL42:
 606:.\Generated_Source\PSoC4/PWM.c **** }
 642              		.loc 1 606 0
 643 001c 10BD     		pop	{r4, pc}
 644              	.L41:
 645 001e C046     		.align	2
 646              	.L40:
 647 0020 00010540 		.word	1074069760
 648 0024 FFFFCFFF 		.word	-3145729
 649              		.cfi_endproc
 650              	.LFE12:
 651              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 652              		.section	.text.PWM_WriteCounter,"ax",%progbits
 653              		.align	1
 654              		.global	PWM_WriteCounter
 655              		.code	16
 656              		.thumb_func
 657              		.type	PWM_WriteCounter, %function
 658              	PWM_WriteCounter:
 659              	.LFB13:
 627:.\Generated_Source\PSoC4/PWM.c **** {
 660              		.loc 1 627 0
 661              		.cfi_startproc
 662              	.LVL43:
 628:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 663              		.loc 1 628 0
 664 0000 014B     		ldr	r3, .L43
 665 0002 80B2     		uxth	r0, r0
 666              	.LVL44:
 667 0004 1860     		str	r0, [r3]
 629:.\Generated_Source\PSoC4/PWM.c **** }
 668              		.loc 1 629 0
 669              		@ sp needed for prologue
 670 0006 7047     		bx	lr
 671              	.L44:
 672              		.align	2
 673              	.L43:
 674 0008 08010540 		.word	1074069768
 675              		.cfi_endproc
 676              	.LFE13:
 677              		.size	PWM_WriteCounter, .-PWM_WriteCounter
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 36


 678              		.section	.text.PWM_ReadCounter,"ax",%progbits
 679              		.align	1
 680              		.global	PWM_ReadCounter
 681              		.code	16
 682              		.thumb_func
 683              		.type	PWM_ReadCounter, %function
 684              	PWM_ReadCounter:
 685              	.LFB14:
 647:.\Generated_Source\PSoC4/PWM.c **** {
 686              		.loc 1 647 0
 687              		.cfi_startproc
 648:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 688              		.loc 1 648 0
 689 0000 014B     		ldr	r3, .L46
 649:.\Generated_Source\PSoC4/PWM.c **** }
 690              		.loc 1 649 0
 691              		@ sp needed for prologue
 648:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 692              		.loc 1 648 0
 693 0002 1868     		ldr	r0, [r3]
 694 0004 80B2     		uxth	r0, r0
 649:.\Generated_Source\PSoC4/PWM.c **** }
 695              		.loc 1 649 0
 696 0006 7047     		bx	lr
 697              	.L47:
 698              		.align	2
 699              	.L46:
 700 0008 08010540 		.word	1074069768
 701              		.cfi_endproc
 702              	.LFE14:
 703              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 704              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 705              		.align	1
 706              		.global	PWM_SetCounterMode
 707              		.code	16
 708              		.thumb_func
 709              		.type	PWM_SetCounterMode, %function
 710              	PWM_SetCounterMode:
 711              	.LFB15:
 676:.\Generated_Source\PSoC4/PWM.c **** {
 712              		.loc 1 676 0
 713              		.cfi_startproc
 714              	.LVL45:
 715 0000 10B5     		push	{r4, lr}
 716              	.LCFI11:
 717              		.cfi_def_cfa_offset 8
 718              		.cfi_offset 4, -8
 719              		.cfi_offset 14, -4
 676:.\Generated_Source\PSoC4/PWM.c **** {
 720              		.loc 1 676 0
 721 0002 041C     		mov	r4, r0
 679:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 722              		.loc 1 679 0
 723 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 724              	.LVL46:
 681:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 725              		.loc 1 681 0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 37


 726 0008 054B     		ldr	r3, .L49
 727 000a 064A     		ldr	r2, .L49+4
 728 000c 1968     		ldr	r1, [r3]
 685:.\Generated_Source\PSoC4/PWM.c **** }
 729              		.loc 1 685 0
 730              		@ sp needed for prologue
 681:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 731              		.loc 1 681 0
 732 000e 0A40     		and	r2, r1
 733 0010 1A60     		str	r2, [r3]
 682:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 734              		.loc 1 682 0
 735 0012 1968     		ldr	r1, [r3]
 736 0014 0C43     		orr	r4, r1
 737              	.LVL47:
 738 0016 1C60     		str	r4, [r3]
 684:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 739              		.loc 1 684 0
 740 0018 FFF7FEFF 		bl	CyExitCriticalSection
 741              	.LVL48:
 685:.\Generated_Source\PSoC4/PWM.c **** }
 742              		.loc 1 685 0
 743 001c 10BD     		pop	{r4, pc}
 744              	.L50:
 745 001e C046     		.align	2
 746              	.L49:
 747 0020 00010540 		.word	1074069760
 748 0024 FFFFFCFF 		.word	-196609
 749              		.cfi_endproc
 750              	.LFE15:
 751              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 752              		.section	.text.PWM_WritePeriod,"ax",%progbits
 753              		.align	1
 754              		.global	PWM_WritePeriod
 755              		.code	16
 756              		.thumb_func
 757              		.type	PWM_WritePeriod, %function
 758              	PWM_WritePeriod:
 759              	.LFB16:
 705:.\Generated_Source\PSoC4/PWM.c **** {
 760              		.loc 1 705 0
 761              		.cfi_startproc
 762              	.LVL49:
 706:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 763              		.loc 1 706 0
 764 0000 014B     		ldr	r3, .L52
 765 0002 80B2     		uxth	r0, r0
 766              	.LVL50:
 767 0004 1860     		str	r0, [r3]
 707:.\Generated_Source\PSoC4/PWM.c **** }
 768              		.loc 1 707 0
 769              		@ sp needed for prologue
 770 0006 7047     		bx	lr
 771              	.L53:
 772              		.align	2
 773              	.L52:
 774 0008 14010540 		.word	1074069780
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 38


 775              		.cfi_endproc
 776              	.LFE16:
 777              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 778              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 779              		.align	1
 780              		.global	PWM_ReadPeriod
 781              		.code	16
 782              		.thumb_func
 783              		.type	PWM_ReadPeriod, %function
 784              	PWM_ReadPeriod:
 785              	.LFB17:
 725:.\Generated_Source\PSoC4/PWM.c **** {
 786              		.loc 1 725 0
 787              		.cfi_startproc
 726:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 788              		.loc 1 726 0
 789 0000 014B     		ldr	r3, .L55
 727:.\Generated_Source\PSoC4/PWM.c **** }
 790              		.loc 1 727 0
 791              		@ sp needed for prologue
 726:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 792              		.loc 1 726 0
 793 0002 1868     		ldr	r0, [r3]
 794 0004 80B2     		uxth	r0, r0
 727:.\Generated_Source\PSoC4/PWM.c **** }
 795              		.loc 1 727 0
 796 0006 7047     		bx	lr
 797              	.L56:
 798              		.align	2
 799              	.L55:
 800 0008 14010540 		.word	1074069780
 801              		.cfi_endproc
 802              	.LFE17:
 803              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 804              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 805              		.align	1
 806              		.global	PWM_SetCompareSwap
 807              		.code	16
 808              		.thumb_func
 809              		.type	PWM_SetCompareSwap, %function
 810              	PWM_SetCompareSwap:
 811              	.LFB18:
 751:.\Generated_Source\PSoC4/PWM.c **** {
 812              		.loc 1 751 0
 813              		.cfi_startproc
 814              	.LVL51:
 815 0000 10B5     		push	{r4, lr}
 816              	.LCFI12:
 817              		.cfi_def_cfa_offset 8
 818              		.cfi_offset 4, -8
 819              		.cfi_offset 14, -4
 751:.\Generated_Source\PSoC4/PWM.c **** {
 820              		.loc 1 751 0
 821 0002 041C     		mov	r4, r0
 754:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 822              		.loc 1 754 0
 823 0004 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 39


 824              	.LVL52:
 756:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 825              		.loc 1 756 0
 826 0008 054B     		ldr	r3, .L58
 827 000a 0122     		mov	r2, #1
 828 000c 1968     		ldr	r1, [r3]
 760:.\Generated_Source\PSoC4/PWM.c **** }
 829              		.loc 1 760 0
 830              		@ sp needed for prologue
 756:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 831              		.loc 1 756 0
 832 000e 9143     		bic	r1, r2
 833 0010 1960     		str	r1, [r3]
 757:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 834              		.loc 1 757 0
 835 0012 1968     		ldr	r1, [r3]
 836 0014 2240     		and	r2, r4
 837 0016 0A43     		orr	r2, r1
 838 0018 1A60     		str	r2, [r3]
 759:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 839              		.loc 1 759 0
 840 001a FFF7FEFF 		bl	CyExitCriticalSection
 841              	.LVL53:
 842              	.LVL54:
 760:.\Generated_Source\PSoC4/PWM.c **** }
 843              		.loc 1 760 0
 844 001e 10BD     		pop	{r4, pc}
 845              	.L59:
 846              		.align	2
 847              	.L58:
 848 0020 00010540 		.word	1074069760
 849              		.cfi_endproc
 850              	.LFE18:
 851              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 852              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 853              		.align	1
 854              		.global	PWM_WritePeriodBuf
 855              		.code	16
 856              		.thumb_func
 857              		.type	PWM_WritePeriodBuf, %function
 858              	PWM_WritePeriodBuf:
 859              	.LFB19:
 778:.\Generated_Source\PSoC4/PWM.c **** {
 860              		.loc 1 778 0
 861              		.cfi_startproc
 862              	.LVL55:
 779:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 863              		.loc 1 779 0
 864 0000 014B     		ldr	r3, .L61
 865 0002 80B2     		uxth	r0, r0
 866              	.LVL56:
 867 0004 1860     		str	r0, [r3]
 780:.\Generated_Source\PSoC4/PWM.c **** }
 868              		.loc 1 780 0
 869              		@ sp needed for prologue
 870 0006 7047     		bx	lr
 871              	.L62:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 40


 872              		.align	2
 873              	.L61:
 874 0008 18010540 		.word	1074069784
 875              		.cfi_endproc
 876              	.LFE19:
 877              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 878              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 879              		.align	1
 880              		.global	PWM_ReadPeriodBuf
 881              		.code	16
 882              		.thumb_func
 883              		.type	PWM_ReadPeriodBuf, %function
 884              	PWM_ReadPeriodBuf:
 885              	.LFB20:
 798:.\Generated_Source\PSoC4/PWM.c **** {
 886              		.loc 1 798 0
 887              		.cfi_startproc
 799:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 888              		.loc 1 799 0
 889 0000 014B     		ldr	r3, .L64
 800:.\Generated_Source\PSoC4/PWM.c **** }
 890              		.loc 1 800 0
 891              		@ sp needed for prologue
 799:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 892              		.loc 1 799 0
 893 0002 1868     		ldr	r0, [r3]
 894 0004 80B2     		uxth	r0, r0
 800:.\Generated_Source\PSoC4/PWM.c **** }
 895              		.loc 1 800 0
 896 0006 7047     		bx	lr
 897              	.L65:
 898              		.align	2
 899              	.L64:
 900 0008 18010540 		.word	1074069784
 901              		.cfi_endproc
 902              	.LFE20:
 903              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 904              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 905              		.align	1
 906              		.global	PWM_SetPeriodSwap
 907              		.code	16
 908              		.thumb_func
 909              		.type	PWM_SetPeriodSwap, %function
 910              	PWM_SetPeriodSwap:
 911              	.LFB21:
 824:.\Generated_Source\PSoC4/PWM.c **** {
 912              		.loc 1 824 0
 913              		.cfi_startproc
 914              	.LVL57:
 915 0000 10B5     		push	{r4, lr}
 916              	.LCFI13:
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 4, -8
 919              		.cfi_offset 14, -4
 824:.\Generated_Source\PSoC4/PWM.c **** {
 920              		.loc 1 824 0
 921 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 41


 827:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 922              		.loc 1 827 0
 923 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 924              	.LVL58:
 829:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 925              		.loc 1 829 0
 926 0008 064B     		ldr	r3, .L67
 927 000a 0221     		mov	r1, #2
 928 000c 1A68     		ldr	r2, [r3]
 834:.\Generated_Source\PSoC4/PWM.c **** }
 929              		.loc 1 834 0
 930              		@ sp needed for prologue
 829:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 931              		.loc 1 829 0
 932 000e 8A43     		bic	r2, r1
 933 0010 1A60     		str	r2, [r3]
 830:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 934              		.loc 1 830 0
 935 0012 0121     		mov	r1, #1
 936 0014 1A68     		ldr	r2, [r3]
 937 0016 0C40     		and	r4, r1
 938              	.LVL59:
 939 0018 8C40     		lsl	r4, r4, r1
 940 001a 1443     		orr	r4, r2
 941 001c 1C60     		str	r4, [r3]
 833:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 942              		.loc 1 833 0
 943 001e FFF7FEFF 		bl	CyExitCriticalSection
 944              	.LVL60:
 834:.\Generated_Source\PSoC4/PWM.c **** }
 945              		.loc 1 834 0
 946 0022 10BD     		pop	{r4, pc}
 947              	.L68:
 948              		.align	2
 949              	.L67:
 950 0024 00010540 		.word	1074069760
 951              		.cfi_endproc
 952              	.LFE21:
 953              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 954              		.section	.text.PWM_WriteCompare,"ax",%progbits
 955              		.align	1
 956              		.global	PWM_WriteCompare
 957              		.code	16
 958              		.thumb_func
 959              		.type	PWM_WriteCompare, %function
 960              	PWM_WriteCompare:
 961              	.LFB22:
 853:.\Generated_Source\PSoC4/PWM.c **** {
 962              		.loc 1 853 0
 963              		.cfi_startproc
 964              	.LVL61:
 854:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 965              		.loc 1 854 0
 966 0000 014B     		ldr	r3, .L70
 967 0002 80B2     		uxth	r0, r0
 968              	.LVL62:
 969 0004 1860     		str	r0, [r3]
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 42


 855:.\Generated_Source\PSoC4/PWM.c **** }
 970              		.loc 1 855 0
 971              		@ sp needed for prologue
 972 0006 7047     		bx	lr
 973              	.L71:
 974              		.align	2
 975              	.L70:
 976 0008 0C010540 		.word	1074069772
 977              		.cfi_endproc
 978              	.LFE22:
 979              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 980              		.section	.text.PWM_ReadCompare,"ax",%progbits
 981              		.align	1
 982              		.global	PWM_ReadCompare
 983              		.code	16
 984              		.thumb_func
 985              		.type	PWM_ReadCompare, %function
 986              	PWM_ReadCompare:
 987              	.LFB23:
 874:.\Generated_Source\PSoC4/PWM.c **** {
 988              		.loc 1 874 0
 989              		.cfi_startproc
 875:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 990              		.loc 1 875 0
 991 0000 014B     		ldr	r3, .L73
 876:.\Generated_Source\PSoC4/PWM.c **** }
 992              		.loc 1 876 0
 993              		@ sp needed for prologue
 875:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 994              		.loc 1 875 0
 995 0002 1868     		ldr	r0, [r3]
 996 0004 80B2     		uxth	r0, r0
 876:.\Generated_Source\PSoC4/PWM.c **** }
 997              		.loc 1 876 0
 998 0006 7047     		bx	lr
 999              	.L74:
 1000              		.align	2
 1001              	.L73:
 1002 0008 0C010540 		.word	1074069772
 1003              		.cfi_endproc
 1004              	.LFE23:
 1005              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1006              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1007              		.align	1
 1008              		.global	PWM_WriteCompareBuf
 1009              		.code	16
 1010              		.thumb_func
 1011              		.type	PWM_WriteCompareBuf, %function
 1012              	PWM_WriteCompareBuf:
 1013              	.LFB24:
 895:.\Generated_Source\PSoC4/PWM.c **** {
 1014              		.loc 1 895 0
 1015              		.cfi_startproc
 1016              	.LVL63:
 896:.\Generated_Source\PSoC4/PWM.c ****    PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1017              		.loc 1 896 0
 1018 0000 014B     		ldr	r3, .L76
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 43


 1019 0002 80B2     		uxth	r0, r0
 1020              	.LVL64:
 1021 0004 1860     		str	r0, [r3]
 897:.\Generated_Source\PSoC4/PWM.c **** }
 1022              		.loc 1 897 0
 1023              		@ sp needed for prologue
 1024 0006 7047     		bx	lr
 1025              	.L77:
 1026              		.align	2
 1027              	.L76:
 1028 0008 10010540 		.word	1074069776
 1029              		.cfi_endproc
 1030              	.LFE24:
 1031              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1032              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1033              		.align	1
 1034              		.global	PWM_ReadCompareBuf
 1035              		.code	16
 1036              		.thumb_func
 1037              		.type	PWM_ReadCompareBuf, %function
 1038              	PWM_ReadCompareBuf:
 1039              	.LFB25:
 916:.\Generated_Source\PSoC4/PWM.c **** {
 1040              		.loc 1 916 0
 1041              		.cfi_startproc
 917:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1042              		.loc 1 917 0
 1043 0000 014B     		ldr	r3, .L79
 918:.\Generated_Source\PSoC4/PWM.c **** }
 1044              		.loc 1 918 0
 1045              		@ sp needed for prologue
 917:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1046              		.loc 1 917 0
 1047 0002 1868     		ldr	r0, [r3]
 1048 0004 80B2     		uxth	r0, r0
 918:.\Generated_Source\PSoC4/PWM.c **** }
 1049              		.loc 1 918 0
 1050 0006 7047     		bx	lr
 1051              	.L80:
 1052              		.align	2
 1053              	.L79:
 1054 0008 10010540 		.word	1074069776
 1055              		.cfi_endproc
 1056              	.LFE25:
 1057              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1058              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1059              		.align	1
 1060              		.global	PWM_ReadCapture
 1061              		.code	16
 1062              		.thumb_func
 1063              		.type	PWM_ReadCapture, %function
 1064              	PWM_ReadCapture:
 1065              	.LFB26:
 937:.\Generated_Source\PSoC4/PWM.c **** {
 1066              		.loc 1 937 0
 1067              		.cfi_startproc
 938:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 44


 1068              		.loc 1 938 0
 1069 0000 014B     		ldr	r3, .L82
 939:.\Generated_Source\PSoC4/PWM.c **** }
 1070              		.loc 1 939 0
 1071              		@ sp needed for prologue
 938:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1072              		.loc 1 938 0
 1073 0002 1868     		ldr	r0, [r3]
 1074 0004 80B2     		uxth	r0, r0
 939:.\Generated_Source\PSoC4/PWM.c **** }
 1075              		.loc 1 939 0
 1076 0006 7047     		bx	lr
 1077              	.L83:
 1078              		.align	2
 1079              	.L82:
 1080 0008 0C010540 		.word	1074069772
 1081              		.cfi_endproc
 1082              	.LFE26:
 1083              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1084              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1085              		.align	1
 1086              		.global	PWM_ReadCaptureBuf
 1087              		.code	16
 1088              		.thumb_func
 1089              		.type	PWM_ReadCaptureBuf, %function
 1090              	PWM_ReadCaptureBuf:
 1091              	.LFB27:
 958:.\Generated_Source\PSoC4/PWM.c **** {
 1092              		.loc 1 958 0
 1093              		.cfi_startproc
 959:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1094              		.loc 1 959 0
 1095 0000 014B     		ldr	r3, .L85
 960:.\Generated_Source\PSoC4/PWM.c **** }
 1096              		.loc 1 960 0
 1097              		@ sp needed for prologue
 959:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1098              		.loc 1 959 0
 1099 0002 1868     		ldr	r0, [r3]
 1100 0004 80B2     		uxth	r0, r0
 960:.\Generated_Source\PSoC4/PWM.c **** }
 1101              		.loc 1 960 0
 1102 0006 7047     		bx	lr
 1103              	.L86:
 1104              		.align	2
 1105              	.L85:
 1106 0008 10010540 		.word	1074069776
 1107              		.cfi_endproc
 1108              	.LFE27:
 1109              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1110              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1111              		.align	1
 1112              		.global	PWM_SetCaptureMode
 1113              		.code	16
 1114              		.thumb_func
 1115              		.type	PWM_SetCaptureMode, %function
 1116              	PWM_SetCaptureMode:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 45


 1117              	.LFB28:
 985:.\Generated_Source\PSoC4/PWM.c **** {
 1118              		.loc 1 985 0
 1119              		.cfi_startproc
 1120              	.LVL65:
 1121 0000 10B5     		push	{r4, lr}
 1122              	.LCFI14:
 1123              		.cfi_def_cfa_offset 8
 1124              		.cfi_offset 4, -8
 1125              		.cfi_offset 14, -4
 985:.\Generated_Source\PSoC4/PWM.c **** {
 1126              		.loc 1 985 0
 1127 0002 041C     		mov	r4, r0
 988:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1128              		.loc 1 988 0
 1129 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1130              	.LVL66:
 990:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1131              		.loc 1 990 0
 1132 0008 054B     		ldr	r3, .L88
 1133 000a 0321     		mov	r1, #3
 1134 000c 1A68     		ldr	r2, [r3]
 994:.\Generated_Source\PSoC4/PWM.c **** }
 1135              		.loc 1 994 0
 1136              		@ sp needed for prologue
 990:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1137              		.loc 1 990 0
 1138 000e 8A43     		bic	r2, r1
 1139 0010 1A60     		str	r2, [r3]
 991:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1140              		.loc 1 991 0
 1141 0012 1A68     		ldr	r2, [r3]
 1142 0014 1443     		orr	r4, r2
 1143              	.LVL67:
 1144 0016 1C60     		str	r4, [r3]
 993:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1145              		.loc 1 993 0
 1146 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1147              	.LVL68:
 994:.\Generated_Source\PSoC4/PWM.c **** }
 1148              		.loc 1 994 0
 1149 001c 10BD     		pop	{r4, pc}
 1150              	.L89:
 1151 001e C046     		.align	2
 1152              	.L88:
 1153 0020 24010540 		.word	1074069796
 1154              		.cfi_endproc
 1155              	.LFE28:
 1156              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1157              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1158              		.align	1
 1159              		.global	PWM_SetReloadMode
 1160              		.code	16
 1161              		.thumb_func
 1162              		.type	PWM_SetReloadMode, %function
 1163              	PWM_SetReloadMode:
 1164              	.LFB29:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 46


1018:.\Generated_Source\PSoC4/PWM.c **** {
 1165              		.loc 1 1018 0
 1166              		.cfi_startproc
 1167              	.LVL69:
 1168 0000 10B5     		push	{r4, lr}
 1169              	.LCFI15:
 1170              		.cfi_def_cfa_offset 8
 1171              		.cfi_offset 4, -8
 1172              		.cfi_offset 14, -4
1018:.\Generated_Source\PSoC4/PWM.c **** {
 1173              		.loc 1 1018 0
 1174 0002 041C     		mov	r4, r0
1021:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1175              		.loc 1 1021 0
 1176 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1177              	.LVL70:
1023:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1178              		.loc 1 1023 0
 1179 0008 054B     		ldr	r3, .L91
 1180 000a 3021     		mov	r1, #48
 1181 000c 1A68     		ldr	r2, [r3]
1024:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1182              		.loc 1 1024 0
 1183 000e 2401     		lsl	r4, r4, #4
 1184              	.LVL71:
1023:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1185              		.loc 1 1023 0
 1186 0010 8A43     		bic	r2, r1
 1187 0012 1A60     		str	r2, [r3]
1024:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1188              		.loc 1 1024 0
 1189 0014 1A68     		ldr	r2, [r3]
1027:.\Generated_Source\PSoC4/PWM.c **** }
 1190              		.loc 1 1027 0
 1191              		@ sp needed for prologue
1024:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1192              		.loc 1 1024 0
 1193 0016 1443     		orr	r4, r2
 1194 0018 1C60     		str	r4, [r3]
1026:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1195              		.loc 1 1026 0
 1196 001a FFF7FEFF 		bl	CyExitCriticalSection
 1197              	.LVL72:
1027:.\Generated_Source\PSoC4/PWM.c **** }
 1198              		.loc 1 1027 0
 1199 001e 10BD     		pop	{r4, pc}
 1200              	.L92:
 1201              		.align	2
 1202              	.L91:
 1203 0020 24010540 		.word	1074069796
 1204              		.cfi_endproc
 1205              	.LFE29:
 1206              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1207              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1208              		.align	1
 1209              		.global	PWM_SetStartMode
 1210              		.code	16
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 47


 1211              		.thumb_func
 1212              		.type	PWM_SetStartMode, %function
 1213              	PWM_SetStartMode:
 1214              	.LFB30:
1051:.\Generated_Source\PSoC4/PWM.c **** {
 1215              		.loc 1 1051 0
 1216              		.cfi_startproc
 1217              	.LVL73:
 1218 0000 10B5     		push	{r4, lr}
 1219              	.LCFI16:
 1220              		.cfi_def_cfa_offset 8
 1221              		.cfi_offset 4, -8
 1222              		.cfi_offset 14, -4
1051:.\Generated_Source\PSoC4/PWM.c **** {
 1223              		.loc 1 1051 0
 1224 0002 041C     		mov	r4, r0
1054:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1225              		.loc 1 1054 0
 1226 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1227              	.LVL74:
1056:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1228              		.loc 1 1056 0
 1229 0008 054B     		ldr	r3, .L94
 1230 000a 064A     		ldr	r2, .L94+4
 1231 000c 1968     		ldr	r1, [r3]
1057:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1232              		.loc 1 1057 0
 1233 000e 2402     		lsl	r4, r4, #8
 1234              	.LVL75:
1056:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1235              		.loc 1 1056 0
 1236 0010 0A40     		and	r2, r1
 1237 0012 1A60     		str	r2, [r3]
1057:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1238              		.loc 1 1057 0
 1239 0014 1968     		ldr	r1, [r3]
1060:.\Generated_Source\PSoC4/PWM.c **** }
 1240              		.loc 1 1060 0
 1241              		@ sp needed for prologue
1057:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1242              		.loc 1 1057 0
 1243 0016 0C43     		orr	r4, r1
 1244 0018 1C60     		str	r4, [r3]
1059:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1245              		.loc 1 1059 0
 1246 001a FFF7FEFF 		bl	CyExitCriticalSection
 1247              	.LVL76:
1060:.\Generated_Source\PSoC4/PWM.c **** }
 1248              		.loc 1 1060 0
 1249 001e 10BD     		pop	{r4, pc}
 1250              	.L95:
 1251              		.align	2
 1252              	.L94:
 1253 0020 24010540 		.word	1074069796
 1254 0024 FFFCFFFF 		.word	-769
 1255              		.cfi_endproc
 1256              	.LFE30:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 48


 1257              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1258              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1259              		.align	1
 1260              		.global	PWM_SetStopMode
 1261              		.code	16
 1262              		.thumb_func
 1263              		.type	PWM_SetStopMode, %function
 1264              	PWM_SetStopMode:
 1265              	.LFB31:
1083:.\Generated_Source\PSoC4/PWM.c **** {
 1266              		.loc 1 1083 0
 1267              		.cfi_startproc
 1268              	.LVL77:
 1269 0000 10B5     		push	{r4, lr}
 1270              	.LCFI17:
 1271              		.cfi_def_cfa_offset 8
 1272              		.cfi_offset 4, -8
 1273              		.cfi_offset 14, -4
1083:.\Generated_Source\PSoC4/PWM.c **** {
 1274              		.loc 1 1083 0
 1275 0002 041C     		mov	r4, r0
1086:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1276              		.loc 1 1086 0
 1277 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1278              	.LVL78:
1088:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1279              		.loc 1 1088 0
 1280 0008 054B     		ldr	r3, .L97
 1281 000a C021     		mov	r1, #192
 1282 000c 1A68     		ldr	r2, [r3]
1089:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1283              		.loc 1 1089 0
 1284 000e A401     		lsl	r4, r4, #6
 1285              	.LVL79:
1088:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1286              		.loc 1 1088 0
 1287 0010 8A43     		bic	r2, r1
 1288 0012 1A60     		str	r2, [r3]
1089:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1289              		.loc 1 1089 0
 1290 0014 1A68     		ldr	r2, [r3]
1092:.\Generated_Source\PSoC4/PWM.c **** }
 1291              		.loc 1 1092 0
 1292              		@ sp needed for prologue
1089:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1293              		.loc 1 1089 0
 1294 0016 1443     		orr	r4, r2
 1295 0018 1C60     		str	r4, [r3]
1091:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1296              		.loc 1 1091 0
 1297 001a FFF7FEFF 		bl	CyExitCriticalSection
 1298              	.LVL80:
1092:.\Generated_Source\PSoC4/PWM.c **** }
 1299              		.loc 1 1092 0
 1300 001e 10BD     		pop	{r4, pc}
 1301              	.L98:
 1302              		.align	2
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 49


 1303              	.L97:
 1304 0020 24010540 		.word	1074069796
 1305              		.cfi_endproc
 1306              	.LFE31:
 1307              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1308              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1309              		.align	1
 1310              		.global	PWM_SetCountMode
 1311              		.code	16
 1312              		.thumb_func
 1313              		.type	PWM_SetCountMode, %function
 1314              	PWM_SetCountMode:
 1315              	.LFB32:
1116:.\Generated_Source\PSoC4/PWM.c **** {
 1316              		.loc 1 1116 0
 1317              		.cfi_startproc
 1318              	.LVL81:
 1319 0000 10B5     		push	{r4, lr}
 1320              	.LCFI18:
 1321              		.cfi_def_cfa_offset 8
 1322              		.cfi_offset 4, -8
 1323              		.cfi_offset 14, -4
1116:.\Generated_Source\PSoC4/PWM.c **** {
 1324              		.loc 1 1116 0
 1325 0002 041C     		mov	r4, r0
1119:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1326              		.loc 1 1119 0
 1327 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1328              	.LVL82:
1121:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1329              		.loc 1 1121 0
 1330 0008 054B     		ldr	r3, .L100
 1331 000a 0C21     		mov	r1, #12
 1332 000c 1A68     		ldr	r2, [r3]
1122:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1333              		.loc 1 1122 0
 1334 000e A400     		lsl	r4, r4, #2
 1335              	.LVL83:
1121:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1336              		.loc 1 1121 0
 1337 0010 8A43     		bic	r2, r1
 1338 0012 1A60     		str	r2, [r3]
1122:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1339              		.loc 1 1122 0
 1340 0014 1A68     		ldr	r2, [r3]
1125:.\Generated_Source\PSoC4/PWM.c **** }
 1341              		.loc 1 1125 0
 1342              		@ sp needed for prologue
1122:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1343              		.loc 1 1122 0
 1344 0016 1443     		orr	r4, r2
 1345 0018 1C60     		str	r4, [r3]
1124:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1346              		.loc 1 1124 0
 1347 001a FFF7FEFF 		bl	CyExitCriticalSection
 1348              	.LVL84:
1125:.\Generated_Source\PSoC4/PWM.c **** }
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 50


 1349              		.loc 1 1125 0
 1350 001e 10BD     		pop	{r4, pc}
 1351              	.L101:
 1352              		.align	2
 1353              	.L100:
 1354 0020 24010540 		.word	1074069796
 1355              		.cfi_endproc
 1356              	.LFE32:
 1357              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1358              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1359              		.align	1
 1360              		.global	PWM_TriggerCommand
 1361              		.code	16
 1362              		.thumb_func
 1363              		.type	PWM_TriggerCommand, %function
 1364              	PWM_TriggerCommand:
 1365              	.LFB33:
1156:.\Generated_Source\PSoC4/PWM.c **** {
 1366              		.loc 1 1156 0
 1367              		.cfi_startproc
 1368              	.LVL85:
 1369 0000 38B5     		push	{r3, r4, r5, lr}
 1370              	.LCFI19:
 1371              		.cfi_def_cfa_offset 16
 1372              		.cfi_offset 3, -16
 1373              		.cfi_offset 4, -12
 1374              		.cfi_offset 5, -8
 1375              		.cfi_offset 14, -4
1156:.\Generated_Source\PSoC4/PWM.c **** {
 1376              		.loc 1 1156 0
 1377 0002 0C1C     		mov	r4, r1
 1378 0004 051C     		mov	r5, r0
1159:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1379              		.loc 1 1159 0
 1380 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1381              	.LVL86:
1161:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1382              		.loc 1 1161 0
 1383 000a 034B     		ldr	r3, .L103
 1384 000c A540     		lsl	r5, r5, r4
 1385              	.LVL87:
 1386 000e 1D60     		str	r5, [r3]
1163:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1387              		.loc 1 1163 0
 1388 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1389              	.LVL88:
1164:.\Generated_Source\PSoC4/PWM.c **** }
 1390              		.loc 1 1164 0
 1391              		@ sp needed for prologue
 1392              	.LVL89:
 1393 0014 38BD     		pop	{r3, r4, r5, pc}
 1394              	.L104:
 1395 0016 C046     		.align	2
 1396              	.L103:
 1397 0018 08000540 		.word	1074069512
 1398              		.cfi_endproc
 1399              	.LFE33:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 51


 1400              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1401              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1402              		.align	1
 1403              		.global	PWM_ReadStatus
 1404              		.code	16
 1405              		.thumb_func
 1406              		.type	PWM_ReadStatus, %function
 1407              	PWM_ReadStatus:
 1408              	.LFB34:
1185:.\Generated_Source\PSoC4/PWM.c **** {
 1409              		.loc 1 1185 0
 1410              		.cfi_startproc
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1411              		.loc 1 1186 0
 1412 0000 034B     		ldr	r3, .L106
1187:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1413              		.loc 1 1187 0
 1414 0002 0121     		mov	r1, #1
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1415              		.loc 1 1186 0
 1416 0004 1A68     		ldr	r2, [r3]
1187:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1417              		.loc 1 1187 0
 1418 0006 1868     		ldr	r0, [r3]
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1419              		.loc 1 1186 0
 1420 0008 930F     		lsr	r3, r2, #30
1187:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1421              		.loc 1 1187 0
 1422 000a 0840     		and	r0, r1
1186:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1423              		.loc 1 1186 0
 1424 000c 1843     		orr	r0, r3
1188:.\Generated_Source\PSoC4/PWM.c **** }
 1425              		.loc 1 1188 0
 1426              		@ sp needed for prologue
 1427 000e 7047     		bx	lr
 1428              	.L107:
 1429              		.align	2
 1430              	.L106:
 1431 0010 04010540 		.word	1074069764
 1432              		.cfi_endproc
 1433              	.LFE34:
 1434              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1435              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1436              		.align	1
 1437              		.global	PWM_SetInterruptMode
 1438              		.code	16
 1439              		.thumb_func
 1440              		.type	PWM_SetInterruptMode, %function
 1441              	PWM_SetInterruptMode:
 1442              	.LFB35:
1210:.\Generated_Source\PSoC4/PWM.c **** {
 1443              		.loc 1 1210 0
 1444              		.cfi_startproc
 1445              	.LVL90:
 1446              		.loc 1 1211 0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 52


 1447 0000 014B     		ldr	r3, .L109
1212:.\Generated_Source\PSoC4/PWM.c **** }
 1448              		.loc 1 1212 0
 1449              		@ sp needed for prologue
1211:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1450              		.loc 1 1211 0
 1451 0002 1860     		str	r0, [r3]
 1452              		.loc 1 1212 0
 1453 0004 7047     		bx	lr
 1454              	.L110:
 1455 0006 C046     		.align	2
 1456              	.L109:
 1457 0008 38010540 		.word	1074069816
 1458              		.cfi_endproc
 1459              	.LFE35:
 1460              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1461              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1462              		.align	1
 1463              		.global	PWM_GetInterruptSourceMasked
 1464              		.code	16
 1465              		.thumb_func
 1466              		.type	PWM_GetInterruptSourceMasked, %function
 1467              	PWM_GetInterruptSourceMasked:
 1468              	.LFB36:
1213:.\Generated_Source\PSoC4/PWM.c **** 
1214:.\Generated_Source\PSoC4/PWM.c **** 
1215:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1216:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1217:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1218:.\Generated_Source\PSoC4/PWM.c **** *
1219:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1220:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
1221:.\Generated_Source\PSoC4/PWM.c **** *
1222:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1223:.\Generated_Source\PSoC4/PWM.c **** *   None
1224:.\Generated_Source\PSoC4/PWM.c **** *
1225:.\Generated_Source\PSoC4/PWM.c **** * Return:
1226:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1227:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1228:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1229:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1230:.\Generated_Source\PSoC4/PWM.c **** *
1231:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1232:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1233:.\Generated_Source\PSoC4/PWM.c **** {
 1469              		.loc 1 1233 0
 1470              		.cfi_startproc
1234:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1471              		.loc 1 1234 0
 1472 0000 014B     		ldr	r3, .L112
1235:.\Generated_Source\PSoC4/PWM.c **** }
 1473              		.loc 1 1235 0
 1474              		@ sp needed for prologue
1234:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1475              		.loc 1 1234 0
 1476 0002 1868     		ldr	r0, [r3]
 1477              		.loc 1 1235 0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 53


 1478 0004 7047     		bx	lr
 1479              	.L113:
 1480 0006 C046     		.align	2
 1481              	.L112:
 1482 0008 3C010540 		.word	1074069820
 1483              		.cfi_endproc
 1484              	.LFE36:
 1485              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1486              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1487              		.align	1
 1488              		.global	PWM_GetInterruptSource
 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	PWM_GetInterruptSource, %function
 1492              	PWM_GetInterruptSource:
 1493              	.LFB37:
1236:.\Generated_Source\PSoC4/PWM.c **** 
1237:.\Generated_Source\PSoC4/PWM.c **** 
1238:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1239:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1240:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1241:.\Generated_Source\PSoC4/PWM.c **** *
1242:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1243:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1244:.\Generated_Source\PSoC4/PWM.c **** *
1245:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1246:.\Generated_Source\PSoC4/PWM.c **** *  None
1247:.\Generated_Source\PSoC4/PWM.c **** *
1248:.\Generated_Source\PSoC4/PWM.c **** * Return:
1249:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1250:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1251:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1252:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1253:.\Generated_Source\PSoC4/PWM.c **** *
1254:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1255:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1256:.\Generated_Source\PSoC4/PWM.c **** {
 1494              		.loc 1 1256 0
 1495              		.cfi_startproc
1257:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1496              		.loc 1 1257 0
 1497 0000 014B     		ldr	r3, .L115
1258:.\Generated_Source\PSoC4/PWM.c **** }
 1498              		.loc 1 1258 0
 1499              		@ sp needed for prologue
1257:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1500              		.loc 1 1257 0
 1501 0002 1868     		ldr	r0, [r3]
 1502              		.loc 1 1258 0
 1503 0004 7047     		bx	lr
 1504              	.L116:
 1505 0006 C046     		.align	2
 1506              	.L115:
 1507 0008 30010540 		.word	1074069808
 1508              		.cfi_endproc
 1509              	.LFE37:
 1510              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 54


 1511              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1512              		.align	1
 1513              		.global	PWM_ClearInterrupt
 1514              		.code	16
 1515              		.thumb_func
 1516              		.type	PWM_ClearInterrupt, %function
 1517              	PWM_ClearInterrupt:
 1518              	.LFB38:
1259:.\Generated_Source\PSoC4/PWM.c **** 
1260:.\Generated_Source\PSoC4/PWM.c **** 
1261:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1263:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM.c **** *
1265:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1267:.\Generated_Source\PSoC4/PWM.c **** *
1268:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1270:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1271:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1272:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1273:.\Generated_Source\PSoC4/PWM.c **** *
1274:.\Generated_Source\PSoC4/PWM.c **** * Return:
1275:.\Generated_Source\PSoC4/PWM.c **** *  None
1276:.\Generated_Source\PSoC4/PWM.c **** *
1277:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1279:.\Generated_Source\PSoC4/PWM.c **** {
 1519              		.loc 1 1279 0
 1520              		.cfi_startproc
 1521              	.LVL91:
1280:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1522              		.loc 1 1280 0
 1523 0000 014B     		ldr	r3, .L118
1281:.\Generated_Source\PSoC4/PWM.c **** }
 1524              		.loc 1 1281 0
 1525              		@ sp needed for prologue
1280:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1526              		.loc 1 1280 0
 1527 0002 1860     		str	r0, [r3]
 1528              		.loc 1 1281 0
 1529 0004 7047     		bx	lr
 1530              	.L119:
 1531 0006 C046     		.align	2
 1532              	.L118:
 1533 0008 30010540 		.word	1074069808
 1534              		.cfi_endproc
 1535              	.LFE38:
 1536              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1537              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1538              		.align	1
 1539              		.global	PWM_SetInterrupt
 1540              		.code	16
 1541              		.thumb_func
 1542              		.type	PWM_SetInterrupt, %function
 1543              	PWM_SetInterrupt:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 55


 1544              	.LFB39:
1282:.\Generated_Source\PSoC4/PWM.c **** 
1283:.\Generated_Source\PSoC4/PWM.c **** 
1284:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1285:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1286:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1287:.\Generated_Source\PSoC4/PWM.c **** *
1288:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1289:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1290:.\Generated_Source\PSoC4/PWM.c **** *
1291:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1292:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1293:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1294:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1295:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1296:.\Generated_Source\PSoC4/PWM.c **** *
1297:.\Generated_Source\PSoC4/PWM.c **** * Return:
1298:.\Generated_Source\PSoC4/PWM.c **** *  None
1299:.\Generated_Source\PSoC4/PWM.c **** *
1300:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1301:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1302:.\Generated_Source\PSoC4/PWM.c **** {
 1545              		.loc 1 1302 0
 1546              		.cfi_startproc
 1547              	.LVL92:
1303:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1548              		.loc 1 1303 0
 1549 0000 014B     		ldr	r3, .L121
1304:.\Generated_Source\PSoC4/PWM.c **** }
 1550              		.loc 1 1304 0
 1551              		@ sp needed for prologue
1303:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1552              		.loc 1 1303 0
 1553 0002 1860     		str	r0, [r3]
 1554              		.loc 1 1304 0
 1555 0004 7047     		bx	lr
 1556              	.L122:
 1557 0006 C046     		.align	2
 1558              	.L121:
 1559 0008 34010540 		.word	1074069812
 1560              		.cfi_endproc
 1561              	.LFE39:
 1562              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 1563              		.global	PWM_initVar
 1564              		.bss
 1565              		.set	.LANCHOR0,. + 0
 1566              		.type	PWM_initVar, %object
 1567              		.size	PWM_initVar, 1
 1568              	PWM_initVar:
 1569 0000 00       		.space	1
 1570              		.text
 1571              	.Letext0:
 1572              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1573              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 1574              		.section	.debug_info,"",%progbits
 1575              	.Ldebug_info0:
 1576 0000 DA090000 		.4byte	0x9da
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 56


 1577 0004 0200     		.2byte	0x2
 1578 0006 00000000 		.4byte	.Ldebug_abbrev0
 1579 000a 04       		.byte	0x4
 1580 000b 01       		.uleb128 0x1
 1581 000c 3F030000 		.4byte	.LASF76
 1582 0010 01       		.byte	0x1
 1583 0011 E9000000 		.4byte	.LASF77
 1584 0015 1C020000 		.4byte	.LASF78
 1585 0019 48000000 		.4byte	.Ldebug_ranges0+0x48
 1586 001d 00000000 		.4byte	0
 1587 0021 00000000 		.4byte	0
 1588 0025 00000000 		.4byte	.Ldebug_line0
 1589 0029 02       		.uleb128 0x2
 1590 002a 01       		.byte	0x1
 1591 002b 06       		.byte	0x6
 1592 002c A1000000 		.4byte	.LASF0
 1593 0030 02       		.uleb128 0x2
 1594 0031 01       		.byte	0x1
 1595 0032 08       		.byte	0x8
 1596 0033 88030000 		.4byte	.LASF1
 1597 0037 02       		.uleb128 0x2
 1598 0038 02       		.byte	0x2
 1599 0039 05       		.byte	0x5
 1600 003a BF030000 		.4byte	.LASF2
 1601 003e 02       		.uleb128 0x2
 1602 003f 02       		.byte	0x2
 1603 0040 07       		.byte	0x7
 1604 0041 09020000 		.4byte	.LASF3
 1605 0045 02       		.uleb128 0x2
 1606 0046 04       		.byte	0x4
 1607 0047 05       		.byte	0x5
 1608 0048 08010000 		.4byte	.LASF4
 1609 004c 02       		.uleb128 0x2
 1610 004d 04       		.byte	0x4
 1611 004e 07       		.byte	0x7
 1612 004f D7010000 		.4byte	.LASF5
 1613 0053 02       		.uleb128 0x2
 1614 0054 08       		.byte	0x8
 1615 0055 05       		.byte	0x5
 1616 0056 93000000 		.4byte	.LASF6
 1617 005a 02       		.uleb128 0x2
 1618 005b 08       		.byte	0x8
 1619 005c 07       		.byte	0x7
 1620 005d 41000000 		.4byte	.LASF7
 1621 0061 03       		.uleb128 0x3
 1622 0062 04       		.byte	0x4
 1623 0063 05       		.byte	0x5
 1624 0064 696E7400 		.ascii	"int\000"
 1625 0068 02       		.uleb128 0x2
 1626 0069 04       		.byte	0x4
 1627 006a 07       		.byte	0x7
 1628 006b AF010000 		.4byte	.LASF8
 1629 006f 04       		.uleb128 0x4
 1630 0070 11010000 		.4byte	.LASF9
 1631 0074 02       		.byte	0x2
 1632 0075 5B       		.byte	0x5b
 1633 0076 30000000 		.4byte	0x30
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 57


 1634 007a 04       		.uleb128 0x4
 1635 007b 5E010000 		.4byte	.LASF10
 1636 007f 02       		.byte	0x2
 1637 0080 5D       		.byte	0x5d
 1638 0081 4C000000 		.4byte	0x4c
 1639 0085 02       		.uleb128 0x2
 1640 0086 04       		.byte	0x4
 1641 0087 04       		.byte	0x4
 1642 0088 0D030000 		.4byte	.LASF11
 1643 008c 02       		.uleb128 0x2
 1644 008d 08       		.byte	0x8
 1645 008e 04       		.byte	0x4
 1646 008f 17010000 		.4byte	.LASF12
 1647 0093 02       		.uleb128 0x2
 1648 0094 01       		.byte	0x1
 1649 0095 08       		.byte	0x8
 1650 0096 15040000 		.4byte	.LASF13
 1651 009a 04       		.uleb128 0x4
 1652 009b AB020000 		.4byte	.LASF14
 1653 009f 02       		.byte	0x2
 1654 00a0 F2       		.byte	0xf2
 1655 00a1 A5000000 		.4byte	0xa5
 1656 00a5 05       		.uleb128 0x5
 1657 00a6 7A000000 		.4byte	0x7a
 1658 00aa 02       		.uleb128 0x2
 1659 00ab 04       		.byte	0x4
 1660 00ac 07       		.byte	0x7
 1661 00ad CC020000 		.4byte	.LASF15
 1662 00b1 06       		.uleb128 0x6
 1663 00b2 01       		.byte	0x1
 1664 00b3 C1000000 		.4byte	.LASF16
 1665 00b7 01       		.byte	0x1
 1666 00b8 B904     		.2byte	0x4b9
 1667 00ba 01       		.byte	0x1
 1668 00bb 01       		.byte	0x1
 1669 00bc CD000000 		.4byte	0xcd
 1670 00c0 07       		.uleb128 0x7
 1671 00c1 E6030000 		.4byte	.LASF18
 1672 00c5 01       		.byte	0x1
 1673 00c6 B904     		.2byte	0x4b9
 1674 00c8 7A000000 		.4byte	0x7a
 1675 00cc 00       		.byte	0
 1676 00cd 06       		.uleb128 0x6
 1677 00ce 01       		.byte	0x1
 1678 00cf 9B020000 		.4byte	.LASF17
 1679 00d3 01       		.byte	0x1
 1680 00d4 C002     		.2byte	0x2c0
 1681 00d6 01       		.byte	0x1
 1682 00d7 01       		.byte	0x1
 1683 00d8 E9000000 		.4byte	0xe9
 1684 00dc 07       		.uleb128 0x7
 1685 00dd 3A000000 		.4byte	.LASF19
 1686 00e1 01       		.byte	0x1
 1687 00e2 C002     		.2byte	0x2c0
 1688 00e4 7A000000 		.4byte	0x7a
 1689 00e8 00       		.byte	0
 1690 00e9 06       		.uleb128 0x6
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 58


 1691 00ea 01       		.byte	0x1
 1692 00eb FC040000 		.4byte	.LASF20
 1693 00ef 01       		.byte	0x1
 1694 00f0 5403     		.2byte	0x354
 1695 00f2 01       		.byte	0x1
 1696 00f3 01       		.byte	0x1
 1697 00f4 05010000 		.4byte	0x105
 1698 00f8 07       		.uleb128 0x7
 1699 00f9 E4020000 		.4byte	.LASF21
 1700 00fd 01       		.byte	0x1
 1701 00fe 5403     		.2byte	0x354
 1702 0100 7A000000 		.4byte	0x7a
 1703 0104 00       		.byte	0
 1704 0105 08       		.uleb128 0x8
 1705 0106 01       		.byte	0x1
 1706 0107 96030000 		.4byte	.LASF22
 1707 010b 01       		.byte	0x1
 1708 010c 27       		.byte	0x27
 1709 010d 01       		.byte	0x1
 1710 010e 00000000 		.4byte	.LFB0
 1711 0112 58000000 		.4byte	.LFE0
 1712 0116 02       		.byte	0x2
 1713 0117 7D       		.byte	0x7d
 1714 0118 00       		.sleb128 0
 1715 0119 01       		.byte	0x1
 1716 011a 6B010000 		.4byte	0x16b
 1717 011e 09       		.uleb128 0x9
 1718 011f B1000000 		.4byte	0xb1
 1719 0123 1E000000 		.4byte	.LBB8
 1720 0127 00000000 		.4byte	.Ldebug_ranges0+0
 1721 012b 01       		.byte	0x1
 1722 012c 77       		.byte	0x77
 1723 012d 38010000 		.4byte	0x138
 1724 0131 0A       		.uleb128 0xa
 1725 0132 C0000000 		.4byte	0xc0
 1726 0136 00       		.byte	0
 1727 0137 00       		.byte	0
 1728 0138 09       		.uleb128 0x9
 1729 0139 CD000000 		.4byte	0xcd
 1730 013d 20000000 		.4byte	.LBB11
 1731 0141 18000000 		.4byte	.Ldebug_ranges0+0x18
 1732 0145 01       		.byte	0x1
 1733 0146 8C       		.byte	0x8c
 1734 0147 53010000 		.4byte	0x153
 1735 014b 0B       		.uleb128 0xb
 1736 014c DC000000 		.4byte	0xdc
 1737 0150 1027     		.2byte	0x2710
 1738 0152 00       		.byte	0
 1739 0153 0C       		.uleb128 0xc
 1740 0154 E9000000 		.4byte	0xe9
 1741 0158 2A000000 		.4byte	.LBB16
 1742 015c 30000000 		.4byte	.Ldebug_ranges0+0x30
 1743 0160 01       		.byte	0x1
 1744 0161 8D       		.byte	0x8d
 1745 0162 0B       		.uleb128 0xb
 1746 0163 F8000000 		.4byte	0xf8
 1747 0167 8813     		.2byte	0x1388
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 59


 1748 0169 00       		.byte	0
 1749 016a 00       		.byte	0
 1750 016b 0D       		.uleb128 0xd
 1751 016c 01       		.byte	0x1
 1752 016d 06000000 		.4byte	.LASF23
 1753 0171 01       		.byte	0x1
 1754 0172 C2       		.byte	0xc2
 1755 0173 01       		.byte	0x1
 1756 0174 00000000 		.4byte	.LFB1
 1757 0178 1C000000 		.4byte	.LFE1
 1758 017c 00000000 		.4byte	.LLST0
 1759 0180 01       		.byte	0x1
 1760 0181 A7010000 		.4byte	0x1a7
 1761 0185 0E       		.uleb128 0xe
 1762 0186 76040000 		.4byte	.LASF26
 1763 018a 01       		.byte	0x1
 1764 018b C4       		.byte	0xc4
 1765 018c 6F000000 		.4byte	0x6f
 1766 0190 20000000 		.4byte	.LLST1
 1767 0194 0F       		.uleb128 0xf
 1768 0195 06000000 		.4byte	.LVL3
 1769 0199 BF090000 		.4byte	0x9bf
 1770 019d 0F       		.uleb128 0xf
 1771 019e 14000000 		.4byte	.LVL4
 1772 01a2 CD090000 		.4byte	0x9cd
 1773 01a6 00       		.byte	0
 1774 01a7 0D       		.uleb128 0xd
 1775 01a8 01       		.byte	0x1
 1776 01a9 7E020000 		.4byte	.LASF24
 1777 01ad 01       		.byte	0x1
 1778 01ae F1       		.byte	0xf1
 1779 01af 01       		.byte	0x1
 1780 01b0 00000000 		.4byte	.LFB2
 1781 01b4 1C000000 		.4byte	.LFE2
 1782 01b8 33000000 		.4byte	.LLST2
 1783 01bc 01       		.byte	0x1
 1784 01bd D4010000 		.4byte	0x1d4
 1785 01c1 0F       		.uleb128 0xf
 1786 01c2 0E000000 		.4byte	.LVL5
 1787 01c6 05010000 		.4byte	0x105
 1788 01ca 0F       		.uleb128 0xf
 1789 01cb 16000000 		.4byte	.LVL6
 1790 01cf 6B010000 		.4byte	0x16b
 1791 01d3 00       		.byte	0
 1792 01d4 10       		.uleb128 0x10
 1793 01d5 01       		.byte	0x1
 1794 01d6 44010000 		.4byte	.LASF25
 1795 01da 01       		.byte	0x1
 1796 01db 0B01     		.2byte	0x10b
 1797 01dd 01       		.byte	0x1
 1798 01de 00000000 		.4byte	.LFB3
 1799 01e2 1C000000 		.4byte	.LFE3
 1800 01e6 53000000 		.4byte	.LLST3
 1801 01ea 01       		.byte	0x1
 1802 01eb 12020000 		.4byte	0x212
 1803 01ef 11       		.uleb128 0x11
 1804 01f0 76040000 		.4byte	.LASF26
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 60


 1805 01f4 01       		.byte	0x1
 1806 01f5 0D01     		.2byte	0x10d
 1807 01f7 6F000000 		.4byte	0x6f
 1808 01fb 73000000 		.4byte	.LLST4
 1809 01ff 0F       		.uleb128 0xf
 1810 0200 06000000 		.4byte	.LVL7
 1811 0204 BF090000 		.4byte	0x9bf
 1812 0208 0F       		.uleb128 0xf
 1813 0209 14000000 		.4byte	.LVL8
 1814 020d CD090000 		.4byte	0x9cd
 1815 0211 00       		.byte	0
 1816 0212 10       		.uleb128 0x10
 1817 0213 01       		.byte	0x1
 1818 0214 A6040000 		.4byte	.LASF27
 1819 0218 01       		.byte	0x1
 1820 0219 3001     		.2byte	0x130
 1821 021b 01       		.byte	0x1
 1822 021c 00000000 		.4byte	.LFB4
 1823 0220 28000000 		.4byte	.LFE4
 1824 0224 86000000 		.4byte	.LLST5
 1825 0228 01       		.byte	0x1
 1826 0229 60020000 		.4byte	0x260
 1827 022d 12       		.uleb128 0x12
 1828 022e 1A040000 		.4byte	.LASF29
 1829 0232 01       		.byte	0x1
 1830 0233 3001     		.2byte	0x130
 1831 0235 7A000000 		.4byte	0x7a
 1832 0239 A6000000 		.4byte	.LLST6
 1833 023d 11       		.uleb128 0x11
 1834 023e 76040000 		.4byte	.LASF26
 1835 0242 01       		.byte	0x1
 1836 0243 3201     		.2byte	0x132
 1837 0245 6F000000 		.4byte	0x6f
 1838 0249 D2000000 		.4byte	.LLST7
 1839 024d 0F       		.uleb128 0xf
 1840 024e 08000000 		.4byte	.LVL10
 1841 0252 BF090000 		.4byte	0x9bf
 1842 0256 0F       		.uleb128 0xf
 1843 0257 1C000000 		.4byte	.LVL12
 1844 025b CD090000 		.4byte	0x9cd
 1845 025f 00       		.byte	0
 1846 0260 10       		.uleb128 0x10
 1847 0261 01       		.byte	0x1
 1848 0262 07040000 		.4byte	.LASF28
 1849 0266 01       		.byte	0x1
 1850 0267 5101     		.2byte	0x151
 1851 0269 01       		.byte	0x1
 1852 026a 00000000 		.4byte	.LFB5
 1853 026e 28000000 		.4byte	.LFE5
 1854 0272 E5000000 		.4byte	.LLST8
 1855 0276 01       		.byte	0x1
 1856 0277 AE020000 		.4byte	0x2ae
 1857 027b 12       		.uleb128 0x12
 1858 027c 6B000000 		.4byte	.LASF30
 1859 0280 01       		.byte	0x1
 1860 0281 5101     		.2byte	0x151
 1861 0283 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 61


 1862 0287 05010000 		.4byte	.LLST9
 1863 028b 11       		.uleb128 0x11
 1864 028c 76040000 		.4byte	.LASF26
 1865 0290 01       		.byte	0x1
 1866 0291 5301     		.2byte	0x153
 1867 0293 6F000000 		.4byte	0x6f
 1868 0297 31010000 		.4byte	.LLST10
 1869 029b 0F       		.uleb128 0xf
 1870 029c 08000000 		.4byte	.LVL14
 1871 02a0 BF090000 		.4byte	0x9bf
 1872 02a4 0F       		.uleb128 0xf
 1873 02a5 1C000000 		.4byte	.LVL16
 1874 02a9 CD090000 		.4byte	0x9cd
 1875 02ad 00       		.byte	0
 1876 02ae 10       		.uleb128 0x10
 1877 02af 01       		.byte	0x1
 1878 02b0 6D020000 		.4byte	.LASF31
 1879 02b4 01       		.byte	0x1
 1880 02b5 7601     		.2byte	0x176
 1881 02b7 01       		.byte	0x1
 1882 02b8 00000000 		.4byte	.LFB6
 1883 02bc 28000000 		.4byte	.LFE6
 1884 02c0 44010000 		.4byte	.LLST11
 1885 02c4 01       		.byte	0x1
 1886 02c5 FC020000 		.4byte	0x2fc
 1887 02c9 12       		.uleb128 0x12
 1888 02ca 13030000 		.4byte	.LASF32
 1889 02ce 01       		.byte	0x1
 1890 02cf 7601     		.2byte	0x176
 1891 02d1 7A000000 		.4byte	0x7a
 1892 02d5 64010000 		.4byte	.LLST12
 1893 02d9 11       		.uleb128 0x11
 1894 02da 76040000 		.4byte	.LASF26
 1895 02de 01       		.byte	0x1
 1896 02df 7801     		.2byte	0x178
 1897 02e1 6F000000 		.4byte	0x6f
 1898 02e5 90010000 		.4byte	.LLST13
 1899 02e9 0F       		.uleb128 0xf
 1900 02ea 08000000 		.4byte	.LVL18
 1901 02ee BF090000 		.4byte	0x9bf
 1902 02f2 0F       		.uleb128 0xf
 1903 02f3 1C000000 		.4byte	.LVL20
 1904 02f7 CD090000 		.4byte	0x9cd
 1905 02fb 00       		.byte	0
 1906 02fc 10       		.uleb128 0x10
 1907 02fd 01       		.byte	0x1
 1908 02fe EC020000 		.4byte	.LASF33
 1909 0302 01       		.byte	0x1
 1910 0303 9601     		.2byte	0x196
 1911 0305 01       		.byte	0x1
 1912 0306 00000000 		.4byte	.LFB7
 1913 030a 2C000000 		.4byte	.LFE7
 1914 030e A3010000 		.4byte	.LLST14
 1915 0312 01       		.byte	0x1
 1916 0313 4A030000 		.4byte	0x34a
 1917 0317 12       		.uleb128 0x12
 1918 0318 98040000 		.4byte	.LASF34
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 62


 1919 031c 01       		.byte	0x1
 1920 031d 9601     		.2byte	0x196
 1921 031f 7A000000 		.4byte	0x7a
 1922 0323 C3010000 		.4byte	.LLST15
 1923 0327 11       		.uleb128 0x11
 1924 0328 76040000 		.4byte	.LASF26
 1925 032c 01       		.byte	0x1
 1926 032d 9801     		.2byte	0x198
 1927 032f 6F000000 		.4byte	0x6f
 1928 0333 EF010000 		.4byte	.LLST16
 1929 0337 0F       		.uleb128 0xf
 1930 0338 08000000 		.4byte	.LVL22
 1931 033c BF090000 		.4byte	0x9bf
 1932 0340 0F       		.uleb128 0xf
 1933 0341 22000000 		.4byte	.LVL24
 1934 0345 CD090000 		.4byte	0x9cd
 1935 0349 00       		.byte	0
 1936 034a 13       		.uleb128 0x13
 1937 034b 01       		.byte	0x1
 1938 034c B0030000 		.4byte	.LASF35
 1939 0350 01       		.byte	0x1
 1940 0351 CC01     		.2byte	0x1cc
 1941 0353 01       		.byte	0x1
 1942 0354 00000000 		.4byte	.LFB8
 1943 0358 10000000 		.4byte	.LFE8
 1944 035c 02       		.byte	0x2
 1945 035d 7D       		.byte	0x7d
 1946 035e 00       		.sleb128 0
 1947 035f 01       		.byte	0x1
 1948 0360 75030000 		.4byte	0x375
 1949 0364 12       		.uleb128 0x12
 1950 0365 E9010000 		.4byte	.LASF36
 1951 0369 01       		.byte	0x1
 1952 036a CC01     		.2byte	0x1cc
 1953 036c 7A000000 		.4byte	0x7a
 1954 0370 02020000 		.4byte	.LLST17
 1955 0374 00       		.byte	0
 1956 0375 10       		.uleb128 0x10
 1957 0376 01       		.byte	0x1
 1958 0377 27000000 		.4byte	.LASF37
 1959 037b 01       		.byte	0x1
 1960 037c F001     		.2byte	0x1f0
 1961 037e 01       		.byte	0x1
 1962 037f 00000000 		.4byte	.LFB9
 1963 0383 28000000 		.4byte	.LFE9
 1964 0387 23020000 		.4byte	.LLST18
 1965 038b 01       		.byte	0x1
 1966 038c C3030000 		.4byte	0x3c3
 1967 0390 12       		.uleb128 0x12
 1968 0391 D5020000 		.4byte	.LASF38
 1969 0395 01       		.byte	0x1
 1970 0396 F001     		.2byte	0x1f0
 1971 0398 7A000000 		.4byte	0x7a
 1972 039c 43020000 		.4byte	.LLST19
 1973 03a0 11       		.uleb128 0x11
 1974 03a1 76040000 		.4byte	.LASF26
 1975 03a5 01       		.byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 63


 1976 03a6 F201     		.2byte	0x1f2
 1977 03a8 6F000000 		.4byte	0x6f
 1978 03ac 6F020000 		.4byte	.LLST20
 1979 03b0 0F       		.uleb128 0xf
 1980 03b1 08000000 		.4byte	.LVL28
 1981 03b5 BF090000 		.4byte	0x9bf
 1982 03b9 0F       		.uleb128 0xf
 1983 03ba 22000000 		.4byte	.LVL30
 1984 03be CD090000 		.4byte	0x9cd
 1985 03c2 00       		.byte	0
 1986 03c3 10       		.uleb128 0x10
 1987 03c4 01       		.byte	0x1
 1988 03c5 B2040000 		.4byte	.LASF39
 1989 03c9 01       		.byte	0x1
 1990 03ca 1202     		.2byte	0x212
 1991 03cc 01       		.byte	0x1
 1992 03cd 00000000 		.4byte	.LFB10
 1993 03d1 28000000 		.4byte	.LFE10
 1994 03d5 82020000 		.4byte	.LLST21
 1995 03d9 01       		.byte	0x1
 1996 03da 11040000 		.4byte	0x411
 1997 03de 12       		.uleb128 0x12
 1998 03df 9F030000 		.4byte	.LASF40
 1999 03e3 01       		.byte	0x1
 2000 03e4 1202     		.2byte	0x212
 2001 03e6 7A000000 		.4byte	0x7a
 2002 03ea A2020000 		.4byte	.LLST22
 2003 03ee 11       		.uleb128 0x11
 2004 03ef 76040000 		.4byte	.LASF26
 2005 03f3 01       		.byte	0x1
 2006 03f4 1402     		.2byte	0x214
 2007 03f6 6F000000 		.4byte	0x6f
 2008 03fa CE020000 		.4byte	.LLST23
 2009 03fe 0F       		.uleb128 0xf
 2010 03ff 08000000 		.4byte	.LVL32
 2011 0403 BF090000 		.4byte	0x9bf
 2012 0407 0F       		.uleb128 0xf
 2013 0408 22000000 		.4byte	.LVL34
 2014 040c CD090000 		.4byte	0x9cd
 2015 0410 00       		.byte	0
 2016 0411 10       		.uleb128 0x10
 2017 0412 01       		.byte	0x1
 2018 0413 BC010000 		.4byte	.LASF41
 2019 0417 01       		.byte	0x1
 2020 0418 3302     		.2byte	0x233
 2021 041a 01       		.byte	0x1
 2022 041b 00000000 		.4byte	.LFB11
 2023 041f 2C000000 		.4byte	.LFE11
 2024 0423 E1020000 		.4byte	.LLST24
 2025 0427 01       		.byte	0x1
 2026 0428 5F040000 		.4byte	0x45f
 2027 042c 12       		.uleb128 0x12
 2028 042d 96010000 		.4byte	.LASF42
 2029 0431 01       		.byte	0x1
 2030 0432 3302     		.2byte	0x233
 2031 0434 7A000000 		.4byte	0x7a
 2032 0438 01030000 		.4byte	.LLST25
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 64


 2033 043c 11       		.uleb128 0x11
 2034 043d 76040000 		.4byte	.LASF26
 2035 0441 01       		.byte	0x1
 2036 0442 3502     		.2byte	0x235
 2037 0444 6F000000 		.4byte	0x6f
 2038 0448 2D030000 		.4byte	.LLST26
 2039 044c 0F       		.uleb128 0xf
 2040 044d 08000000 		.4byte	.LVL36
 2041 0451 BF090000 		.4byte	0x9bf
 2042 0455 0F       		.uleb128 0xf
 2043 0456 20000000 		.4byte	.LVL38
 2044 045a CD090000 		.4byte	0x9cd
 2045 045e 00       		.byte	0
 2046 045f 10       		.uleb128 0x10
 2047 0460 01       		.byte	0x1
 2048 0461 4D010000 		.4byte	.LASF43
 2049 0465 01       		.byte	0x1
 2050 0466 5402     		.2byte	0x254
 2051 0468 01       		.byte	0x1
 2052 0469 00000000 		.4byte	.LFB12
 2053 046d 28000000 		.4byte	.LFE12
 2054 0471 40030000 		.4byte	.LLST27
 2055 0475 01       		.byte	0x1
 2056 0476 AD040000 		.4byte	0x4ad
 2057 047a 12       		.uleb128 0x12
 2058 047b 82010000 		.4byte	.LASF44
 2059 047f 01       		.byte	0x1
 2060 0480 5402     		.2byte	0x254
 2061 0482 7A000000 		.4byte	0x7a
 2062 0486 60030000 		.4byte	.LLST28
 2063 048a 11       		.uleb128 0x11
 2064 048b 76040000 		.4byte	.LASF26
 2065 048f 01       		.byte	0x1
 2066 0490 5602     		.2byte	0x256
 2067 0492 6F000000 		.4byte	0x6f
 2068 0496 8C030000 		.4byte	.LLST29
 2069 049a 0F       		.uleb128 0xf
 2070 049b 08000000 		.4byte	.LVL40
 2071 049f BF090000 		.4byte	0x9bf
 2072 04a3 0F       		.uleb128 0xf
 2073 04a4 1C000000 		.4byte	.LVL42
 2074 04a8 CD090000 		.4byte	0x9cd
 2075 04ac 00       		.byte	0
 2076 04ad 13       		.uleb128 0x13
 2077 04ae 01       		.byte	0x1
 2078 04af 72000000 		.4byte	.LASF45
 2079 04b3 01       		.byte	0x1
 2080 04b4 7202     		.2byte	0x272
 2081 04b6 01       		.byte	0x1
 2082 04b7 00000000 		.4byte	.LFB13
 2083 04bb 0C000000 		.4byte	.LFE13
 2084 04bf 02       		.byte	0x2
 2085 04c0 7D       		.byte	0x7d
 2086 04c1 00       		.sleb128 0
 2087 04c2 01       		.byte	0x1
 2088 04c3 D8040000 		.4byte	0x4d8
 2089 04c7 12       		.uleb128 0x12
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 65


 2090 04c8 00000000 		.4byte	.LASF46
 2091 04cc 01       		.byte	0x1
 2092 04cd 7202     		.2byte	0x272
 2093 04cf 7A000000 		.4byte	0x7a
 2094 04d3 9F030000 		.4byte	.LLST30
 2095 04d7 00       		.byte	0
 2096 04d8 14       		.uleb128 0x14
 2097 04d9 01       		.byte	0x1
 2098 04da 83000000 		.4byte	.LASF49
 2099 04de 01       		.byte	0x1
 2100 04df 8602     		.2byte	0x286
 2101 04e1 01       		.byte	0x1
 2102 04e2 7A000000 		.4byte	0x7a
 2103 04e6 00000000 		.4byte	.LFB14
 2104 04ea 0C000000 		.4byte	.LFE14
 2105 04ee 02       		.byte	0x2
 2106 04ef 7D       		.byte	0x7d
 2107 04f0 00       		.sleb128 0
 2108 04f1 01       		.byte	0x1
 2109 04f2 10       		.uleb128 0x10
 2110 04f3 01       		.byte	0x1
 2111 04f4 C7040000 		.4byte	.LASF47
 2112 04f8 01       		.byte	0x1
 2113 04f9 A302     		.2byte	0x2a3
 2114 04fb 01       		.byte	0x1
 2115 04fc 00000000 		.4byte	.LFB15
 2116 0500 28000000 		.4byte	.LFE15
 2117 0504 C0030000 		.4byte	.LLST31
 2118 0508 01       		.byte	0x1
 2119 0509 40050000 		.4byte	0x540
 2120 050d 12       		.uleb128 0x12
 2121 050e 42040000 		.4byte	.LASF48
 2122 0512 01       		.byte	0x1
 2123 0513 A302     		.2byte	0x2a3
 2124 0515 7A000000 		.4byte	0x7a
 2125 0519 E0030000 		.4byte	.LLST32
 2126 051d 11       		.uleb128 0x11
 2127 051e 76040000 		.4byte	.LASF26
 2128 0522 01       		.byte	0x1
 2129 0523 A502     		.2byte	0x2a5
 2130 0525 6F000000 		.4byte	0x6f
 2131 0529 0C040000 		.4byte	.LLST33
 2132 052d 0F       		.uleb128 0xf
 2133 052e 08000000 		.4byte	.LVL46
 2134 0532 BF090000 		.4byte	0x9bf
 2135 0536 0F       		.uleb128 0xf
 2136 0537 1C000000 		.4byte	.LVL48
 2137 053b CD090000 		.4byte	0x9cd
 2138 053f 00       		.byte	0
 2139 0540 15       		.uleb128 0x15
 2140 0541 CD000000 		.4byte	0xcd
 2141 0545 00000000 		.4byte	.LFB16
 2142 0549 0C000000 		.4byte	.LFE16
 2143 054d 02       		.byte	0x2
 2144 054e 7D       		.byte	0x7d
 2145 054f 00       		.sleb128 0
 2146 0550 01       		.byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 66


 2147 0551 5F050000 		.4byte	0x55f
 2148 0555 16       		.uleb128 0x16
 2149 0556 DC000000 		.4byte	0xdc
 2150 055a 1F040000 		.4byte	.LLST34
 2151 055e 00       		.byte	0
 2152 055f 14       		.uleb128 0x14
 2153 0560 01       		.byte	0x1
 2154 0561 BD020000 		.4byte	.LASF50
 2155 0565 01       		.byte	0x1
 2156 0566 D402     		.2byte	0x2d4
 2157 0568 01       		.byte	0x1
 2158 0569 7A000000 		.4byte	0x7a
 2159 056d 00000000 		.4byte	.LFB17
 2160 0571 0C000000 		.4byte	.LFE17
 2161 0575 02       		.byte	0x2
 2162 0576 7D       		.byte	0x7d
 2163 0577 00       		.sleb128 0
 2164 0578 01       		.byte	0x1
 2165 0579 10       		.uleb128 0x10
 2166 057a 01       		.byte	0x1
 2167 057b 31010000 		.4byte	.LASF51
 2168 057f 01       		.byte	0x1
 2169 0580 EE02     		.2byte	0x2ee
 2170 0582 01       		.byte	0x1
 2171 0583 00000000 		.4byte	.LFB18
 2172 0587 24000000 		.4byte	.LFE18
 2173 058b 40040000 		.4byte	.LLST35
 2174 058f 01       		.byte	0x1
 2175 0590 C7050000 		.4byte	0x5c7
 2176 0594 12       		.uleb128 0x12
 2177 0595 DA040000 		.4byte	.LASF52
 2178 0599 01       		.byte	0x1
 2179 059a EE02     		.2byte	0x2ee
 2180 059c 7A000000 		.4byte	0x7a
 2181 05a0 60040000 		.4byte	.LLST36
 2182 05a4 11       		.uleb128 0x11
 2183 05a5 76040000 		.4byte	.LASF26
 2184 05a9 01       		.byte	0x1
 2185 05aa F002     		.2byte	0x2f0
 2186 05ac 6F000000 		.4byte	0x6f
 2187 05b0 8C040000 		.4byte	.LLST37
 2188 05b4 0F       		.uleb128 0xf
 2189 05b5 08000000 		.4byte	.LVL52
 2190 05b9 BF090000 		.4byte	0x9bf
 2191 05bd 0F       		.uleb128 0xf
 2192 05be 1E000000 		.4byte	.LVL53
 2193 05c2 CD090000 		.4byte	0x9cd
 2194 05c6 00       		.byte	0
 2195 05c7 13       		.uleb128 0x13
 2196 05c8 01       		.byte	0x1
 2197 05c9 F4030000 		.4byte	.LASF53
 2198 05cd 01       		.byte	0x1
 2199 05ce 0903     		.2byte	0x309
 2200 05d0 01       		.byte	0x1
 2201 05d1 00000000 		.4byte	.LFB19
 2202 05d5 0C000000 		.4byte	.LFE19
 2203 05d9 02       		.byte	0x2
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 67


 2204 05da 7D       		.byte	0x7d
 2205 05db 00       		.sleb128 0
 2206 05dc 01       		.byte	0x1
 2207 05dd F2050000 		.4byte	0x5f2
 2208 05e1 12       		.uleb128 0x12
 2209 05e2 59040000 		.4byte	.LASF54
 2210 05e6 01       		.byte	0x1
 2211 05e7 0903     		.2byte	0x309
 2212 05e9 7A000000 		.4byte	0x7a
 2213 05ed 9F040000 		.4byte	.LLST38
 2214 05f1 00       		.byte	0
 2215 05f2 14       		.uleb128 0x14
 2216 05f3 01       		.byte	0x1
 2217 05f4 FB020000 		.4byte	.LASF55
 2218 05f8 01       		.byte	0x1
 2219 05f9 1D03     		.2byte	0x31d
 2220 05fb 01       		.byte	0x1
 2221 05fc 7A000000 		.4byte	0x7a
 2222 0600 00000000 		.4byte	.LFB20
 2223 0604 0C000000 		.4byte	.LFE20
 2224 0608 02       		.byte	0x2
 2225 0609 7D       		.byte	0x7d
 2226 060a 00       		.sleb128 0
 2227 060b 01       		.byte	0x1
 2228 060c 10       		.uleb128 0x10
 2229 060d 01       		.byte	0x1
 2230 060e 2D030000 		.4byte	.LASF56
 2231 0612 01       		.byte	0x1
 2232 0613 3703     		.2byte	0x337
 2233 0615 01       		.byte	0x1
 2234 0616 00000000 		.4byte	.LFB21
 2235 061a 28000000 		.4byte	.LFE21
 2236 061e C0040000 		.4byte	.LLST39
 2237 0622 01       		.byte	0x1
 2238 0623 5A060000 		.4byte	0x65a
 2239 0627 12       		.uleb128 0x12
 2240 0628 DA040000 		.4byte	.LASF52
 2241 062c 01       		.byte	0x1
 2242 062d 3703     		.2byte	0x337
 2243 062f 7A000000 		.4byte	0x7a
 2244 0633 E0040000 		.4byte	.LLST40
 2245 0637 11       		.uleb128 0x11
 2246 0638 76040000 		.4byte	.LASF26
 2247 063c 01       		.byte	0x1
 2248 063d 3903     		.2byte	0x339
 2249 063f 6F000000 		.4byte	0x6f
 2250 0643 0C050000 		.4byte	.LLST41
 2251 0647 0F       		.uleb128 0xf
 2252 0648 08000000 		.4byte	.LVL58
 2253 064c BF090000 		.4byte	0x9bf
 2254 0650 0F       		.uleb128 0xf
 2255 0651 22000000 		.4byte	.LVL60
 2256 0655 CD090000 		.4byte	0x9cd
 2257 0659 00       		.byte	0
 2258 065a 15       		.uleb128 0x15
 2259 065b E9000000 		.4byte	0xe9
 2260 065f 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 68


 2261 0663 0C000000 		.4byte	.LFE22
 2262 0667 02       		.byte	0x2
 2263 0668 7D       		.byte	0x7d
 2264 0669 00       		.sleb128 0
 2265 066a 01       		.byte	0x1
 2266 066b 79060000 		.4byte	0x679
 2267 066f 16       		.uleb128 0x16
 2268 0670 F8000000 		.4byte	0xf8
 2269 0674 1F050000 		.4byte	.LLST42
 2270 0678 00       		.byte	0
 2271 0679 14       		.uleb128 0x14
 2272 067a 01       		.byte	0x1
 2273 067b 0D050000 		.4byte	.LASF57
 2274 067f 01       		.byte	0x1
 2275 0680 6903     		.2byte	0x369
 2276 0682 01       		.byte	0x1
 2277 0683 7A000000 		.4byte	0x7a
 2278 0687 00000000 		.4byte	.LFB23
 2279 068b 0C000000 		.4byte	.LFE23
 2280 068f 02       		.byte	0x2
 2281 0690 7D       		.byte	0x7d
 2282 0691 00       		.sleb128 0
 2283 0692 01       		.byte	0x1
 2284 0693 13       		.uleb128 0x13
 2285 0694 01       		.byte	0x1
 2286 0695 AD000000 		.4byte	.LASF58
 2287 0699 01       		.byte	0x1
 2288 069a 7E03     		.2byte	0x37e
 2289 069c 01       		.byte	0x1
 2290 069d 00000000 		.4byte	.LFB24
 2291 06a1 0C000000 		.4byte	.LFE24
 2292 06a5 02       		.byte	0x2
 2293 06a6 7D       		.byte	0x7d
 2294 06a7 00       		.sleb128 0
 2295 06a8 01       		.byte	0x1
 2296 06a9 BE060000 		.4byte	0x6be
 2297 06ad 12       		.uleb128 0x12
 2298 06ae 4E040000 		.4byte	.LASF59
 2299 06b2 01       		.byte	0x1
 2300 06b3 7E03     		.2byte	0x37e
 2301 06b5 7A000000 		.4byte	0x7a
 2302 06b9 40050000 		.4byte	.LLST43
 2303 06bd 00       		.byte	0
 2304 06be 14       		.uleb128 0x14
 2305 06bf 01       		.byte	0x1
 2306 06c0 1E010000 		.4byte	.LASF60
 2307 06c4 01       		.byte	0x1
 2308 06c5 9303     		.2byte	0x393
 2309 06c7 01       		.byte	0x1
 2310 06c8 7A000000 		.4byte	0x7a
 2311 06cc 00000000 		.4byte	.LFB25
 2312 06d0 0C000000 		.4byte	.LFE25
 2313 06d4 02       		.byte	0x2
 2314 06d5 7D       		.byte	0x7d
 2315 06d6 00       		.sleb128 0
 2316 06d7 01       		.byte	0x1
 2317 06d8 14       		.uleb128 0x14
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 69


 2318 06d9 01       		.byte	0x1
 2319 06da 1D030000 		.4byte	.LASF61
 2320 06de 01       		.byte	0x1
 2321 06df A803     		.2byte	0x3a8
 2322 06e1 01       		.byte	0x1
 2323 06e2 7A000000 		.4byte	0x7a
 2324 06e6 00000000 		.4byte	.LFB26
 2325 06ea 0C000000 		.4byte	.LFE26
 2326 06ee 02       		.byte	0x2
 2327 06ef 7D       		.byte	0x7d
 2328 06f0 00       		.sleb128 0
 2329 06f1 01       		.byte	0x1
 2330 06f2 14       		.uleb128 0x14
 2331 06f3 01       		.byte	0x1
 2332 06f4 63040000 		.4byte	.LASF62
 2333 06f8 01       		.byte	0x1
 2334 06f9 BD03     		.2byte	0x3bd
 2335 06fb 01       		.byte	0x1
 2336 06fc 7A000000 		.4byte	0x7a
 2337 0700 00000000 		.4byte	.LFB27
 2338 0704 0C000000 		.4byte	.LFE27
 2339 0708 02       		.byte	0x2
 2340 0709 7D       		.byte	0x7d
 2341 070a 00       		.sleb128 0
 2342 070b 01       		.byte	0x1
 2343 070c 10       		.uleb128 0x10
 2344 070d 01       		.byte	0x1
 2345 070e 58000000 		.4byte	.LASF63
 2346 0712 01       		.byte	0x1
 2347 0713 D803     		.2byte	0x3d8
 2348 0715 01       		.byte	0x1
 2349 0716 00000000 		.4byte	.LFB28
 2350 071a 24000000 		.4byte	.LFE28
 2351 071e 61050000 		.4byte	.LLST44
 2352 0722 01       		.byte	0x1
 2353 0723 5A070000 		.4byte	0x75a
 2354 0727 12       		.uleb128 0x12
 2355 0728 76010000 		.4byte	.LASF64
 2356 072c 01       		.byte	0x1
 2357 072d D803     		.2byte	0x3d8
 2358 072f 7A000000 		.4byte	0x7a
 2359 0733 81050000 		.4byte	.LLST45
 2360 0737 11       		.uleb128 0x11
 2361 0738 76040000 		.4byte	.LASF26
 2362 073c 01       		.byte	0x1
 2363 073d DA03     		.2byte	0x3da
 2364 073f 6F000000 		.4byte	0x6f
 2365 0743 AD050000 		.4byte	.LLST46
 2366 0747 0F       		.uleb128 0xf
 2367 0748 08000000 		.4byte	.LVL66
 2368 074c BF090000 		.4byte	0x9bf
 2369 0750 0F       		.uleb128 0xf
 2370 0751 1C000000 		.4byte	.LVL68
 2371 0755 CD090000 		.4byte	0x9cd
 2372 0759 00       		.byte	0
 2373 075a 10       		.uleb128 0x10
 2374 075b 01       		.byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 70


 2375 075c 30040000 		.4byte	.LASF65
 2376 0760 01       		.byte	0x1
 2377 0761 F903     		.2byte	0x3f9
 2378 0763 01       		.byte	0x1
 2379 0764 00000000 		.4byte	.LFB29
 2380 0768 24000000 		.4byte	.LFE29
 2381 076c C0050000 		.4byte	.LLST47
 2382 0770 01       		.byte	0x1
 2383 0771 A8070000 		.4byte	0x7a8
 2384 0775 12       		.uleb128 0x12
 2385 0776 76010000 		.4byte	.LASF64
 2386 077a 01       		.byte	0x1
 2387 077b F903     		.2byte	0x3f9
 2388 077d 7A000000 		.4byte	0x7a
 2389 0781 E0050000 		.4byte	.LLST48
 2390 0785 11       		.uleb128 0x11
 2391 0786 76040000 		.4byte	.LASF26
 2392 078a 01       		.byte	0x1
 2393 078b FB03     		.2byte	0x3fb
 2394 078d 6F000000 		.4byte	0x6f
 2395 0791 0C060000 		.4byte	.LLST49
 2396 0795 0F       		.uleb128 0xf
 2397 0796 08000000 		.4byte	.LVL70
 2398 079a BF090000 		.4byte	0x9bf
 2399 079e 0F       		.uleb128 0xf
 2400 079f 1E000000 		.4byte	.LVL72
 2401 07a3 CD090000 		.4byte	0x9cd
 2402 07a7 00       		.byte	0
 2403 07a8 10       		.uleb128 0x10
 2404 07a9 01       		.byte	0x1
 2405 07aa 65010000 		.4byte	.LASF66
 2406 07ae 01       		.byte	0x1
 2407 07af 1A04     		.2byte	0x41a
 2408 07b1 01       		.byte	0x1
 2409 07b2 00000000 		.4byte	.LFB30
 2410 07b6 28000000 		.4byte	.LFE30
 2411 07ba 1F060000 		.4byte	.LLST50
 2412 07be 01       		.byte	0x1
 2413 07bf F6070000 		.4byte	0x7f6
 2414 07c3 12       		.uleb128 0x12
 2415 07c4 76010000 		.4byte	.LASF64
 2416 07c8 01       		.byte	0x1
 2417 07c9 1A04     		.2byte	0x41a
 2418 07cb 7A000000 		.4byte	0x7a
 2419 07cf 3F060000 		.4byte	.LLST51
 2420 07d3 11       		.uleb128 0x11
 2421 07d4 76040000 		.4byte	.LASF26
 2422 07d8 01       		.byte	0x1
 2423 07d9 1C04     		.2byte	0x41c
 2424 07db 6F000000 		.4byte	0x6f
 2425 07df 6B060000 		.4byte	.LLST52
 2426 07e3 0F       		.uleb128 0xf
 2427 07e4 08000000 		.4byte	.LVL74
 2428 07e8 BF090000 		.4byte	0x9bf
 2429 07ec 0F       		.uleb128 0xf
 2430 07ed 1E000000 		.4byte	.LVL76
 2431 07f1 CD090000 		.4byte	0x9cd
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 71


 2432 07f5 00       		.byte	0
 2433 07f6 10       		.uleb128 0x10
 2434 07f7 01       		.byte	0x1
 2435 07f8 9F010000 		.4byte	.LASF67
 2436 07fc 01       		.byte	0x1
 2437 07fd 3A04     		.2byte	0x43a
 2438 07ff 01       		.byte	0x1
 2439 0800 00000000 		.4byte	.LFB31
 2440 0804 24000000 		.4byte	.LFE31
 2441 0808 7E060000 		.4byte	.LLST53
 2442 080c 01       		.byte	0x1
 2443 080d 44080000 		.4byte	0x844
 2444 0811 12       		.uleb128 0x12
 2445 0812 76010000 		.4byte	.LASF64
 2446 0816 01       		.byte	0x1
 2447 0817 3A04     		.2byte	0x43a
 2448 0819 7A000000 		.4byte	0x7a
 2449 081d 9E060000 		.4byte	.LLST54
 2450 0821 11       		.uleb128 0x11
 2451 0822 76040000 		.4byte	.LASF26
 2452 0826 01       		.byte	0x1
 2453 0827 3C04     		.2byte	0x43c
 2454 0829 6F000000 		.4byte	0x6f
 2455 082d CA060000 		.4byte	.LLST55
 2456 0831 0F       		.uleb128 0xf
 2457 0832 08000000 		.4byte	.LVL78
 2458 0836 BF090000 		.4byte	0x9bf
 2459 083a 0F       		.uleb128 0xf
 2460 083b 1E000000 		.4byte	.LVL80
 2461 083f CD090000 		.4byte	0x9cd
 2462 0843 00       		.byte	0
 2463 0844 10       		.uleb128 0x10
 2464 0845 01       		.byte	0x1
 2465 0846 87040000 		.4byte	.LASF68
 2466 084a 01       		.byte	0x1
 2467 084b 5B04     		.2byte	0x45b
 2468 084d 01       		.byte	0x1
 2469 084e 00000000 		.4byte	.LFB32
 2470 0852 24000000 		.4byte	.LFE32
 2471 0856 DD060000 		.4byte	.LLST56
 2472 085a 01       		.byte	0x1
 2473 085b 92080000 		.4byte	0x892
 2474 085f 12       		.uleb128 0x12
 2475 0860 76010000 		.4byte	.LASF64
 2476 0864 01       		.byte	0x1
 2477 0865 5B04     		.2byte	0x45b
 2478 0867 7A000000 		.4byte	0x7a
 2479 086b FD060000 		.4byte	.LLST57
 2480 086f 11       		.uleb128 0x11
 2481 0870 76040000 		.4byte	.LASF26
 2482 0874 01       		.byte	0x1
 2483 0875 5D04     		.2byte	0x45d
 2484 0877 6F000000 		.4byte	0x6f
 2485 087b 29070000 		.4byte	.LLST58
 2486 087f 0F       		.uleb128 0xf
 2487 0880 08000000 		.4byte	.LVL82
 2488 0884 BF090000 		.4byte	0x9bf
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 72


 2489 0888 0F       		.uleb128 0xf
 2490 0889 1E000000 		.4byte	.LVL84
 2491 088d CD090000 		.4byte	0x9cd
 2492 0891 00       		.byte	0
 2493 0892 10       		.uleb128 0x10
 2494 0893 01       		.byte	0x1
 2495 0894 88020000 		.4byte	.LASF69
 2496 0898 01       		.byte	0x1
 2497 0899 8304     		.2byte	0x483
 2498 089b 01       		.byte	0x1
 2499 089c 00000000 		.4byte	.LFB33
 2500 08a0 1C000000 		.4byte	.LFE33
 2501 08a4 3C070000 		.4byte	.LLST59
 2502 08a8 01       		.byte	0x1
 2503 08a9 F0080000 		.4byte	0x8f0
 2504 08ad 12       		.uleb128 0x12
 2505 08ae 82010000 		.4byte	.LASF44
 2506 08b2 01       		.byte	0x1
 2507 08b3 8304     		.2byte	0x483
 2508 08b5 7A000000 		.4byte	0x7a
 2509 08b9 5C070000 		.4byte	.LLST60
 2510 08bd 12       		.uleb128 0x12
 2511 08be CF010000 		.4byte	.LASF70
 2512 08c2 01       		.byte	0x1
 2513 08c3 8304     		.2byte	0x483
 2514 08c5 7A000000 		.4byte	0x7a
 2515 08c9 88070000 		.4byte	.LLST61
 2516 08cd 11       		.uleb128 0x11
 2517 08ce 76040000 		.4byte	.LASF26
 2518 08d2 01       		.byte	0x1
 2519 08d3 8504     		.2byte	0x485
 2520 08d5 6F000000 		.4byte	0x6f
 2521 08d9 B4070000 		.4byte	.LLST62
 2522 08dd 0F       		.uleb128 0xf
 2523 08de 0A000000 		.4byte	.LVL86
 2524 08e2 BF090000 		.4byte	0x9bf
 2525 08e6 0F       		.uleb128 0xf
 2526 08e7 14000000 		.4byte	.LVL88
 2527 08eb CD090000 		.4byte	0x9cd
 2528 08ef 00       		.byte	0
 2529 08f0 14       		.uleb128 0x14
 2530 08f1 01       		.byte	0x1
 2531 08f2 87010000 		.4byte	.LASF71
 2532 08f6 01       		.byte	0x1
 2533 08f7 A004     		.2byte	0x4a0
 2534 08f9 01       		.byte	0x1
 2535 08fa 7A000000 		.4byte	0x7a
 2536 08fe 00000000 		.4byte	.LFB34
 2537 0902 14000000 		.4byte	.LFE34
 2538 0906 02       		.byte	0x2
 2539 0907 7D       		.byte	0x7d
 2540 0908 00       		.sleb128 0
 2541 0909 01       		.byte	0x1
 2542 090a 15       		.uleb128 0x15
 2543 090b B1000000 		.4byte	0xb1
 2544 090f 00000000 		.4byte	.LFB35
 2545 0913 0C000000 		.4byte	.LFE35
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 73


 2546 0917 02       		.byte	0x2
 2547 0918 7D       		.byte	0x7d
 2548 0919 00       		.sleb128 0
 2549 091a 01       		.byte	0x1
 2550 091b 27090000 		.4byte	0x927
 2551 091f 17       		.uleb128 0x17
 2552 0920 C0000000 		.4byte	0xc0
 2553 0924 01       		.byte	0x1
 2554 0925 50       		.byte	0x50
 2555 0926 00       		.byte	0
 2556 0927 14       		.uleb128 0x14
 2557 0928 01       		.byte	0x1
 2558 0929 C9030000 		.4byte	.LASF72
 2559 092d 01       		.byte	0x1
 2560 092e D004     		.2byte	0x4d0
 2561 0930 01       		.byte	0x1
 2562 0931 7A000000 		.4byte	0x7a
 2563 0935 00000000 		.4byte	.LFB36
 2564 0939 0C000000 		.4byte	.LFE36
 2565 093d 02       		.byte	0x2
 2566 093e 7D       		.byte	0x7d
 2567 093f 00       		.sleb128 0
 2568 0940 01       		.byte	0x1
 2569 0941 14       		.uleb128 0x14
 2570 0942 01       		.byte	0x1
 2571 0943 E5040000 		.4byte	.LASF73
 2572 0947 01       		.byte	0x1
 2573 0948 E704     		.2byte	0x4e7
 2574 094a 01       		.byte	0x1
 2575 094b 7A000000 		.4byte	0x7a
 2576 094f 00000000 		.4byte	.LFB37
 2577 0953 0C000000 		.4byte	.LFE37
 2578 0957 02       		.byte	0x2
 2579 0958 7D       		.byte	0x7d
 2580 0959 00       		.sleb128 0
 2581 095a 01       		.byte	0x1
 2582 095b 13       		.uleb128 0x13
 2583 095c 01       		.byte	0x1
 2584 095d D6000000 		.4byte	.LASF74
 2585 0961 01       		.byte	0x1
 2586 0962 FE04     		.2byte	0x4fe
 2587 0964 01       		.byte	0x1
 2588 0965 00000000 		.4byte	.LFB38
 2589 0969 0C000000 		.4byte	.LFE38
 2590 096d 02       		.byte	0x2
 2591 096e 7D       		.byte	0x7d
 2592 096f 00       		.sleb128 0
 2593 0970 01       		.byte	0x1
 2594 0971 84090000 		.4byte	0x984
 2595 0975 18       		.uleb128 0x18
 2596 0976 E6030000 		.4byte	.LASF18
 2597 097a 01       		.byte	0x1
 2598 097b FE04     		.2byte	0x4fe
 2599 097d 7A000000 		.4byte	0x7a
 2600 0981 01       		.byte	0x1
 2601 0982 50       		.byte	0x50
 2602 0983 00       		.byte	0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 74


 2603 0984 13       		.uleb128 0x13
 2604 0985 01       		.byte	0x1
 2605 0986 1F040000 		.4byte	.LASF75
 2606 098a 01       		.byte	0x1
 2607 098b 1505     		.2byte	0x515
 2608 098d 01       		.byte	0x1
 2609 098e 00000000 		.4byte	.LFB39
 2610 0992 0C000000 		.4byte	.LFE39
 2611 0996 02       		.byte	0x2
 2612 0997 7D       		.byte	0x7d
 2613 0998 00       		.sleb128 0
 2614 0999 01       		.byte	0x1
 2615 099a AD090000 		.4byte	0x9ad
 2616 099e 18       		.uleb128 0x18
 2617 099f E6030000 		.4byte	.LASF18
 2618 09a3 01       		.byte	0x1
 2619 09a4 1505     		.2byte	0x515
 2620 09a6 7A000000 		.4byte	0x7a
 2621 09aa 01       		.byte	0x1
 2622 09ab 50       		.byte	0x50
 2623 09ac 00       		.byte	0
 2624 09ad 19       		.uleb128 0x19
 2625 09ae B1020000 		.4byte	.LASF79
 2626 09b2 01       		.byte	0x1
 2627 09b3 16       		.byte	0x16
 2628 09b4 6F000000 		.4byte	0x6f
 2629 09b8 01       		.byte	0x1
 2630 09b9 05       		.byte	0x5
 2631 09ba 03       		.byte	0x3
 2632 09bb 00000000 		.4byte	PWM_initVar
 2633 09bf 1A       		.uleb128 0x1a
 2634 09c0 01       		.byte	0x1
 2635 09c1 F2010000 		.4byte	.LASF80
 2636 09c5 03       		.byte	0x3
 2637 09c6 70       		.byte	0x70
 2638 09c7 01       		.byte	0x1
 2639 09c8 6F000000 		.4byte	0x6f
 2640 09cc 01       		.byte	0x1
 2641 09cd 1B       		.uleb128 0x1b
 2642 09ce 01       		.byte	0x1
 2643 09cf 11000000 		.4byte	.LASF81
 2644 09d3 03       		.byte	0x3
 2645 09d4 71       		.byte	0x71
 2646 09d5 01       		.byte	0x1
 2647 09d6 01       		.byte	0x1
 2648 09d7 1C       		.uleb128 0x1c
 2649 09d8 6F000000 		.4byte	0x6f
 2650 09dc 00       		.byte	0
 2651 09dd 00       		.byte	0
 2652              		.section	.debug_abbrev,"",%progbits
 2653              	.Ldebug_abbrev0:
 2654 0000 01       		.uleb128 0x1
 2655 0001 11       		.uleb128 0x11
 2656 0002 01       		.byte	0x1
 2657 0003 25       		.uleb128 0x25
 2658 0004 0E       		.uleb128 0xe
 2659 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 75


 2660 0006 0B       		.uleb128 0xb
 2661 0007 03       		.uleb128 0x3
 2662 0008 0E       		.uleb128 0xe
 2663 0009 1B       		.uleb128 0x1b
 2664 000a 0E       		.uleb128 0xe
 2665 000b 55       		.uleb128 0x55
 2666 000c 06       		.uleb128 0x6
 2667 000d 11       		.uleb128 0x11
 2668 000e 01       		.uleb128 0x1
 2669 000f 52       		.uleb128 0x52
 2670 0010 01       		.uleb128 0x1
 2671 0011 10       		.uleb128 0x10
 2672 0012 06       		.uleb128 0x6
 2673 0013 00       		.byte	0
 2674 0014 00       		.byte	0
 2675 0015 02       		.uleb128 0x2
 2676 0016 24       		.uleb128 0x24
 2677 0017 00       		.byte	0
 2678 0018 0B       		.uleb128 0xb
 2679 0019 0B       		.uleb128 0xb
 2680 001a 3E       		.uleb128 0x3e
 2681 001b 0B       		.uleb128 0xb
 2682 001c 03       		.uleb128 0x3
 2683 001d 0E       		.uleb128 0xe
 2684 001e 00       		.byte	0
 2685 001f 00       		.byte	0
 2686 0020 03       		.uleb128 0x3
 2687 0021 24       		.uleb128 0x24
 2688 0022 00       		.byte	0
 2689 0023 0B       		.uleb128 0xb
 2690 0024 0B       		.uleb128 0xb
 2691 0025 3E       		.uleb128 0x3e
 2692 0026 0B       		.uleb128 0xb
 2693 0027 03       		.uleb128 0x3
 2694 0028 08       		.uleb128 0x8
 2695 0029 00       		.byte	0
 2696 002a 00       		.byte	0
 2697 002b 04       		.uleb128 0x4
 2698 002c 16       		.uleb128 0x16
 2699 002d 00       		.byte	0
 2700 002e 03       		.uleb128 0x3
 2701 002f 0E       		.uleb128 0xe
 2702 0030 3A       		.uleb128 0x3a
 2703 0031 0B       		.uleb128 0xb
 2704 0032 3B       		.uleb128 0x3b
 2705 0033 0B       		.uleb128 0xb
 2706 0034 49       		.uleb128 0x49
 2707 0035 13       		.uleb128 0x13
 2708 0036 00       		.byte	0
 2709 0037 00       		.byte	0
 2710 0038 05       		.uleb128 0x5
 2711 0039 35       		.uleb128 0x35
 2712 003a 00       		.byte	0
 2713 003b 49       		.uleb128 0x49
 2714 003c 13       		.uleb128 0x13
 2715 003d 00       		.byte	0
 2716 003e 00       		.byte	0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 76


 2717 003f 06       		.uleb128 0x6
 2718 0040 2E       		.uleb128 0x2e
 2719 0041 01       		.byte	0x1
 2720 0042 3F       		.uleb128 0x3f
 2721 0043 0C       		.uleb128 0xc
 2722 0044 03       		.uleb128 0x3
 2723 0045 0E       		.uleb128 0xe
 2724 0046 3A       		.uleb128 0x3a
 2725 0047 0B       		.uleb128 0xb
 2726 0048 3B       		.uleb128 0x3b
 2727 0049 05       		.uleb128 0x5
 2728 004a 27       		.uleb128 0x27
 2729 004b 0C       		.uleb128 0xc
 2730 004c 20       		.uleb128 0x20
 2731 004d 0B       		.uleb128 0xb
 2732 004e 01       		.uleb128 0x1
 2733 004f 13       		.uleb128 0x13
 2734 0050 00       		.byte	0
 2735 0051 00       		.byte	0
 2736 0052 07       		.uleb128 0x7
 2737 0053 05       		.uleb128 0x5
 2738 0054 00       		.byte	0
 2739 0055 03       		.uleb128 0x3
 2740 0056 0E       		.uleb128 0xe
 2741 0057 3A       		.uleb128 0x3a
 2742 0058 0B       		.uleb128 0xb
 2743 0059 3B       		.uleb128 0x3b
 2744 005a 05       		.uleb128 0x5
 2745 005b 49       		.uleb128 0x49
 2746 005c 13       		.uleb128 0x13
 2747 005d 00       		.byte	0
 2748 005e 00       		.byte	0
 2749 005f 08       		.uleb128 0x8
 2750 0060 2E       		.uleb128 0x2e
 2751 0061 01       		.byte	0x1
 2752 0062 3F       		.uleb128 0x3f
 2753 0063 0C       		.uleb128 0xc
 2754 0064 03       		.uleb128 0x3
 2755 0065 0E       		.uleb128 0xe
 2756 0066 3A       		.uleb128 0x3a
 2757 0067 0B       		.uleb128 0xb
 2758 0068 3B       		.uleb128 0x3b
 2759 0069 0B       		.uleb128 0xb
 2760 006a 27       		.uleb128 0x27
 2761 006b 0C       		.uleb128 0xc
 2762 006c 11       		.uleb128 0x11
 2763 006d 01       		.uleb128 0x1
 2764 006e 12       		.uleb128 0x12
 2765 006f 01       		.uleb128 0x1
 2766 0070 40       		.uleb128 0x40
 2767 0071 0A       		.uleb128 0xa
 2768 0072 9742     		.uleb128 0x2117
 2769 0074 0C       		.uleb128 0xc
 2770 0075 01       		.uleb128 0x1
 2771 0076 13       		.uleb128 0x13
 2772 0077 00       		.byte	0
 2773 0078 00       		.byte	0
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 77


 2774 0079 09       		.uleb128 0x9
 2775 007a 1D       		.uleb128 0x1d
 2776 007b 01       		.byte	0x1
 2777 007c 31       		.uleb128 0x31
 2778 007d 13       		.uleb128 0x13
 2779 007e 52       		.uleb128 0x52
 2780 007f 01       		.uleb128 0x1
 2781 0080 55       		.uleb128 0x55
 2782 0081 06       		.uleb128 0x6
 2783 0082 58       		.uleb128 0x58
 2784 0083 0B       		.uleb128 0xb
 2785 0084 59       		.uleb128 0x59
 2786 0085 0B       		.uleb128 0xb
 2787 0086 01       		.uleb128 0x1
 2788 0087 13       		.uleb128 0x13
 2789 0088 00       		.byte	0
 2790 0089 00       		.byte	0
 2791 008a 0A       		.uleb128 0xa
 2792 008b 05       		.uleb128 0x5
 2793 008c 00       		.byte	0
 2794 008d 31       		.uleb128 0x31
 2795 008e 13       		.uleb128 0x13
 2796 008f 1C       		.uleb128 0x1c
 2797 0090 0B       		.uleb128 0xb
 2798 0091 00       		.byte	0
 2799 0092 00       		.byte	0
 2800 0093 0B       		.uleb128 0xb
 2801 0094 05       		.uleb128 0x5
 2802 0095 00       		.byte	0
 2803 0096 31       		.uleb128 0x31
 2804 0097 13       		.uleb128 0x13
 2805 0098 1C       		.uleb128 0x1c
 2806 0099 05       		.uleb128 0x5
 2807 009a 00       		.byte	0
 2808 009b 00       		.byte	0
 2809 009c 0C       		.uleb128 0xc
 2810 009d 1D       		.uleb128 0x1d
 2811 009e 01       		.byte	0x1
 2812 009f 31       		.uleb128 0x31
 2813 00a0 13       		.uleb128 0x13
 2814 00a1 52       		.uleb128 0x52
 2815 00a2 01       		.uleb128 0x1
 2816 00a3 55       		.uleb128 0x55
 2817 00a4 06       		.uleb128 0x6
 2818 00a5 58       		.uleb128 0x58
 2819 00a6 0B       		.uleb128 0xb
 2820 00a7 59       		.uleb128 0x59
 2821 00a8 0B       		.uleb128 0xb
 2822 00a9 00       		.byte	0
 2823 00aa 00       		.byte	0
 2824 00ab 0D       		.uleb128 0xd
 2825 00ac 2E       		.uleb128 0x2e
 2826 00ad 01       		.byte	0x1
 2827 00ae 3F       		.uleb128 0x3f
 2828 00af 0C       		.uleb128 0xc
 2829 00b0 03       		.uleb128 0x3
 2830 00b1 0E       		.uleb128 0xe
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 78


 2831 00b2 3A       		.uleb128 0x3a
 2832 00b3 0B       		.uleb128 0xb
 2833 00b4 3B       		.uleb128 0x3b
 2834 00b5 0B       		.uleb128 0xb
 2835 00b6 27       		.uleb128 0x27
 2836 00b7 0C       		.uleb128 0xc
 2837 00b8 11       		.uleb128 0x11
 2838 00b9 01       		.uleb128 0x1
 2839 00ba 12       		.uleb128 0x12
 2840 00bb 01       		.uleb128 0x1
 2841 00bc 40       		.uleb128 0x40
 2842 00bd 06       		.uleb128 0x6
 2843 00be 9742     		.uleb128 0x2117
 2844 00c0 0C       		.uleb128 0xc
 2845 00c1 01       		.uleb128 0x1
 2846 00c2 13       		.uleb128 0x13
 2847 00c3 00       		.byte	0
 2848 00c4 00       		.byte	0
 2849 00c5 0E       		.uleb128 0xe
 2850 00c6 34       		.uleb128 0x34
 2851 00c7 00       		.byte	0
 2852 00c8 03       		.uleb128 0x3
 2853 00c9 0E       		.uleb128 0xe
 2854 00ca 3A       		.uleb128 0x3a
 2855 00cb 0B       		.uleb128 0xb
 2856 00cc 3B       		.uleb128 0x3b
 2857 00cd 0B       		.uleb128 0xb
 2858 00ce 49       		.uleb128 0x49
 2859 00cf 13       		.uleb128 0x13
 2860 00d0 02       		.uleb128 0x2
 2861 00d1 06       		.uleb128 0x6
 2862 00d2 00       		.byte	0
 2863 00d3 00       		.byte	0
 2864 00d4 0F       		.uleb128 0xf
 2865 00d5 898201   		.uleb128 0x4109
 2866 00d8 00       		.byte	0
 2867 00d9 11       		.uleb128 0x11
 2868 00da 01       		.uleb128 0x1
 2869 00db 31       		.uleb128 0x31
 2870 00dc 13       		.uleb128 0x13
 2871 00dd 00       		.byte	0
 2872 00de 00       		.byte	0
 2873 00df 10       		.uleb128 0x10
 2874 00e0 2E       		.uleb128 0x2e
 2875 00e1 01       		.byte	0x1
 2876 00e2 3F       		.uleb128 0x3f
 2877 00e3 0C       		.uleb128 0xc
 2878 00e4 03       		.uleb128 0x3
 2879 00e5 0E       		.uleb128 0xe
 2880 00e6 3A       		.uleb128 0x3a
 2881 00e7 0B       		.uleb128 0xb
 2882 00e8 3B       		.uleb128 0x3b
 2883 00e9 05       		.uleb128 0x5
 2884 00ea 27       		.uleb128 0x27
 2885 00eb 0C       		.uleb128 0xc
 2886 00ec 11       		.uleb128 0x11
 2887 00ed 01       		.uleb128 0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 79


 2888 00ee 12       		.uleb128 0x12
 2889 00ef 01       		.uleb128 0x1
 2890 00f0 40       		.uleb128 0x40
 2891 00f1 06       		.uleb128 0x6
 2892 00f2 9742     		.uleb128 0x2117
 2893 00f4 0C       		.uleb128 0xc
 2894 00f5 01       		.uleb128 0x1
 2895 00f6 13       		.uleb128 0x13
 2896 00f7 00       		.byte	0
 2897 00f8 00       		.byte	0
 2898 00f9 11       		.uleb128 0x11
 2899 00fa 34       		.uleb128 0x34
 2900 00fb 00       		.byte	0
 2901 00fc 03       		.uleb128 0x3
 2902 00fd 0E       		.uleb128 0xe
 2903 00fe 3A       		.uleb128 0x3a
 2904 00ff 0B       		.uleb128 0xb
 2905 0100 3B       		.uleb128 0x3b
 2906 0101 05       		.uleb128 0x5
 2907 0102 49       		.uleb128 0x49
 2908 0103 13       		.uleb128 0x13
 2909 0104 02       		.uleb128 0x2
 2910 0105 06       		.uleb128 0x6
 2911 0106 00       		.byte	0
 2912 0107 00       		.byte	0
 2913 0108 12       		.uleb128 0x12
 2914 0109 05       		.uleb128 0x5
 2915 010a 00       		.byte	0
 2916 010b 03       		.uleb128 0x3
 2917 010c 0E       		.uleb128 0xe
 2918 010d 3A       		.uleb128 0x3a
 2919 010e 0B       		.uleb128 0xb
 2920 010f 3B       		.uleb128 0x3b
 2921 0110 05       		.uleb128 0x5
 2922 0111 49       		.uleb128 0x49
 2923 0112 13       		.uleb128 0x13
 2924 0113 02       		.uleb128 0x2
 2925 0114 06       		.uleb128 0x6
 2926 0115 00       		.byte	0
 2927 0116 00       		.byte	0
 2928 0117 13       		.uleb128 0x13
 2929 0118 2E       		.uleb128 0x2e
 2930 0119 01       		.byte	0x1
 2931 011a 3F       		.uleb128 0x3f
 2932 011b 0C       		.uleb128 0xc
 2933 011c 03       		.uleb128 0x3
 2934 011d 0E       		.uleb128 0xe
 2935 011e 3A       		.uleb128 0x3a
 2936 011f 0B       		.uleb128 0xb
 2937 0120 3B       		.uleb128 0x3b
 2938 0121 05       		.uleb128 0x5
 2939 0122 27       		.uleb128 0x27
 2940 0123 0C       		.uleb128 0xc
 2941 0124 11       		.uleb128 0x11
 2942 0125 01       		.uleb128 0x1
 2943 0126 12       		.uleb128 0x12
 2944 0127 01       		.uleb128 0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 80


 2945 0128 40       		.uleb128 0x40
 2946 0129 0A       		.uleb128 0xa
 2947 012a 9742     		.uleb128 0x2117
 2948 012c 0C       		.uleb128 0xc
 2949 012d 01       		.uleb128 0x1
 2950 012e 13       		.uleb128 0x13
 2951 012f 00       		.byte	0
 2952 0130 00       		.byte	0
 2953 0131 14       		.uleb128 0x14
 2954 0132 2E       		.uleb128 0x2e
 2955 0133 00       		.byte	0
 2956 0134 3F       		.uleb128 0x3f
 2957 0135 0C       		.uleb128 0xc
 2958 0136 03       		.uleb128 0x3
 2959 0137 0E       		.uleb128 0xe
 2960 0138 3A       		.uleb128 0x3a
 2961 0139 0B       		.uleb128 0xb
 2962 013a 3B       		.uleb128 0x3b
 2963 013b 05       		.uleb128 0x5
 2964 013c 27       		.uleb128 0x27
 2965 013d 0C       		.uleb128 0xc
 2966 013e 49       		.uleb128 0x49
 2967 013f 13       		.uleb128 0x13
 2968 0140 11       		.uleb128 0x11
 2969 0141 01       		.uleb128 0x1
 2970 0142 12       		.uleb128 0x12
 2971 0143 01       		.uleb128 0x1
 2972 0144 40       		.uleb128 0x40
 2973 0145 0A       		.uleb128 0xa
 2974 0146 9742     		.uleb128 0x2117
 2975 0148 0C       		.uleb128 0xc
 2976 0149 00       		.byte	0
 2977 014a 00       		.byte	0
 2978 014b 15       		.uleb128 0x15
 2979 014c 2E       		.uleb128 0x2e
 2980 014d 01       		.byte	0x1
 2981 014e 31       		.uleb128 0x31
 2982 014f 13       		.uleb128 0x13
 2983 0150 11       		.uleb128 0x11
 2984 0151 01       		.uleb128 0x1
 2985 0152 12       		.uleb128 0x12
 2986 0153 01       		.uleb128 0x1
 2987 0154 40       		.uleb128 0x40
 2988 0155 0A       		.uleb128 0xa
 2989 0156 9742     		.uleb128 0x2117
 2990 0158 0C       		.uleb128 0xc
 2991 0159 01       		.uleb128 0x1
 2992 015a 13       		.uleb128 0x13
 2993 015b 00       		.byte	0
 2994 015c 00       		.byte	0
 2995 015d 16       		.uleb128 0x16
 2996 015e 05       		.uleb128 0x5
 2997 015f 00       		.byte	0
 2998 0160 31       		.uleb128 0x31
 2999 0161 13       		.uleb128 0x13
 3000 0162 02       		.uleb128 0x2
 3001 0163 06       		.uleb128 0x6
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 81


 3002 0164 00       		.byte	0
 3003 0165 00       		.byte	0
 3004 0166 17       		.uleb128 0x17
 3005 0167 05       		.uleb128 0x5
 3006 0168 00       		.byte	0
 3007 0169 31       		.uleb128 0x31
 3008 016a 13       		.uleb128 0x13
 3009 016b 02       		.uleb128 0x2
 3010 016c 0A       		.uleb128 0xa
 3011 016d 00       		.byte	0
 3012 016e 00       		.byte	0
 3013 016f 18       		.uleb128 0x18
 3014 0170 05       		.uleb128 0x5
 3015 0171 00       		.byte	0
 3016 0172 03       		.uleb128 0x3
 3017 0173 0E       		.uleb128 0xe
 3018 0174 3A       		.uleb128 0x3a
 3019 0175 0B       		.uleb128 0xb
 3020 0176 3B       		.uleb128 0x3b
 3021 0177 05       		.uleb128 0x5
 3022 0178 49       		.uleb128 0x49
 3023 0179 13       		.uleb128 0x13
 3024 017a 02       		.uleb128 0x2
 3025 017b 0A       		.uleb128 0xa
 3026 017c 00       		.byte	0
 3027 017d 00       		.byte	0
 3028 017e 19       		.uleb128 0x19
 3029 017f 34       		.uleb128 0x34
 3030 0180 00       		.byte	0
 3031 0181 03       		.uleb128 0x3
 3032 0182 0E       		.uleb128 0xe
 3033 0183 3A       		.uleb128 0x3a
 3034 0184 0B       		.uleb128 0xb
 3035 0185 3B       		.uleb128 0x3b
 3036 0186 0B       		.uleb128 0xb
 3037 0187 49       		.uleb128 0x49
 3038 0188 13       		.uleb128 0x13
 3039 0189 3F       		.uleb128 0x3f
 3040 018a 0C       		.uleb128 0xc
 3041 018b 02       		.uleb128 0x2
 3042 018c 0A       		.uleb128 0xa
 3043 018d 00       		.byte	0
 3044 018e 00       		.byte	0
 3045 018f 1A       		.uleb128 0x1a
 3046 0190 2E       		.uleb128 0x2e
 3047 0191 00       		.byte	0
 3048 0192 3F       		.uleb128 0x3f
 3049 0193 0C       		.uleb128 0xc
 3050 0194 03       		.uleb128 0x3
 3051 0195 0E       		.uleb128 0xe
 3052 0196 3A       		.uleb128 0x3a
 3053 0197 0B       		.uleb128 0xb
 3054 0198 3B       		.uleb128 0x3b
 3055 0199 0B       		.uleb128 0xb
 3056 019a 27       		.uleb128 0x27
 3057 019b 0C       		.uleb128 0xc
 3058 019c 49       		.uleb128 0x49
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 82


 3059 019d 13       		.uleb128 0x13
 3060 019e 3C       		.uleb128 0x3c
 3061 019f 0C       		.uleb128 0xc
 3062 01a0 00       		.byte	0
 3063 01a1 00       		.byte	0
 3064 01a2 1B       		.uleb128 0x1b
 3065 01a3 2E       		.uleb128 0x2e
 3066 01a4 01       		.byte	0x1
 3067 01a5 3F       		.uleb128 0x3f
 3068 01a6 0C       		.uleb128 0xc
 3069 01a7 03       		.uleb128 0x3
 3070 01a8 0E       		.uleb128 0xe
 3071 01a9 3A       		.uleb128 0x3a
 3072 01aa 0B       		.uleb128 0xb
 3073 01ab 3B       		.uleb128 0x3b
 3074 01ac 0B       		.uleb128 0xb
 3075 01ad 27       		.uleb128 0x27
 3076 01ae 0C       		.uleb128 0xc
 3077 01af 3C       		.uleb128 0x3c
 3078 01b0 0C       		.uleb128 0xc
 3079 01b1 00       		.byte	0
 3080 01b2 00       		.byte	0
 3081 01b3 1C       		.uleb128 0x1c
 3082 01b4 05       		.uleb128 0x5
 3083 01b5 00       		.byte	0
 3084 01b6 49       		.uleb128 0x49
 3085 01b7 13       		.uleb128 0x13
 3086 01b8 00       		.byte	0
 3087 01b9 00       		.byte	0
 3088 01ba 00       		.byte	0
 3089              		.section	.debug_loc,"",%progbits
 3090              	.Ldebug_loc0:
 3091              	.LLST0:
 3092 0000 00000000 		.4byte	.LFB1
 3093 0004 02000000 		.4byte	.LCFI0
 3094 0008 0200     		.2byte	0x2
 3095 000a 7D       		.byte	0x7d
 3096 000b 00       		.sleb128 0
 3097 000c 02000000 		.4byte	.LCFI0
 3098 0010 1C000000 		.4byte	.LFE1
 3099 0014 0200     		.2byte	0x2
 3100 0016 7D       		.byte	0x7d
 3101 0017 08       		.sleb128 8
 3102 0018 00000000 		.4byte	0
 3103 001c 00000000 		.4byte	0
 3104              	.LLST1:
 3105 0020 06000000 		.4byte	.LVL3
 3106 0024 13000000 		.4byte	.LVL4-1
 3107 0028 0100     		.2byte	0x1
 3108 002a 50       		.byte	0x50
 3109 002b 00000000 		.4byte	0
 3110 002f 00000000 		.4byte	0
 3111              	.LLST2:
 3112 0033 00000000 		.4byte	.LFB2
 3113 0037 02000000 		.4byte	.LCFI1
 3114 003b 0200     		.2byte	0x2
 3115 003d 7D       		.byte	0x7d
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 83


 3116 003e 00       		.sleb128 0
 3117 003f 02000000 		.4byte	.LCFI1
 3118 0043 1C000000 		.4byte	.LFE2
 3119 0047 0200     		.2byte	0x2
 3120 0049 7D       		.byte	0x7d
 3121 004a 08       		.sleb128 8
 3122 004b 00000000 		.4byte	0
 3123 004f 00000000 		.4byte	0
 3124              	.LLST3:
 3125 0053 00000000 		.4byte	.LFB3
 3126 0057 02000000 		.4byte	.LCFI2
 3127 005b 0200     		.2byte	0x2
 3128 005d 7D       		.byte	0x7d
 3129 005e 00       		.sleb128 0
 3130 005f 02000000 		.4byte	.LCFI2
 3131 0063 1C000000 		.4byte	.LFE3
 3132 0067 0200     		.2byte	0x2
 3133 0069 7D       		.byte	0x7d
 3134 006a 08       		.sleb128 8
 3135 006b 00000000 		.4byte	0
 3136 006f 00000000 		.4byte	0
 3137              	.LLST4:
 3138 0073 06000000 		.4byte	.LVL7
 3139 0077 13000000 		.4byte	.LVL8-1
 3140 007b 0100     		.2byte	0x1
 3141 007d 50       		.byte	0x50
 3142 007e 00000000 		.4byte	0
 3143 0082 00000000 		.4byte	0
 3144              	.LLST5:
 3145 0086 00000000 		.4byte	.LFB4
 3146 008a 02000000 		.4byte	.LCFI3
 3147 008e 0200     		.2byte	0x2
 3148 0090 7D       		.byte	0x7d
 3149 0091 00       		.sleb128 0
 3150 0092 02000000 		.4byte	.LCFI3
 3151 0096 28000000 		.4byte	.LFE4
 3152 009a 0200     		.2byte	0x2
 3153 009c 7D       		.byte	0x7d
 3154 009d 08       		.sleb128 8
 3155 009e 00000000 		.4byte	0
 3156 00a2 00000000 		.4byte	0
 3157              	.LLST6:
 3158 00a6 00000000 		.4byte	.LVL9
 3159 00aa 07000000 		.4byte	.LVL10-1
 3160 00ae 0100     		.2byte	0x1
 3161 00b0 50       		.byte	0x50
 3162 00b1 07000000 		.4byte	.LVL10-1
 3163 00b5 16000000 		.4byte	.LVL11
 3164 00b9 0100     		.2byte	0x1
 3165 00bb 54       		.byte	0x54
 3166 00bc 16000000 		.4byte	.LVL11
 3167 00c0 28000000 		.4byte	.LFE4
 3168 00c4 0400     		.2byte	0x4
 3169 00c6 F3       		.byte	0xf3
 3170 00c7 01       		.uleb128 0x1
 3171 00c8 50       		.byte	0x50
 3172 00c9 9F       		.byte	0x9f
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 84


 3173 00ca 00000000 		.4byte	0
 3174 00ce 00000000 		.4byte	0
 3175              	.LLST7:
 3176 00d2 08000000 		.4byte	.LVL10
 3177 00d6 1B000000 		.4byte	.LVL12-1
 3178 00da 0100     		.2byte	0x1
 3179 00dc 50       		.byte	0x50
 3180 00dd 00000000 		.4byte	0
 3181 00e1 00000000 		.4byte	0
 3182              	.LLST8:
 3183 00e5 00000000 		.4byte	.LFB5
 3184 00e9 02000000 		.4byte	.LCFI4
 3185 00ed 0200     		.2byte	0x2
 3186 00ef 7D       		.byte	0x7d
 3187 00f0 00       		.sleb128 0
 3188 00f1 02000000 		.4byte	.LCFI4
 3189 00f5 28000000 		.4byte	.LFE5
 3190 00f9 0200     		.2byte	0x2
 3191 00fb 7D       		.byte	0x7d
 3192 00fc 08       		.sleb128 8
 3193 00fd 00000000 		.4byte	0
 3194 0101 00000000 		.4byte	0
 3195              	.LLST9:
 3196 0105 00000000 		.4byte	.LVL13
 3197 0109 07000000 		.4byte	.LVL14-1
 3198 010d 0100     		.2byte	0x1
 3199 010f 50       		.byte	0x50
 3200 0110 07000000 		.4byte	.LVL14-1
 3201 0114 16000000 		.4byte	.LVL15
 3202 0118 0100     		.2byte	0x1
 3203 011a 54       		.byte	0x54
 3204 011b 16000000 		.4byte	.LVL15
 3205 011f 28000000 		.4byte	.LFE5
 3206 0123 0400     		.2byte	0x4
 3207 0125 F3       		.byte	0xf3
 3208 0126 01       		.uleb128 0x1
 3209 0127 50       		.byte	0x50
 3210 0128 9F       		.byte	0x9f
 3211 0129 00000000 		.4byte	0
 3212 012d 00000000 		.4byte	0
 3213              	.LLST10:
 3214 0131 08000000 		.4byte	.LVL14
 3215 0135 1B000000 		.4byte	.LVL16-1
 3216 0139 0100     		.2byte	0x1
 3217 013b 50       		.byte	0x50
 3218 013c 00000000 		.4byte	0
 3219 0140 00000000 		.4byte	0
 3220              	.LLST11:
 3221 0144 00000000 		.4byte	.LFB6
 3222 0148 02000000 		.4byte	.LCFI5
 3223 014c 0200     		.2byte	0x2
 3224 014e 7D       		.byte	0x7d
 3225 014f 00       		.sleb128 0
 3226 0150 02000000 		.4byte	.LCFI5
 3227 0154 28000000 		.4byte	.LFE6
 3228 0158 0200     		.2byte	0x2
 3229 015a 7D       		.byte	0x7d
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 85


 3230 015b 08       		.sleb128 8
 3231 015c 00000000 		.4byte	0
 3232 0160 00000000 		.4byte	0
 3233              	.LLST12:
 3234 0164 00000000 		.4byte	.LVL17
 3235 0168 07000000 		.4byte	.LVL18-1
 3236 016c 0100     		.2byte	0x1
 3237 016e 50       		.byte	0x50
 3238 016f 07000000 		.4byte	.LVL18-1
 3239 0173 16000000 		.4byte	.LVL19
 3240 0177 0100     		.2byte	0x1
 3241 0179 54       		.byte	0x54
 3242 017a 16000000 		.4byte	.LVL19
 3243 017e 28000000 		.4byte	.LFE6
 3244 0182 0400     		.2byte	0x4
 3245 0184 F3       		.byte	0xf3
 3246 0185 01       		.uleb128 0x1
 3247 0186 50       		.byte	0x50
 3248 0187 9F       		.byte	0x9f
 3249 0188 00000000 		.4byte	0
 3250 018c 00000000 		.4byte	0
 3251              	.LLST13:
 3252 0190 08000000 		.4byte	.LVL18
 3253 0194 1B000000 		.4byte	.LVL20-1
 3254 0198 0100     		.2byte	0x1
 3255 019a 50       		.byte	0x50
 3256 019b 00000000 		.4byte	0
 3257 019f 00000000 		.4byte	0
 3258              	.LLST14:
 3259 01a3 00000000 		.4byte	.LFB7
 3260 01a7 02000000 		.4byte	.LCFI6
 3261 01ab 0200     		.2byte	0x2
 3262 01ad 7D       		.byte	0x7d
 3263 01ae 00       		.sleb128 0
 3264 01af 02000000 		.4byte	.LCFI6
 3265 01b3 2C000000 		.4byte	.LFE7
 3266 01b7 0200     		.2byte	0x2
 3267 01b9 7D       		.byte	0x7d
 3268 01ba 08       		.sleb128 8
 3269 01bb 00000000 		.4byte	0
 3270 01bf 00000000 		.4byte	0
 3271              	.LLST15:
 3272 01c3 00000000 		.4byte	.LVL21
 3273 01c7 07000000 		.4byte	.LVL22-1
 3274 01cb 0100     		.2byte	0x1
 3275 01cd 50       		.byte	0x50
 3276 01ce 07000000 		.4byte	.LVL22-1
 3277 01d2 18000000 		.4byte	.LVL23
 3278 01d6 0100     		.2byte	0x1
 3279 01d8 54       		.byte	0x54
 3280 01d9 18000000 		.4byte	.LVL23
 3281 01dd 2C000000 		.4byte	.LFE7
 3282 01e1 0400     		.2byte	0x4
 3283 01e3 F3       		.byte	0xf3
 3284 01e4 01       		.uleb128 0x1
 3285 01e5 50       		.byte	0x50
 3286 01e6 9F       		.byte	0x9f
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 86


 3287 01e7 00000000 		.4byte	0
 3288 01eb 00000000 		.4byte	0
 3289              	.LLST16:
 3290 01ef 08000000 		.4byte	.LVL22
 3291 01f3 21000000 		.4byte	.LVL24-1
 3292 01f7 0100     		.2byte	0x1
 3293 01f9 50       		.byte	0x50
 3294 01fa 00000000 		.4byte	0
 3295 01fe 00000000 		.4byte	0
 3296              	.LLST17:
 3297 0202 00000000 		.4byte	.LVL25
 3298 0206 06000000 		.4byte	.LVL26
 3299 020a 0100     		.2byte	0x1
 3300 020c 50       		.byte	0x50
 3301 020d 06000000 		.4byte	.LVL26
 3302 0211 10000000 		.4byte	.LFE8
 3303 0215 0400     		.2byte	0x4
 3304 0217 F3       		.byte	0xf3
 3305 0218 01       		.uleb128 0x1
 3306 0219 50       		.byte	0x50
 3307 021a 9F       		.byte	0x9f
 3308 021b 00000000 		.4byte	0
 3309 021f 00000000 		.4byte	0
 3310              	.LLST18:
 3311 0223 00000000 		.4byte	.LFB9
 3312 0227 02000000 		.4byte	.LCFI7
 3313 022b 0200     		.2byte	0x2
 3314 022d 7D       		.byte	0x7d
 3315 022e 00       		.sleb128 0
 3316 022f 02000000 		.4byte	.LCFI7
 3317 0233 28000000 		.4byte	.LFE9
 3318 0237 0200     		.2byte	0x2
 3319 0239 7D       		.byte	0x7d
 3320 023a 08       		.sleb128 8
 3321 023b 00000000 		.4byte	0
 3322 023f 00000000 		.4byte	0
 3323              	.LLST19:
 3324 0243 00000000 		.4byte	.LVL27
 3325 0247 07000000 		.4byte	.LVL28-1
 3326 024b 0100     		.2byte	0x1
 3327 024d 50       		.byte	0x50
 3328 024e 07000000 		.4byte	.LVL28-1
 3329 0252 18000000 		.4byte	.LVL29
 3330 0256 0100     		.2byte	0x1
 3331 0258 54       		.byte	0x54
 3332 0259 18000000 		.4byte	.LVL29
 3333 025d 28000000 		.4byte	.LFE9
 3334 0261 0400     		.2byte	0x4
 3335 0263 F3       		.byte	0xf3
 3336 0264 01       		.uleb128 0x1
 3337 0265 50       		.byte	0x50
 3338 0266 9F       		.byte	0x9f
 3339 0267 00000000 		.4byte	0
 3340 026b 00000000 		.4byte	0
 3341              	.LLST20:
 3342 026f 08000000 		.4byte	.LVL28
 3343 0273 21000000 		.4byte	.LVL30-1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 87


 3344 0277 0100     		.2byte	0x1
 3345 0279 50       		.byte	0x50
 3346 027a 00000000 		.4byte	0
 3347 027e 00000000 		.4byte	0
 3348              	.LLST21:
 3349 0282 00000000 		.4byte	.LFB10
 3350 0286 02000000 		.4byte	.LCFI8
 3351 028a 0200     		.2byte	0x2
 3352 028c 7D       		.byte	0x7d
 3353 028d 00       		.sleb128 0
 3354 028e 02000000 		.4byte	.LCFI8
 3355 0292 28000000 		.4byte	.LFE10
 3356 0296 0200     		.2byte	0x2
 3357 0298 7D       		.byte	0x7d
 3358 0299 08       		.sleb128 8
 3359 029a 00000000 		.4byte	0
 3360 029e 00000000 		.4byte	0
 3361              	.LLST22:
 3362 02a2 00000000 		.4byte	.LVL31
 3363 02a6 07000000 		.4byte	.LVL32-1
 3364 02aa 0100     		.2byte	0x1
 3365 02ac 50       		.byte	0x50
 3366 02ad 07000000 		.4byte	.LVL32-1
 3367 02b1 18000000 		.4byte	.LVL33
 3368 02b5 0100     		.2byte	0x1
 3369 02b7 54       		.byte	0x54
 3370 02b8 18000000 		.4byte	.LVL33
 3371 02bc 28000000 		.4byte	.LFE10
 3372 02c0 0400     		.2byte	0x4
 3373 02c2 F3       		.byte	0xf3
 3374 02c3 01       		.uleb128 0x1
 3375 02c4 50       		.byte	0x50
 3376 02c5 9F       		.byte	0x9f
 3377 02c6 00000000 		.4byte	0
 3378 02ca 00000000 		.4byte	0
 3379              	.LLST23:
 3380 02ce 08000000 		.4byte	.LVL32
 3381 02d2 21000000 		.4byte	.LVL34-1
 3382 02d6 0100     		.2byte	0x1
 3383 02d8 50       		.byte	0x50
 3384 02d9 00000000 		.4byte	0
 3385 02dd 00000000 		.4byte	0
 3386              	.LLST24:
 3387 02e1 00000000 		.4byte	.LFB11
 3388 02e5 02000000 		.4byte	.LCFI9
 3389 02e9 0200     		.2byte	0x2
 3390 02eb 7D       		.byte	0x7d
 3391 02ec 00       		.sleb128 0
 3392 02ed 02000000 		.4byte	.LCFI9
 3393 02f1 2C000000 		.4byte	.LFE11
 3394 02f5 0200     		.2byte	0x2
 3395 02f7 7D       		.byte	0x7d
 3396 02f8 08       		.sleb128 8
 3397 02f9 00000000 		.4byte	0
 3398 02fd 00000000 		.4byte	0
 3399              	.LLST25:
 3400 0301 00000000 		.4byte	.LVL35
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 88


 3401 0305 07000000 		.4byte	.LVL36-1
 3402 0309 0100     		.2byte	0x1
 3403 030b 50       		.byte	0x50
 3404 030c 07000000 		.4byte	.LVL36-1
 3405 0310 10000000 		.4byte	.LVL37
 3406 0314 0100     		.2byte	0x1
 3407 0316 54       		.byte	0x54
 3408 0317 10000000 		.4byte	.LVL37
 3409 031b 2C000000 		.4byte	.LFE11
 3410 031f 0400     		.2byte	0x4
 3411 0321 F3       		.byte	0xf3
 3412 0322 01       		.uleb128 0x1
 3413 0323 50       		.byte	0x50
 3414 0324 9F       		.byte	0x9f
 3415 0325 00000000 		.4byte	0
 3416 0329 00000000 		.4byte	0
 3417              	.LLST26:
 3418 032d 08000000 		.4byte	.LVL36
 3419 0331 1F000000 		.4byte	.LVL38-1
 3420 0335 0100     		.2byte	0x1
 3421 0337 50       		.byte	0x50
 3422 0338 00000000 		.4byte	0
 3423 033c 00000000 		.4byte	0
 3424              	.LLST27:
 3425 0340 00000000 		.4byte	.LFB12
 3426 0344 02000000 		.4byte	.LCFI10
 3427 0348 0200     		.2byte	0x2
 3428 034a 7D       		.byte	0x7d
 3429 034b 00       		.sleb128 0
 3430 034c 02000000 		.4byte	.LCFI10
 3431 0350 28000000 		.4byte	.LFE12
 3432 0354 0200     		.2byte	0x2
 3433 0356 7D       		.byte	0x7d
 3434 0357 08       		.sleb128 8
 3435 0358 00000000 		.4byte	0
 3436 035c 00000000 		.4byte	0
 3437              	.LLST28:
 3438 0360 00000000 		.4byte	.LVL39
 3439 0364 07000000 		.4byte	.LVL40-1
 3440 0368 0100     		.2byte	0x1
 3441 036a 50       		.byte	0x50
 3442 036b 07000000 		.4byte	.LVL40-1
 3443 036f 16000000 		.4byte	.LVL41
 3444 0373 0100     		.2byte	0x1
 3445 0375 54       		.byte	0x54
 3446 0376 16000000 		.4byte	.LVL41
 3447 037a 28000000 		.4byte	.LFE12
 3448 037e 0400     		.2byte	0x4
 3449 0380 F3       		.byte	0xf3
 3450 0381 01       		.uleb128 0x1
 3451 0382 50       		.byte	0x50
 3452 0383 9F       		.byte	0x9f
 3453 0384 00000000 		.4byte	0
 3454 0388 00000000 		.4byte	0
 3455              	.LLST29:
 3456 038c 08000000 		.4byte	.LVL40
 3457 0390 1B000000 		.4byte	.LVL42-1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 89


 3458 0394 0100     		.2byte	0x1
 3459 0396 50       		.byte	0x50
 3460 0397 00000000 		.4byte	0
 3461 039b 00000000 		.4byte	0
 3462              	.LLST30:
 3463 039f 00000000 		.4byte	.LVL43
 3464 03a3 04000000 		.4byte	.LVL44
 3465 03a7 0100     		.2byte	0x1
 3466 03a9 50       		.byte	0x50
 3467 03aa 04000000 		.4byte	.LVL44
 3468 03ae 0C000000 		.4byte	.LFE13
 3469 03b2 0400     		.2byte	0x4
 3470 03b4 F3       		.byte	0xf3
 3471 03b5 01       		.uleb128 0x1
 3472 03b6 50       		.byte	0x50
 3473 03b7 9F       		.byte	0x9f
 3474 03b8 00000000 		.4byte	0
 3475 03bc 00000000 		.4byte	0
 3476              	.LLST31:
 3477 03c0 00000000 		.4byte	.LFB15
 3478 03c4 02000000 		.4byte	.LCFI11
 3479 03c8 0200     		.2byte	0x2
 3480 03ca 7D       		.byte	0x7d
 3481 03cb 00       		.sleb128 0
 3482 03cc 02000000 		.4byte	.LCFI11
 3483 03d0 28000000 		.4byte	.LFE15
 3484 03d4 0200     		.2byte	0x2
 3485 03d6 7D       		.byte	0x7d
 3486 03d7 08       		.sleb128 8
 3487 03d8 00000000 		.4byte	0
 3488 03dc 00000000 		.4byte	0
 3489              	.LLST32:
 3490 03e0 00000000 		.4byte	.LVL45
 3491 03e4 07000000 		.4byte	.LVL46-1
 3492 03e8 0100     		.2byte	0x1
 3493 03ea 50       		.byte	0x50
 3494 03eb 07000000 		.4byte	.LVL46-1
 3495 03ef 16000000 		.4byte	.LVL47
 3496 03f3 0100     		.2byte	0x1
 3497 03f5 54       		.byte	0x54
 3498 03f6 16000000 		.4byte	.LVL47
 3499 03fa 28000000 		.4byte	.LFE15
 3500 03fe 0400     		.2byte	0x4
 3501 0400 F3       		.byte	0xf3
 3502 0401 01       		.uleb128 0x1
 3503 0402 50       		.byte	0x50
 3504 0403 9F       		.byte	0x9f
 3505 0404 00000000 		.4byte	0
 3506 0408 00000000 		.4byte	0
 3507              	.LLST33:
 3508 040c 08000000 		.4byte	.LVL46
 3509 0410 1B000000 		.4byte	.LVL48-1
 3510 0414 0100     		.2byte	0x1
 3511 0416 50       		.byte	0x50
 3512 0417 00000000 		.4byte	0
 3513 041b 00000000 		.4byte	0
 3514              	.LLST34:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 90


 3515 041f 00000000 		.4byte	.LVL49
 3516 0423 04000000 		.4byte	.LVL50
 3517 0427 0100     		.2byte	0x1
 3518 0429 50       		.byte	0x50
 3519 042a 04000000 		.4byte	.LVL50
 3520 042e 0C000000 		.4byte	.LFE16
 3521 0432 0400     		.2byte	0x4
 3522 0434 F3       		.byte	0xf3
 3523 0435 01       		.uleb128 0x1
 3524 0436 50       		.byte	0x50
 3525 0437 9F       		.byte	0x9f
 3526 0438 00000000 		.4byte	0
 3527 043c 00000000 		.4byte	0
 3528              	.LLST35:
 3529 0440 00000000 		.4byte	.LFB18
 3530 0444 02000000 		.4byte	.LCFI12
 3531 0448 0200     		.2byte	0x2
 3532 044a 7D       		.byte	0x7d
 3533 044b 00       		.sleb128 0
 3534 044c 02000000 		.4byte	.LCFI12
 3535 0450 24000000 		.4byte	.LFE18
 3536 0454 0200     		.2byte	0x2
 3537 0456 7D       		.byte	0x7d
 3538 0457 08       		.sleb128 8
 3539 0458 00000000 		.4byte	0
 3540 045c 00000000 		.4byte	0
 3541              	.LLST36:
 3542 0460 00000000 		.4byte	.LVL51
 3543 0464 07000000 		.4byte	.LVL52-1
 3544 0468 0100     		.2byte	0x1
 3545 046a 50       		.byte	0x50
 3546 046b 07000000 		.4byte	.LVL52-1
 3547 046f 1E000000 		.4byte	.LVL54
 3548 0473 0100     		.2byte	0x1
 3549 0475 54       		.byte	0x54
 3550 0476 1E000000 		.4byte	.LVL54
 3551 047a 24000000 		.4byte	.LFE18
 3552 047e 0400     		.2byte	0x4
 3553 0480 F3       		.byte	0xf3
 3554 0481 01       		.uleb128 0x1
 3555 0482 50       		.byte	0x50
 3556 0483 9F       		.byte	0x9f
 3557 0484 00000000 		.4byte	0
 3558 0488 00000000 		.4byte	0
 3559              	.LLST37:
 3560 048c 08000000 		.4byte	.LVL52
 3561 0490 1D000000 		.4byte	.LVL53-1
 3562 0494 0100     		.2byte	0x1
 3563 0496 50       		.byte	0x50
 3564 0497 00000000 		.4byte	0
 3565 049b 00000000 		.4byte	0
 3566              	.LLST38:
 3567 049f 00000000 		.4byte	.LVL55
 3568 04a3 04000000 		.4byte	.LVL56
 3569 04a7 0100     		.2byte	0x1
 3570 04a9 50       		.byte	0x50
 3571 04aa 04000000 		.4byte	.LVL56
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 91


 3572 04ae 0C000000 		.4byte	.LFE19
 3573 04b2 0400     		.2byte	0x4
 3574 04b4 F3       		.byte	0xf3
 3575 04b5 01       		.uleb128 0x1
 3576 04b6 50       		.byte	0x50
 3577 04b7 9F       		.byte	0x9f
 3578 04b8 00000000 		.4byte	0
 3579 04bc 00000000 		.4byte	0
 3580              	.LLST39:
 3581 04c0 00000000 		.4byte	.LFB21
 3582 04c4 02000000 		.4byte	.LCFI13
 3583 04c8 0200     		.2byte	0x2
 3584 04ca 7D       		.byte	0x7d
 3585 04cb 00       		.sleb128 0
 3586 04cc 02000000 		.4byte	.LCFI13
 3587 04d0 28000000 		.4byte	.LFE21
 3588 04d4 0200     		.2byte	0x2
 3589 04d6 7D       		.byte	0x7d
 3590 04d7 08       		.sleb128 8
 3591 04d8 00000000 		.4byte	0
 3592 04dc 00000000 		.4byte	0
 3593              	.LLST40:
 3594 04e0 00000000 		.4byte	.LVL57
 3595 04e4 07000000 		.4byte	.LVL58-1
 3596 04e8 0100     		.2byte	0x1
 3597 04ea 50       		.byte	0x50
 3598 04eb 07000000 		.4byte	.LVL58-1
 3599 04ef 18000000 		.4byte	.LVL59
 3600 04f3 0100     		.2byte	0x1
 3601 04f5 54       		.byte	0x54
 3602 04f6 18000000 		.4byte	.LVL59
 3603 04fa 28000000 		.4byte	.LFE21
 3604 04fe 0400     		.2byte	0x4
 3605 0500 F3       		.byte	0xf3
 3606 0501 01       		.uleb128 0x1
 3607 0502 50       		.byte	0x50
 3608 0503 9F       		.byte	0x9f
 3609 0504 00000000 		.4byte	0
 3610 0508 00000000 		.4byte	0
 3611              	.LLST41:
 3612 050c 08000000 		.4byte	.LVL58
 3613 0510 21000000 		.4byte	.LVL60-1
 3614 0514 0100     		.2byte	0x1
 3615 0516 50       		.byte	0x50
 3616 0517 00000000 		.4byte	0
 3617 051b 00000000 		.4byte	0
 3618              	.LLST42:
 3619 051f 00000000 		.4byte	.LVL61
 3620 0523 04000000 		.4byte	.LVL62
 3621 0527 0100     		.2byte	0x1
 3622 0529 50       		.byte	0x50
 3623 052a 04000000 		.4byte	.LVL62
 3624 052e 0C000000 		.4byte	.LFE22
 3625 0532 0400     		.2byte	0x4
 3626 0534 F3       		.byte	0xf3
 3627 0535 01       		.uleb128 0x1
 3628 0536 50       		.byte	0x50
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 92


 3629 0537 9F       		.byte	0x9f
 3630 0538 00000000 		.4byte	0
 3631 053c 00000000 		.4byte	0
 3632              	.LLST43:
 3633 0540 00000000 		.4byte	.LVL63
 3634 0544 04000000 		.4byte	.LVL64
 3635 0548 0100     		.2byte	0x1
 3636 054a 50       		.byte	0x50
 3637 054b 04000000 		.4byte	.LVL64
 3638 054f 0C000000 		.4byte	.LFE24
 3639 0553 0400     		.2byte	0x4
 3640 0555 F3       		.byte	0xf3
 3641 0556 01       		.uleb128 0x1
 3642 0557 50       		.byte	0x50
 3643 0558 9F       		.byte	0x9f
 3644 0559 00000000 		.4byte	0
 3645 055d 00000000 		.4byte	0
 3646              	.LLST44:
 3647 0561 00000000 		.4byte	.LFB28
 3648 0565 02000000 		.4byte	.LCFI14
 3649 0569 0200     		.2byte	0x2
 3650 056b 7D       		.byte	0x7d
 3651 056c 00       		.sleb128 0
 3652 056d 02000000 		.4byte	.LCFI14
 3653 0571 24000000 		.4byte	.LFE28
 3654 0575 0200     		.2byte	0x2
 3655 0577 7D       		.byte	0x7d
 3656 0578 08       		.sleb128 8
 3657 0579 00000000 		.4byte	0
 3658 057d 00000000 		.4byte	0
 3659              	.LLST45:
 3660 0581 00000000 		.4byte	.LVL65
 3661 0585 07000000 		.4byte	.LVL66-1
 3662 0589 0100     		.2byte	0x1
 3663 058b 50       		.byte	0x50
 3664 058c 07000000 		.4byte	.LVL66-1
 3665 0590 16000000 		.4byte	.LVL67
 3666 0594 0100     		.2byte	0x1
 3667 0596 54       		.byte	0x54
 3668 0597 16000000 		.4byte	.LVL67
 3669 059b 24000000 		.4byte	.LFE28
 3670 059f 0400     		.2byte	0x4
 3671 05a1 F3       		.byte	0xf3
 3672 05a2 01       		.uleb128 0x1
 3673 05a3 50       		.byte	0x50
 3674 05a4 9F       		.byte	0x9f
 3675 05a5 00000000 		.4byte	0
 3676 05a9 00000000 		.4byte	0
 3677              	.LLST46:
 3678 05ad 08000000 		.4byte	.LVL66
 3679 05b1 1B000000 		.4byte	.LVL68-1
 3680 05b5 0100     		.2byte	0x1
 3681 05b7 50       		.byte	0x50
 3682 05b8 00000000 		.4byte	0
 3683 05bc 00000000 		.4byte	0
 3684              	.LLST47:
 3685 05c0 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 93


 3686 05c4 02000000 		.4byte	.LCFI15
 3687 05c8 0200     		.2byte	0x2
 3688 05ca 7D       		.byte	0x7d
 3689 05cb 00       		.sleb128 0
 3690 05cc 02000000 		.4byte	.LCFI15
 3691 05d0 24000000 		.4byte	.LFE29
 3692 05d4 0200     		.2byte	0x2
 3693 05d6 7D       		.byte	0x7d
 3694 05d7 08       		.sleb128 8
 3695 05d8 00000000 		.4byte	0
 3696 05dc 00000000 		.4byte	0
 3697              	.LLST48:
 3698 05e0 00000000 		.4byte	.LVL69
 3699 05e4 07000000 		.4byte	.LVL70-1
 3700 05e8 0100     		.2byte	0x1
 3701 05ea 50       		.byte	0x50
 3702 05eb 07000000 		.4byte	.LVL70-1
 3703 05ef 10000000 		.4byte	.LVL71
 3704 05f3 0100     		.2byte	0x1
 3705 05f5 54       		.byte	0x54
 3706 05f6 10000000 		.4byte	.LVL71
 3707 05fa 24000000 		.4byte	.LFE29
 3708 05fe 0400     		.2byte	0x4
 3709 0600 F3       		.byte	0xf3
 3710 0601 01       		.uleb128 0x1
 3711 0602 50       		.byte	0x50
 3712 0603 9F       		.byte	0x9f
 3713 0604 00000000 		.4byte	0
 3714 0608 00000000 		.4byte	0
 3715              	.LLST49:
 3716 060c 08000000 		.4byte	.LVL70
 3717 0610 1D000000 		.4byte	.LVL72-1
 3718 0614 0100     		.2byte	0x1
 3719 0616 50       		.byte	0x50
 3720 0617 00000000 		.4byte	0
 3721 061b 00000000 		.4byte	0
 3722              	.LLST50:
 3723 061f 00000000 		.4byte	.LFB30
 3724 0623 02000000 		.4byte	.LCFI16
 3725 0627 0200     		.2byte	0x2
 3726 0629 7D       		.byte	0x7d
 3727 062a 00       		.sleb128 0
 3728 062b 02000000 		.4byte	.LCFI16
 3729 062f 28000000 		.4byte	.LFE30
 3730 0633 0200     		.2byte	0x2
 3731 0635 7D       		.byte	0x7d
 3732 0636 08       		.sleb128 8
 3733 0637 00000000 		.4byte	0
 3734 063b 00000000 		.4byte	0
 3735              	.LLST51:
 3736 063f 00000000 		.4byte	.LVL73
 3737 0643 07000000 		.4byte	.LVL74-1
 3738 0647 0100     		.2byte	0x1
 3739 0649 50       		.byte	0x50
 3740 064a 07000000 		.4byte	.LVL74-1
 3741 064e 10000000 		.4byte	.LVL75
 3742 0652 0100     		.2byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 94


 3743 0654 54       		.byte	0x54
 3744 0655 10000000 		.4byte	.LVL75
 3745 0659 28000000 		.4byte	.LFE30
 3746 065d 0400     		.2byte	0x4
 3747 065f F3       		.byte	0xf3
 3748 0660 01       		.uleb128 0x1
 3749 0661 50       		.byte	0x50
 3750 0662 9F       		.byte	0x9f
 3751 0663 00000000 		.4byte	0
 3752 0667 00000000 		.4byte	0
 3753              	.LLST52:
 3754 066b 08000000 		.4byte	.LVL74
 3755 066f 1D000000 		.4byte	.LVL76-1
 3756 0673 0100     		.2byte	0x1
 3757 0675 50       		.byte	0x50
 3758 0676 00000000 		.4byte	0
 3759 067a 00000000 		.4byte	0
 3760              	.LLST53:
 3761 067e 00000000 		.4byte	.LFB31
 3762 0682 02000000 		.4byte	.LCFI17
 3763 0686 0200     		.2byte	0x2
 3764 0688 7D       		.byte	0x7d
 3765 0689 00       		.sleb128 0
 3766 068a 02000000 		.4byte	.LCFI17
 3767 068e 24000000 		.4byte	.LFE31
 3768 0692 0200     		.2byte	0x2
 3769 0694 7D       		.byte	0x7d
 3770 0695 08       		.sleb128 8
 3771 0696 00000000 		.4byte	0
 3772 069a 00000000 		.4byte	0
 3773              	.LLST54:
 3774 069e 00000000 		.4byte	.LVL77
 3775 06a2 07000000 		.4byte	.LVL78-1
 3776 06a6 0100     		.2byte	0x1
 3777 06a8 50       		.byte	0x50
 3778 06a9 07000000 		.4byte	.LVL78-1
 3779 06ad 10000000 		.4byte	.LVL79
 3780 06b1 0100     		.2byte	0x1
 3781 06b3 54       		.byte	0x54
 3782 06b4 10000000 		.4byte	.LVL79
 3783 06b8 24000000 		.4byte	.LFE31
 3784 06bc 0400     		.2byte	0x4
 3785 06be F3       		.byte	0xf3
 3786 06bf 01       		.uleb128 0x1
 3787 06c0 50       		.byte	0x50
 3788 06c1 9F       		.byte	0x9f
 3789 06c2 00000000 		.4byte	0
 3790 06c6 00000000 		.4byte	0
 3791              	.LLST55:
 3792 06ca 08000000 		.4byte	.LVL78
 3793 06ce 1D000000 		.4byte	.LVL80-1
 3794 06d2 0100     		.2byte	0x1
 3795 06d4 50       		.byte	0x50
 3796 06d5 00000000 		.4byte	0
 3797 06d9 00000000 		.4byte	0
 3798              	.LLST56:
 3799 06dd 00000000 		.4byte	.LFB32
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 95


 3800 06e1 02000000 		.4byte	.LCFI18
 3801 06e5 0200     		.2byte	0x2
 3802 06e7 7D       		.byte	0x7d
 3803 06e8 00       		.sleb128 0
 3804 06e9 02000000 		.4byte	.LCFI18
 3805 06ed 24000000 		.4byte	.LFE32
 3806 06f1 0200     		.2byte	0x2
 3807 06f3 7D       		.byte	0x7d
 3808 06f4 08       		.sleb128 8
 3809 06f5 00000000 		.4byte	0
 3810 06f9 00000000 		.4byte	0
 3811              	.LLST57:
 3812 06fd 00000000 		.4byte	.LVL81
 3813 0701 07000000 		.4byte	.LVL82-1
 3814 0705 0100     		.2byte	0x1
 3815 0707 50       		.byte	0x50
 3816 0708 07000000 		.4byte	.LVL82-1
 3817 070c 10000000 		.4byte	.LVL83
 3818 0710 0100     		.2byte	0x1
 3819 0712 54       		.byte	0x54
 3820 0713 10000000 		.4byte	.LVL83
 3821 0717 24000000 		.4byte	.LFE32
 3822 071b 0400     		.2byte	0x4
 3823 071d F3       		.byte	0xf3
 3824 071e 01       		.uleb128 0x1
 3825 071f 50       		.byte	0x50
 3826 0720 9F       		.byte	0x9f
 3827 0721 00000000 		.4byte	0
 3828 0725 00000000 		.4byte	0
 3829              	.LLST58:
 3830 0729 08000000 		.4byte	.LVL82
 3831 072d 1D000000 		.4byte	.LVL84-1
 3832 0731 0100     		.2byte	0x1
 3833 0733 50       		.byte	0x50
 3834 0734 00000000 		.4byte	0
 3835 0738 00000000 		.4byte	0
 3836              	.LLST59:
 3837 073c 00000000 		.4byte	.LFB33
 3838 0740 02000000 		.4byte	.LCFI19
 3839 0744 0200     		.2byte	0x2
 3840 0746 7D       		.byte	0x7d
 3841 0747 00       		.sleb128 0
 3842 0748 02000000 		.4byte	.LCFI19
 3843 074c 1C000000 		.4byte	.LFE33
 3844 0750 0200     		.2byte	0x2
 3845 0752 7D       		.byte	0x7d
 3846 0753 10       		.sleb128 16
 3847 0754 00000000 		.4byte	0
 3848 0758 00000000 		.4byte	0
 3849              	.LLST60:
 3850 075c 00000000 		.4byte	.LVL85
 3851 0760 09000000 		.4byte	.LVL86-1
 3852 0764 0100     		.2byte	0x1
 3853 0766 50       		.byte	0x50
 3854 0767 09000000 		.4byte	.LVL86-1
 3855 076b 0E000000 		.4byte	.LVL87
 3856 076f 0100     		.2byte	0x1
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 96


 3857 0771 55       		.byte	0x55
 3858 0772 0E000000 		.4byte	.LVL87
 3859 0776 1C000000 		.4byte	.LFE33
 3860 077a 0400     		.2byte	0x4
 3861 077c F3       		.byte	0xf3
 3862 077d 01       		.uleb128 0x1
 3863 077e 50       		.byte	0x50
 3864 077f 9F       		.byte	0x9f
 3865 0780 00000000 		.4byte	0
 3866 0784 00000000 		.4byte	0
 3867              	.LLST61:
 3868 0788 00000000 		.4byte	.LVL85
 3869 078c 09000000 		.4byte	.LVL86-1
 3870 0790 0100     		.2byte	0x1
 3871 0792 51       		.byte	0x51
 3872 0793 09000000 		.4byte	.LVL86-1
 3873 0797 14000000 		.4byte	.LVL89
 3874 079b 0100     		.2byte	0x1
 3875 079d 54       		.byte	0x54
 3876 079e 14000000 		.4byte	.LVL89
 3877 07a2 1C000000 		.4byte	.LFE33
 3878 07a6 0400     		.2byte	0x4
 3879 07a8 F3       		.byte	0xf3
 3880 07a9 01       		.uleb128 0x1
 3881 07aa 51       		.byte	0x51
 3882 07ab 9F       		.byte	0x9f
 3883 07ac 00000000 		.4byte	0
 3884 07b0 00000000 		.4byte	0
 3885              	.LLST62:
 3886 07b4 0A000000 		.4byte	.LVL86
 3887 07b8 13000000 		.4byte	.LVL88-1
 3888 07bc 0100     		.2byte	0x1
 3889 07be 50       		.byte	0x50
 3890 07bf 00000000 		.4byte	0
 3891 07c3 00000000 		.4byte	0
 3892              		.section	.debug_aranges,"",%progbits
 3893 0000 54010000 		.4byte	0x154
 3894 0004 0200     		.2byte	0x2
 3895 0006 00000000 		.4byte	.Ldebug_info0
 3896 000a 04       		.byte	0x4
 3897 000b 00       		.byte	0
 3898 000c 0000     		.2byte	0
 3899 000e 0000     		.2byte	0
 3900 0010 00000000 		.4byte	.LFB0
 3901 0014 58000000 		.4byte	.LFE0-.LFB0
 3902 0018 00000000 		.4byte	.LFB1
 3903 001c 1C000000 		.4byte	.LFE1-.LFB1
 3904 0020 00000000 		.4byte	.LFB2
 3905 0024 1C000000 		.4byte	.LFE2-.LFB2
 3906 0028 00000000 		.4byte	.LFB3
 3907 002c 1C000000 		.4byte	.LFE3-.LFB3
 3908 0030 00000000 		.4byte	.LFB4
 3909 0034 28000000 		.4byte	.LFE4-.LFB4
 3910 0038 00000000 		.4byte	.LFB5
 3911 003c 28000000 		.4byte	.LFE5-.LFB5
 3912 0040 00000000 		.4byte	.LFB6
 3913 0044 28000000 		.4byte	.LFE6-.LFB6
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 97


 3914 0048 00000000 		.4byte	.LFB7
 3915 004c 2C000000 		.4byte	.LFE7-.LFB7
 3916 0050 00000000 		.4byte	.LFB8
 3917 0054 10000000 		.4byte	.LFE8-.LFB8
 3918 0058 00000000 		.4byte	.LFB9
 3919 005c 28000000 		.4byte	.LFE9-.LFB9
 3920 0060 00000000 		.4byte	.LFB10
 3921 0064 28000000 		.4byte	.LFE10-.LFB10
 3922 0068 00000000 		.4byte	.LFB11
 3923 006c 2C000000 		.4byte	.LFE11-.LFB11
 3924 0070 00000000 		.4byte	.LFB12
 3925 0074 28000000 		.4byte	.LFE12-.LFB12
 3926 0078 00000000 		.4byte	.LFB13
 3927 007c 0C000000 		.4byte	.LFE13-.LFB13
 3928 0080 00000000 		.4byte	.LFB14
 3929 0084 0C000000 		.4byte	.LFE14-.LFB14
 3930 0088 00000000 		.4byte	.LFB15
 3931 008c 28000000 		.4byte	.LFE15-.LFB15
 3932 0090 00000000 		.4byte	.LFB16
 3933 0094 0C000000 		.4byte	.LFE16-.LFB16
 3934 0098 00000000 		.4byte	.LFB17
 3935 009c 0C000000 		.4byte	.LFE17-.LFB17
 3936 00a0 00000000 		.4byte	.LFB18
 3937 00a4 24000000 		.4byte	.LFE18-.LFB18
 3938 00a8 00000000 		.4byte	.LFB19
 3939 00ac 0C000000 		.4byte	.LFE19-.LFB19
 3940 00b0 00000000 		.4byte	.LFB20
 3941 00b4 0C000000 		.4byte	.LFE20-.LFB20
 3942 00b8 00000000 		.4byte	.LFB21
 3943 00bc 28000000 		.4byte	.LFE21-.LFB21
 3944 00c0 00000000 		.4byte	.LFB22
 3945 00c4 0C000000 		.4byte	.LFE22-.LFB22
 3946 00c8 00000000 		.4byte	.LFB23
 3947 00cc 0C000000 		.4byte	.LFE23-.LFB23
 3948 00d0 00000000 		.4byte	.LFB24
 3949 00d4 0C000000 		.4byte	.LFE24-.LFB24
 3950 00d8 00000000 		.4byte	.LFB25
 3951 00dc 0C000000 		.4byte	.LFE25-.LFB25
 3952 00e0 00000000 		.4byte	.LFB26
 3953 00e4 0C000000 		.4byte	.LFE26-.LFB26
 3954 00e8 00000000 		.4byte	.LFB27
 3955 00ec 0C000000 		.4byte	.LFE27-.LFB27
 3956 00f0 00000000 		.4byte	.LFB28
 3957 00f4 24000000 		.4byte	.LFE28-.LFB28
 3958 00f8 00000000 		.4byte	.LFB29
 3959 00fc 24000000 		.4byte	.LFE29-.LFB29
 3960 0100 00000000 		.4byte	.LFB30
 3961 0104 28000000 		.4byte	.LFE30-.LFB30
 3962 0108 00000000 		.4byte	.LFB31
 3963 010c 24000000 		.4byte	.LFE31-.LFB31
 3964 0110 00000000 		.4byte	.LFB32
 3965 0114 24000000 		.4byte	.LFE32-.LFB32
 3966 0118 00000000 		.4byte	.LFB33
 3967 011c 1C000000 		.4byte	.LFE33-.LFB33
 3968 0120 00000000 		.4byte	.LFB34
 3969 0124 14000000 		.4byte	.LFE34-.LFB34
 3970 0128 00000000 		.4byte	.LFB35
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 98


 3971 012c 0C000000 		.4byte	.LFE35-.LFB35
 3972 0130 00000000 		.4byte	.LFB36
 3973 0134 0C000000 		.4byte	.LFE36-.LFB36
 3974 0138 00000000 		.4byte	.LFB37
 3975 013c 0C000000 		.4byte	.LFE37-.LFB37
 3976 0140 00000000 		.4byte	.LFB38
 3977 0144 0C000000 		.4byte	.LFE38-.LFB38
 3978 0148 00000000 		.4byte	.LFB39
 3979 014c 0C000000 		.4byte	.LFE39-.LFB39
 3980 0150 00000000 		.4byte	0
 3981 0154 00000000 		.4byte	0
 3982              		.section	.debug_ranges,"",%progbits
 3983              	.Ldebug_ranges0:
 3984 0000 1E000000 		.4byte	.LBB8
 3985 0004 20000000 		.4byte	.LBE8
 3986 0008 24000000 		.4byte	.LBB14
 3987 000c 28000000 		.4byte	.LBE14
 3988 0010 00000000 		.4byte	0
 3989 0014 00000000 		.4byte	0
 3990 0018 20000000 		.4byte	.LBB11
 3991 001c 24000000 		.4byte	.LBE11
 3992 0020 28000000 		.4byte	.LBB15
 3993 0024 2A000000 		.4byte	.LBE15
 3994 0028 00000000 		.4byte	0
 3995 002c 00000000 		.4byte	0
 3996 0030 2A000000 		.4byte	.LBB16
 3997 0034 2E000000 		.4byte	.LBE16
 3998 0038 32000000 		.4byte	.LBB19
 3999 003c 34000000 		.4byte	.LBE19
 4000 0040 00000000 		.4byte	0
 4001 0044 00000000 		.4byte	0
 4002 0048 00000000 		.4byte	.LFB0
 4003 004c 58000000 		.4byte	.LFE0
 4004 0050 00000000 		.4byte	.LFB1
 4005 0054 1C000000 		.4byte	.LFE1
 4006 0058 00000000 		.4byte	.LFB2
 4007 005c 1C000000 		.4byte	.LFE2
 4008 0060 00000000 		.4byte	.LFB3
 4009 0064 1C000000 		.4byte	.LFE3
 4010 0068 00000000 		.4byte	.LFB4
 4011 006c 28000000 		.4byte	.LFE4
 4012 0070 00000000 		.4byte	.LFB5
 4013 0074 28000000 		.4byte	.LFE5
 4014 0078 00000000 		.4byte	.LFB6
 4015 007c 28000000 		.4byte	.LFE6
 4016 0080 00000000 		.4byte	.LFB7
 4017 0084 2C000000 		.4byte	.LFE7
 4018 0088 00000000 		.4byte	.LFB8
 4019 008c 10000000 		.4byte	.LFE8
 4020 0090 00000000 		.4byte	.LFB9
 4021 0094 28000000 		.4byte	.LFE9
 4022 0098 00000000 		.4byte	.LFB10
 4023 009c 28000000 		.4byte	.LFE10
 4024 00a0 00000000 		.4byte	.LFB11
 4025 00a4 2C000000 		.4byte	.LFE11
 4026 00a8 00000000 		.4byte	.LFB12
 4027 00ac 28000000 		.4byte	.LFE12
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 99


 4028 00b0 00000000 		.4byte	.LFB13
 4029 00b4 0C000000 		.4byte	.LFE13
 4030 00b8 00000000 		.4byte	.LFB14
 4031 00bc 0C000000 		.4byte	.LFE14
 4032 00c0 00000000 		.4byte	.LFB15
 4033 00c4 28000000 		.4byte	.LFE15
 4034 00c8 00000000 		.4byte	.LFB16
 4035 00cc 0C000000 		.4byte	.LFE16
 4036 00d0 00000000 		.4byte	.LFB17
 4037 00d4 0C000000 		.4byte	.LFE17
 4038 00d8 00000000 		.4byte	.LFB18
 4039 00dc 24000000 		.4byte	.LFE18
 4040 00e0 00000000 		.4byte	.LFB19
 4041 00e4 0C000000 		.4byte	.LFE19
 4042 00e8 00000000 		.4byte	.LFB20
 4043 00ec 0C000000 		.4byte	.LFE20
 4044 00f0 00000000 		.4byte	.LFB21
 4045 00f4 28000000 		.4byte	.LFE21
 4046 00f8 00000000 		.4byte	.LFB22
 4047 00fc 0C000000 		.4byte	.LFE22
 4048 0100 00000000 		.4byte	.LFB23
 4049 0104 0C000000 		.4byte	.LFE23
 4050 0108 00000000 		.4byte	.LFB24
 4051 010c 0C000000 		.4byte	.LFE24
 4052 0110 00000000 		.4byte	.LFB25
 4053 0114 0C000000 		.4byte	.LFE25
 4054 0118 00000000 		.4byte	.LFB26
 4055 011c 0C000000 		.4byte	.LFE26
 4056 0120 00000000 		.4byte	.LFB27
 4057 0124 0C000000 		.4byte	.LFE27
 4058 0128 00000000 		.4byte	.LFB28
 4059 012c 24000000 		.4byte	.LFE28
 4060 0130 00000000 		.4byte	.LFB29
 4061 0134 24000000 		.4byte	.LFE29
 4062 0138 00000000 		.4byte	.LFB30
 4063 013c 28000000 		.4byte	.LFE30
 4064 0140 00000000 		.4byte	.LFB31
 4065 0144 24000000 		.4byte	.LFE31
 4066 0148 00000000 		.4byte	.LFB32
 4067 014c 24000000 		.4byte	.LFE32
 4068 0150 00000000 		.4byte	.LFB33
 4069 0154 1C000000 		.4byte	.LFE33
 4070 0158 00000000 		.4byte	.LFB34
 4071 015c 14000000 		.4byte	.LFE34
 4072 0160 00000000 		.4byte	.LFB35
 4073 0164 0C000000 		.4byte	.LFE35
 4074 0168 00000000 		.4byte	.LFB36
 4075 016c 0C000000 		.4byte	.LFE36
 4076 0170 00000000 		.4byte	.LFB37
 4077 0174 0C000000 		.4byte	.LFE37
 4078 0178 00000000 		.4byte	.LFB38
 4079 017c 0C000000 		.4byte	.LFE38
 4080 0180 00000000 		.4byte	.LFB39
 4081 0184 0C000000 		.4byte	.LFE39
 4082 0188 00000000 		.4byte	0
 4083 018c 00000000 		.4byte	0
 4084              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 100


 4085              	.Ldebug_line0:
 4086 0000 F1030000 		.section	.debug_str,"MS",%progbits,1
 4086      02004D00 
 4086      00000201 
 4086      FB0E0D00 
 4086      01010101 
 4087              	.LASF46:
 4088 0000 636F756E 		.ascii	"count\000"
 4088      7400
 4089              	.LASF23:
 4090 0006 50574D5F 		.ascii	"PWM_Enable\000"
 4090      456E6162 
 4090      6C6500
 4091              	.LASF81:
 4092 0011 43794578 		.ascii	"CyExitCriticalSection\000"
 4092      69744372 
 4092      69746963 
 4092      616C5365 
 4092      6374696F 
 4093              	.LASF37:
 4094 0027 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 4094      53657450 
 4094      574D5379 
 4094      6E634B69 
 4094      6C6C00
 4095              	.LASF19:
 4096 003a 70657269 		.ascii	"period\000"
 4096      6F6400
 4097              	.LASF7:
 4098 0041 6C6F6E67 		.ascii	"long long unsigned int\000"
 4098      206C6F6E 
 4098      6720756E 
 4098      7369676E 
 4098      65642069 
 4099              	.LASF63:
 4100 0058 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 4100      53657443 
 4100      61707475 
 4100      72654D6F 
 4100      646500
 4101              	.LASF30:
 4102 006b 71644D6F 		.ascii	"qdMode\000"
 4102      646500
 4103              	.LASF45:
 4104 0072 50574D5F 		.ascii	"PWM_WriteCounter\000"
 4104      57726974 
 4104      65436F75 
 4104      6E746572 
 4104      00
 4105              	.LASF49:
 4106 0083 50574D5F 		.ascii	"PWM_ReadCounter\000"
 4106      52656164 
 4106      436F756E 
 4106      74657200 
 4107              	.LASF6:
 4108 0093 6C6F6E67 		.ascii	"long long int\000"
 4108      206C6F6E 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 101


 4108      6720696E 
 4108      7400
 4109              	.LASF0:
 4110 00a1 7369676E 		.ascii	"signed char\000"
 4110      65642063 
 4110      68617200 
 4111              	.LASF58:
 4112 00ad 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 4112      57726974 
 4112      65436F6D 
 4112      70617265 
 4112      42756600 
 4113              	.LASF16:
 4114 00c1 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4114      53657449 
 4114      6E746572 
 4114      72757074 
 4114      4D6F6465 
 4115              	.LASF74:
 4116 00d6 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4116      436C6561 
 4116      72496E74 
 4116      65727275 
 4116      707400
 4117              	.LASF77:
 4118 00e9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 4118      6E657261 
 4118      7465645F 
 4118      536F7572 
 4118      63655C50 
 4119              	.LASF4:
 4120 0108 6C6F6E67 		.ascii	"long int\000"
 4120      20696E74 
 4120      00
 4121              	.LASF9:
 4122 0111 75696E74 		.ascii	"uint8\000"
 4122      3800
 4123              	.LASF12:
 4124 0117 646F7562 		.ascii	"double\000"
 4124      6C6500
 4125              	.LASF60:
 4126 011e 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 4126      52656164 
 4126      436F6D70 
 4126      61726542 
 4126      756600
 4127              	.LASF51:
 4128 0131 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 4128      53657443 
 4128      6F6D7061 
 4128      72655377 
 4128      617000
 4129              	.LASF25:
 4130 0144 50574D5F 		.ascii	"PWM_Stop\000"
 4130      53746F70 
 4130      00
 4131              	.LASF43:
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 102


 4132 014d 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 4132      53657450 
 4132      574D496E 
 4132      76657274 
 4132      00
 4133              	.LASF10:
 4134 015e 75696E74 		.ascii	"uint32\000"
 4134      333200
 4135              	.LASF66:
 4136 0165 50574D5F 		.ascii	"PWM_SetStartMode\000"
 4136      53657453 
 4136      74617274 
 4136      4D6F6465 
 4136      00
 4137              	.LASF64:
 4138 0176 74726967 		.ascii	"triggerMode\000"
 4138      6765724D 
 4138      6F646500 
 4139              	.LASF44:
 4140 0182 6D61736B 		.ascii	"mask\000"
 4140      00
 4141              	.LASF71:
 4142 0187 50574D5F 		.ascii	"PWM_ReadStatus\000"
 4142      52656164 
 4142      53746174 
 4142      757300
 4143              	.LASF42:
 4144 0196 64656164 		.ascii	"deadTime\000"
 4144      54696D65 
 4144      00
 4145              	.LASF67:
 4146 019f 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4146      53657453 
 4146      746F704D 
 4146      6F646500 
 4147              	.LASF8:
 4148 01af 756E7369 		.ascii	"unsigned int\000"
 4148      676E6564 
 4148      20696E74 
 4148      00
 4149              	.LASF41:
 4150 01bc 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 4150      53657450 
 4150      574D4465 
 4150      61645469 
 4150      6D6500
 4151              	.LASF70:
 4152 01cf 636F6D6D 		.ascii	"command\000"
 4152      616E6400 
 4153              	.LASF5:
 4154 01d7 6C6F6E67 		.ascii	"long unsigned int\000"
 4154      20756E73 
 4154      69676E65 
 4154      6420696E 
 4154      7400
 4155              	.LASF36:
 4156 01e9 6D6F6465 		.ascii	"modeMask\000"
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 103


 4156      4D61736B 
 4156      00
 4157              	.LASF80:
 4158 01f2 4379456E 		.ascii	"CyEnterCriticalSection\000"
 4158      74657243 
 4158      72697469 
 4158      63616C53 
 4158      65637469 
 4159              	.LASF3:
 4160 0209 73686F72 		.ascii	"short unsigned int\000"
 4160      7420756E 
 4160      7369676E 
 4160      65642069 
 4160      6E7400
 4161              	.LASF78:
 4162 021c 433A5C55 		.ascii	"C:\\Users\\vrnk\\Desktop\\ES100 FW -049\\FW\\SCB_Bo"
 4162      73657273 
 4162      5C76726E 
 4162      6B5C4465 
 4162      736B746F 
 4163 0249 6F746C6F 		.ascii	"otloader_42xx\\UART_Bootloader.cydsn\000"
 4163      61646572 
 4163      5F343278 
 4163      785C5541 
 4163      52545F42 
 4164              	.LASF31:
 4165 026d 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 4165      53657450 
 4165      72657363 
 4165      616C6572 
 4165      00
 4166              	.LASF24:
 4167 027e 50574D5F 		.ascii	"PWM_Start\000"
 4167      53746172 
 4167      7400
 4168              	.LASF69:
 4169 0288 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4169      54726967 
 4169      67657243 
 4169      6F6D6D61 
 4169      6E6400
 4170              	.LASF17:
 4171 029b 50574D5F 		.ascii	"PWM_WritePeriod\000"
 4171      57726974 
 4171      65506572 
 4171      696F6400 
 4172              	.LASF14:
 4173 02ab 72656733 		.ascii	"reg32\000"
 4173      3200
 4174              	.LASF79:
 4175 02b1 50574D5F 		.ascii	"PWM_initVar\000"
 4175      696E6974 
 4175      56617200 
 4176              	.LASF50:
 4177 02bd 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 4177      52656164 
 4177      50657269 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 104


 4177      6F6400
 4178              	.LASF15:
 4179 02cc 73697A65 		.ascii	"sizetype\000"
 4179      74797065 
 4179      00
 4180              	.LASF38:
 4181 02d5 73796E63 		.ascii	"syncKillEnable\000"
 4181      4B696C6C 
 4181      456E6162 
 4181      6C6500
 4182              	.LASF21:
 4183 02e4 636F6D70 		.ascii	"compare\000"
 4183      61726500 
 4184              	.LASF33:
 4185 02ec 50574D5F 		.ascii	"PWM_SetOneShot\000"
 4185      5365744F 
 4185      6E655368 
 4185      6F7400
 4186              	.LASF55:
 4187 02fb 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 4187      52656164 
 4187      50657269 
 4187      6F644275 
 4187      6600
 4188              	.LASF11:
 4189 030d 666C6F61 		.ascii	"float\000"
 4189      7400
 4190              	.LASF32:
 4191 0313 70726573 		.ascii	"prescaler\000"
 4191      63616C65 
 4191      7200
 4192              	.LASF61:
 4193 031d 50574D5F 		.ascii	"PWM_ReadCapture\000"
 4193      52656164 
 4193      43617074 
 4193      75726500 
 4194              	.LASF56:
 4195 032d 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 4195      53657450 
 4195      6572696F 
 4195      64537761 
 4195      7000
 4196              	.LASF76:
 4197 033f 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4197      4320342E 
 4197      372E3320 
 4197      32303133 
 4197      30333132 
 4198 0372 616E6368 		.ascii	"anch revision 196615]\000"
 4198      20726576 
 4198      6973696F 
 4198      6E203139 
 4198      36363135 
 4199              	.LASF1:
 4200 0388 756E7369 		.ascii	"unsigned char\000"
 4200      676E6564 
 4200      20636861 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 105


 4200      7200
 4201              	.LASF22:
 4202 0396 50574D5F 		.ascii	"PWM_Init\000"
 4202      496E6974 
 4202      00
 4203              	.LASF40:
 4204 039f 73746F70 		.ascii	"stopOnKillEnable\000"
 4204      4F6E4B69 
 4204      6C6C456E 
 4204      61626C65 
 4204      00
 4205              	.LASF35:
 4206 03b0 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 4206      53657450 
 4206      574D4D6F 
 4206      646500
 4207              	.LASF2:
 4208 03bf 73686F72 		.ascii	"short int\000"
 4208      7420696E 
 4208      7400
 4209              	.LASF72:
 4210 03c9 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4210      47657449 
 4210      6E746572 
 4210      72757074 
 4210      536F7572 
 4211              	.LASF18:
 4212 03e6 696E7465 		.ascii	"interruptMask\000"
 4212      72727570 
 4212      744D6173 
 4212      6B00
 4213              	.LASF53:
 4214 03f4 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 4214      57726974 
 4214      65506572 
 4214      696F6442 
 4214      756600
 4215              	.LASF28:
 4216 0407 50574D5F 		.ascii	"PWM_SetQDMode\000"
 4216      53657451 
 4216      444D6F64 
 4216      6500
 4217              	.LASF13:
 4218 0415 63686172 		.ascii	"char\000"
 4218      00
 4219              	.LASF29:
 4220 041a 6D6F6465 		.ascii	"mode\000"
 4220      00
 4221              	.LASF75:
 4222 041f 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4222      53657449 
 4222      6E746572 
 4222      72757074 
 4222      00
 4223              	.LASF65:
 4224 0430 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 4224      53657452 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 106


 4224      656C6F61 
 4224      644D6F64 
 4224      6500
 4225              	.LASF48:
 4226 0442 636F756E 		.ascii	"counterMode\000"
 4226      7465724D 
 4226      6F646500 
 4227              	.LASF59:
 4228 044e 636F6D70 		.ascii	"compareBuf\000"
 4228      61726542 
 4228      756600
 4229              	.LASF54:
 4230 0459 70657269 		.ascii	"periodBuf\000"
 4230      6F644275 
 4230      6600
 4231              	.LASF62:
 4232 0463 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 4232      52656164 
 4232      43617074 
 4232      75726542 
 4232      756600
 4233              	.LASF26:
 4234 0476 656E6162 		.ascii	"enableInterrupts\000"
 4234      6C65496E 
 4234      74657272 
 4234      75707473 
 4234      00
 4235              	.LASF68:
 4236 0487 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4236      53657443 
 4236      6F756E74 
 4236      4D6F6465 
 4236      00
 4237              	.LASF34:
 4238 0498 6F6E6553 		.ascii	"oneShotEnable\000"
 4238      686F7445 
 4238      6E61626C 
 4238      6500
 4239              	.LASF27:
 4240 04a6 50574D5F 		.ascii	"PWM_SetMode\000"
 4240      5365744D 
 4240      6F646500 
 4241              	.LASF39:
 4242 04b2 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 4242      53657450 
 4242      574D5374 
 4242      6F704F6E 
 4242      4B696C6C 
 4243              	.LASF47:
 4244 04c7 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 4244      53657443 
 4244      6F756E74 
 4244      65724D6F 
 4244      646500
 4245              	.LASF52:
 4246 04da 73776170 		.ascii	"swapEnable\000"
 4246      456E6162 
ARM GAS  C:\Users\vrnk\AppData\Local\Temp\cc4M7ycv.s 			page 107


 4246      6C6500
 4247              	.LASF73:
 4248 04e5 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4248      47657449 
 4248      6E746572 
 4248      72757074 
 4248      536F7572 
 4249              	.LASF20:
 4250 04fc 50574D5F 		.ascii	"PWM_WriteCompare\000"
 4250      57726974 
 4250      65436F6D 
 4250      70617265 
 4250      00
 4251              	.LASF57:
 4252 050d 50574D5F 		.ascii	"PWM_ReadCompare\000"
 4252      52656164 
 4252      436F6D70 
 4252      61726500 
 4253              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
